62b75b1e00d316923afb1b9d90b494b9
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _jsxRuntime = require("react/jsx-runtime");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var React = require('react');
var View = require("../Libraries/Components/View/View");
var requireNativeComponent = require("../Libraries/ReactNative/requireNativeComponent").default;
var RCTScrollView = requireNativeComponent('RCTScrollView');
function mockScrollView(BaseComponent) {
  var ScrollViewMock = function (_BaseComponent) {
    (0, _inherits2.default)(ScrollViewMock, _BaseComponent);
    var _super = _createSuper(ScrollViewMock);
    function ScrollViewMock() {
      (0, _classCallCheck2.default)(this, ScrollViewMock);
      return _super.apply(this, arguments);
    }
    (0, _createClass2.default)(ScrollViewMock, [{
      key: "render",
      value: function render() {
        return (0, _jsxRuntime.jsxs)(RCTScrollView, _objectSpread(_objectSpread({}, this.props), {}, {
          children: [this.props.refreshControl, (0, _jsxRuntime.jsx)(View, {
            children: this.props.children
          })]
        }));
      }
    }]);
    return ScrollViewMock;
  }(BaseComponent);
  return ScrollViewMock;
}
module.exports = mockScrollView;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9kZWZpbmVQcm9wZXJ0eTIiLCJfY2xhc3NDYWxsQ2hlY2syIiwiX2NyZWF0ZUNsYXNzMiIsIl9pbmhlcml0czIiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjIiLCJfZ2V0UHJvdG90eXBlT2YyIiwiX2pzeFJ1bnRpbWUiLCJvd25LZXlzIiwiZSIsInIiLCJ0IiwiT2JqZWN0Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsIm8iLCJmaWx0ZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwicHVzaCIsImFwcGx5IiwiX29iamVjdFNwcmVhZCIsImFyZ3VtZW50cyIsImxlbmd0aCIsImZvckVhY2giLCJkZWZhdWx0IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJkZWZpbmVQcm9wZXJ0eSIsIl9jcmVhdGVTdXBlciIsIkRlcml2ZWQiLCJoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIl9jcmVhdGVTdXBlckludGVybmFsIiwiU3VwZXIiLCJyZXN1bHQiLCJOZXdUYXJnZXQiLCJjb25zdHJ1Y3RvciIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJzaGFtIiwiUHJveHkiLCJCb29sZWFuIiwicHJvdG90eXBlIiwidmFsdWVPZiIsImNhbGwiLCJSZWFjdCIsIlZpZXciLCJyZXF1aXJlTmF0aXZlQ29tcG9uZW50IiwiUkNUU2Nyb2xsVmlldyIsIm1vY2tTY3JvbGxWaWV3IiwiQmFzZUNvbXBvbmVudCIsIlNjcm9sbFZpZXdNb2NrIiwiX0Jhc2VDb21wb25lbnQiLCJfc3VwZXIiLCJrZXkiLCJ2YWx1ZSIsInJlbmRlciIsImpzeHMiLCJwcm9wcyIsImNoaWxkcmVuIiwicmVmcmVzaENvbnRyb2wiLCJqc3giLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsibW9ja1Njcm9sbFZpZXcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE1ldGEgUGxhdGZvcm1zLCBJbmMuIGFuZCBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIEBmbG93IHN0cmljdC1sb2NhbFxuICovXG5cbi8qIGVzbGludC1lbnYgamVzdCAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IFZpZXcgPSByZXF1aXJlKCcuLi9MaWJyYXJpZXMvQ29tcG9uZW50cy9WaWV3L1ZpZXcnKTtcblxuY29uc3QgcmVxdWlyZU5hdGl2ZUNvbXBvbmVudCA9XG4gIHJlcXVpcmUoJy4uL0xpYnJhcmllcy9SZWFjdE5hdGl2ZS9yZXF1aXJlTmF0aXZlQ29tcG9uZW50JykuZGVmYXVsdDtcbmNvbnN0IFJDVFNjcm9sbFZpZXc6ICRGbG93Rml4TWUgPSByZXF1aXJlTmF0aXZlQ29tcG9uZW50KCdSQ1RTY3JvbGxWaWV3Jyk7XG5cbmZ1bmN0aW9uIG1vY2tTY3JvbGxWaWV3KEJhc2VDb21wb25lbnQ6ICRGbG93Rml4TWUpIHtcbiAgY2xhc3MgU2Nyb2xsVmlld01vY2sgZXh0ZW5kcyBCYXNlQ29tcG9uZW50IHtcbiAgICByZW5kZXIoKTogUmVhY3QuRWxlbWVudDx0eXBlb2YgUkNUU2Nyb2xsVmlldz4ge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPFJDVFNjcm9sbFZpZXcgey4uLnRoaXMucHJvcHN9PlxuICAgICAgICAgIHt0aGlzLnByb3BzLnJlZnJlc2hDb250cm9sfVxuICAgICAgICAgIDxWaWV3Pnt0aGlzLnByb3BzLmNoaWxkcmVufTwvVmlldz5cbiAgICAgICAgPC9SQ1RTY3JvbGxWaWV3PlxuICAgICAgKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIFNjcm9sbFZpZXdNb2NrO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IChtb2NrU2Nyb2xsVmlldzogJEZsb3dGaXhNZSk7XG4iXSwibWFwcGluZ3MiOiJBQVlBLFlBQVk7O0FBQUMsSUFBQUEsc0JBQUEsR0FBQUMsT0FBQTtBQUFBLElBQUFDLGdCQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFBQSxJQUFBRSxnQkFBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQUEsSUFBQUcsYUFBQSxHQUFBSixzQkFBQSxDQUFBQyxPQUFBO0FBQUEsSUFBQUksVUFBQSxHQUFBTCxzQkFBQSxDQUFBQyxPQUFBO0FBQUEsSUFBQUssMkJBQUEsR0FBQU4sc0JBQUEsQ0FBQUMsT0FBQTtBQUFBLElBQUFNLGdCQUFBLEdBQUFQLHNCQUFBLENBQUFDLE9BQUE7QUFBQSxJQUFBTyxXQUFBLEdBQUFQLE9BQUE7QUFBQSxTQUFBUSxRQUFBQyxDQUFBLEVBQUFDLENBQUEsUUFBQUMsQ0FBQSxHQUFBQyxNQUFBLENBQUFDLElBQUEsQ0FBQUosQ0FBQSxPQUFBRyxNQUFBLENBQUFFLHFCQUFBLFFBQUFDLENBQUEsR0FBQUgsTUFBQSxDQUFBRSxxQkFBQSxDQUFBTCxDQUFBLEdBQUFDLENBQUEsS0FBQUssQ0FBQSxHQUFBQSxDQUFBLENBQUFDLE1BQUEsV0FBQU4sQ0FBQSxXQUFBRSxNQUFBLENBQUFLLHdCQUFBLENBQUFSLENBQUEsRUFBQUMsQ0FBQSxFQUFBUSxVQUFBLE9BQUFQLENBQUEsQ0FBQVEsSUFBQSxDQUFBQyxLQUFBLENBQUFULENBQUEsRUFBQUksQ0FBQSxZQUFBSixDQUFBO0FBQUEsU0FBQVUsY0FBQVosQ0FBQSxhQUFBQyxDQUFBLE1BQUFBLENBQUEsR0FBQVksU0FBQSxDQUFBQyxNQUFBLEVBQUFiLENBQUEsVUFBQUMsQ0FBQSxXQUFBVyxTQUFBLENBQUFaLENBQUEsSUFBQVksU0FBQSxDQUFBWixDQUFBLFFBQUFBLENBQUEs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