615ea90e6984867308eb94fa0458fe4d
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _config = require("../config");
var _Input = _interopRequireDefault(require("../input/Input"));
var _jsxRuntime = require("react/jsx-runtime");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var __rest = this && this.__rest || function (s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
var ListItemInput = function ListItemInput(_a) {
  var inputStyle = _a.inputStyle,
    inputContainerStyle = _a.inputContainerStyle,
    containerStyle = _a.containerStyle,
    props = __rest(_a, ["inputStyle", "inputContainerStyle", "containerStyle"]);
  return (0, _jsxRuntime.jsx)(_Input.default, _objectSpread(_objectSpread({
    renderErrorMessage: false
  }, props), {}, {
    inputStyle: _reactNative.StyleSheet.flatten([styles.input, inputStyle]),
    inputContainerStyle: _reactNative.StyleSheet.flatten([styles.inputContainer, inputContainerStyle]),
    containerStyle: _reactNative.StyleSheet.flatten([styles.container, containerStyle])
  }));
};
var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    paddingRight: 0
  },
  inputContainer: {
    flex: 1,
    borderBottomWidth: 0,
    width: null,
    height: null
  },
  input: {
    flex: 1,
    textAlign: 'right',
    width: null,
    height: null
  }
});
var _default = (0, _config.withTheme)(ListItemInput, 'ListItemInput');
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9jb25maWciLCJfSW5wdXQiLCJfanN4UnVudGltZSIsIm93bktleXMiLCJlIiwiciIsInQiLCJPYmplY3QiLCJrZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwibyIsImZpbHRlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJwdXNoIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiZm9yRWFjaCIsIl9kZWZpbmVQcm9wZXJ0eTIiLCJkZWZhdWx0IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJkZWZpbmVQcm9wZXJ0eSIsIl9fcmVzdCIsInMiLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaW5kZXhPZiIsImkiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIkxpc3RJdGVtSW5wdXQiLCJfYSIsImlucHV0U3R5bGUiLCJpbnB1dENvbnRhaW5lclN0eWxlIiwiY29udGFpbmVyU3R5bGUiLCJwcm9wcyIsImpzeCIsInJlbmRlckVycm9yTWVzc2FnZSIsIlN0eWxlU2hlZXQiLCJmbGF0dGVuIiwic3R5bGVzIiwiaW5wdXQiLCJpbnB1dENvbnRhaW5lciIsImNvbnRhaW5lciIsImNyZWF0ZSIsImZsZXgiLCJwYWRkaW5nUmlnaHQiLCJib3JkZXJCb3R0b21XaWR0aCIsIndpZHRoIiwiaGVpZ2h0IiwidGV4dEFsaWduIiwiX2RlZmF1bHQiLCJ3aXRoVGhlbWUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiTGlzdEl0ZW1JbnB1dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19yZXN0ID0gKHRoaXMgJiYgdGhpcy5fX3Jlc3QpIHx8IGZ1bmN0aW9uIChzLCBlKSB7XG4gICAgdmFyIHQgPSB7fTtcbiAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkgJiYgZS5pbmRleE9mKHApIDwgMClcbiAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgaWYgKHMgIT0gbnVsbCAmJiB0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gXCJmdW5jdGlvblwiKVxuICAgICAgICBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoZS5pbmRleE9mKHBbaV0pIDwgMCAmJiBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwocywgcFtpXSkpXG4gICAgICAgICAgICAgICAgdFtwW2ldXSA9IHNbcFtpXV07XG4gICAgICAgIH1cbiAgICByZXR1cm4gdDtcbn07XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgU3R5bGVTaGVldCB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgeyB3aXRoVGhlbWUgfSBmcm9tICcuLi9jb25maWcnO1xuaW1wb3J0IElucHV0IGZyb20gJy4uL2lucHV0L0lucHV0JztcbmNvbnN0IExpc3RJdGVtSW5wdXQgPSAoX2EpID0+IHtcbiAgICB2YXIgeyBpbnB1dFN0eWxlLCBpbnB1dENvbnRhaW5lclN0eWxlLCBjb250YWluZXJTdHlsZSB9ID0gX2EsIHByb3BzID0gX19yZXN0KF9hLCBbXCJpbnB1dFN0eWxlXCIsIFwiaW5wdXRDb250YWluZXJTdHlsZVwiLCBcImNvbnRhaW5lclN0eWxlXCJdKTtcbiAgICByZXR1cm4gKDxJbnB1dCByZW5kZXJFcnJvck1lc3NhZ2U9e2ZhbHNlfSB7Li4ucHJvcHN9IGlucHV0U3R5bGU9e1N0eWxlU2hlZXQuZmxhdHRlbihbc3R5bGVzLmlucHV0LCBpbnB1dFN0eWxlXSl9IGlucHV0Q29udGFpbmVyU3R5bGU9e1N0eWxlU2hlZXQuZmxhdHRlbihbXG4gICAgICAgICAgICBzdHlsZXMuaW5wdXRDb250YWluZXIsXG4gICAgICAgICAgICBpbnB1dENvbnRhaW5lclN0eWxlLFxuICAgICAgICBdKX0gY29udGFpbmVyU3R5bGU9e1N0eWxlU2hlZXQuZmxhdHRlbihbc3R5bGVzLmNvbnRhaW5lciwgY29udGFpbmVyU3R5bGVdKX0vPik7XG59O1xuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICAgIGNvbnRhaW5lcjoge1xuICAgICAgICBmbGV4OiAxLFxuICAgICAgICBwYWRkaW5nUmlnaHQ6IDAsXG4gICAgfSxcbiAgICBpbnB1dENvbnRhaW5lcjoge1xuICAgICAgICBmbGV4OiAxLFxuICAgICAgICBib3JkZXJCb3R0b21XaWR0aDogMCxcbiAgICAgICAgd2lkdGg6IG51bGwsXG4gICAgICAgIGhlaWdodDogbnVsbCxcbiAgICB9LFxuICAgIGlucHV0OiB7XG4gICAgICAgIGZsZXg6IDEsXG4gICAgICAgIHRleHRBbGlnbjogJ3JpZ2h0JyxcbiAgICAgICAgd2lkdGg6IG51bGwsXG4gICAgICAgIGhlaWdodDogbnVsbCxcbiAgICB9LFxufSk7XG5leHBvcnQgZGVmYXVsdCB3aXRoVGhlbWUoTGlzdEl0ZW1JbnB1dCwgJ0xpc3RJdGVtSW5wdXQnKTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBV0EsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsT0FBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsTUFBQSxHQUFBSixzQkFBQSxDQUFBQyxPQUFBO0FBQW1DLElBQUFJLFdBQUEsR0FBQUosT0FBQTtBQUFBLFNBQUFLLFFBQUFDLENBQUEsRUFBQUMsQ0FBQSxRQUFBQyxDQUFBLEdBQUFDLE1BQUEsQ0FBQUMsSUFBQSxDQUFBSixDQUFBLE9BQUFHLE1BQUEsQ0FBQUUscUJBQUEsUUFBQUMsQ0FBQSxHQUFBSCxNQUFBLENBQUFFLHFCQUFBLENB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