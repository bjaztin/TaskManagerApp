7fa0c89f9dc9dd5c578754c10e161319
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _SignOut = _interopRequireDefault(require("../../../src/components/TaskScreenFeatures/SignOut"));
var _jsxRuntime = require("react/jsx-runtime");
describe("SignOut Component", function () {
  it("renders correctly", function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_SignOut.default, {
        navigation: {
          replace: jest.fn()
        }
      })),
      getByText = _render.getByText,
      getByTestId = _render.getByTestId;
    var logoutButton = getByTestId("logout");
    expect(logoutButton).toBeTruthy();
  });
  it("Open the modal when SignOut icon is pressed", function () {
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_SignOut.default, {
        navigation: {
          replace: jest.fn()
        }
      })),
      getByText = _render2.getByText,
      getByTestId = _render2.getByTestId;
    var modal = getByTestId("signOutmodal");
    expect(modal).toBeTruthy();
    var logoutButton = getByTestId("logout");
    _reactNative.fireEvent.press(logoutButton);
    expect(modal).toBeTruthy();
  });
  it("Close the modal when the Cancel button is pressed", function () {
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_SignOut.default, {
        navigation: {
          replace: jest.fn()
        }
      })),
      getByText = _render3.getByText,
      getByTestId = _render3.getByTestId;
    var logoutButton = getByTestId("logout");
    _reactNative.fireEvent.press(logoutButton);
    var modal = getByTestId("signOutmodal");
    expect(modal).toBeTruthy();
    var cancelButton = getByTestId("cancel");
    _reactNative.fireEvent.press(cancelButton);
    expect(modal).toBeTruthy();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9TaWduT3V0IiwiX2pzeFJ1bnRpbWUiLCJkZXNjcmliZSIsIml0IiwiX3JlbmRlciIsInJlbmRlciIsImpzeCIsImRlZmF1bHQiLCJuYXZpZ2F0aW9uIiwicmVwbGFjZSIsImplc3QiLCJmbiIsImdldEJ5VGV4dCIsImdldEJ5VGVzdElkIiwibG9nb3V0QnV0dG9uIiwiZXhwZWN0IiwidG9CZVRydXRoeSIsIl9yZW5kZXIyIiwibW9kYWwiLCJmaXJlRXZlbnQiLCJwcmVzcyIsIl9yZW5kZXIzIiwiY2FuY2VsQnV0dG9uIl0sInNvdXJjZXMiOlsiU2lnbk91dC50ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHJlbmRlciwgZmlyZUV2ZW50IH0gZnJvbSBcIkB0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlXCI7XG5pbXBvcnQgU2lnbk91dCBmcm9tIFwiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvVGFza1NjcmVlbkZlYXR1cmVzL1NpZ25PdXRcIjtcblxuZGVzY3JpYmUoXCJTaWduT3V0IENvbXBvbmVudFwiLCAoKSA9PiB7XG4gIGl0KFwicmVuZGVycyBjb3JyZWN0bHlcIiwgKCkgPT4ge1xuICAgIGNvbnN0IHsgZ2V0QnlUZXh0LCBnZXRCeVRlc3RJZCB9ID0gcmVuZGVyKFxuICAgICAgPFNpZ25PdXQgbmF2aWdhdGlvbj17eyByZXBsYWNlOiBqZXN0LmZuKCkgfX0gLz5cbiAgICApO1xuXG4gICAgY29uc3QgbG9nb3V0QnV0dG9uID0gZ2V0QnlUZXN0SWQoXCJsb2dvdXRcIik7XG4gICAgZXhwZWN0KGxvZ291dEJ1dHRvbikudG9CZVRydXRoeSgpO1xuICB9KTtcblxuICBpdChcIk9wZW4gdGhlIG1vZGFsIHdoZW4gU2lnbk91dCBpY29uIGlzIHByZXNzZWRcIiwgKCkgPT4ge1xuICAgIGNvbnN0IHsgZ2V0QnlUZXh0LCBnZXRCeVRlc3RJZCB9ID0gcmVuZGVyKFxuICAgICAgPFNpZ25PdXQgbmF2aWdhdGlvbj17eyByZXBsYWNlOiBqZXN0LmZuKCkgfX0gLz5cbiAgICApO1xuXG4gICAgLy9TaG93IG1vZGFsXG4gICAgY29uc3QgbW9kYWwgPSBnZXRCeVRlc3RJZChcInNpZ25PdXRtb2RhbFwiKTtcbiAgICBleHBlY3QobW9kYWwpLnRvQmVUcnV0aHkoKTtcblxuICAgIC8vcHJlc3NlZCB0aGUgbG9nb3V0IGJ1dHRvblxuICAgIGNvbnN0IGxvZ291dEJ1dHRvbiA9IGdldEJ5VGVzdElkKFwibG9nb3V0XCIpO1xuICAgIGZpcmVFdmVudC5wcmVzcyhsb2dvdXRCdXR0b24pO1xuICAgIGV4cGVjdChtb2RhbCkudG9CZVRydXRoeSgpO1xuICB9KTtcblxuICBpdChcIkNsb3NlIHRoZSBtb2RhbCB3aGVuIHRoZSBDYW5jZWwgYnV0dG9uIGlzIHByZXNzZWRcIiwgKCkgPT4ge1xuICAgIGNvbnN0IHsgZ2V0QnlUZXh0LCBnZXRCeVRlc3RJZCB9ID0gcmVuZGVyKFxuICAgICAgPFNpZ25PdXQgbmF2aWdhdGlvbj17eyByZXBsYWNlOiBqZXN0LmZuKCkgfX0gLz5cbiAgICApO1xuXG4gICAgY29uc3QgbG9nb3V0QnV0dG9uID0gZ2V0QnlUZXN0SWQoXCJsb2dvdXRcIik7XG4gICAgZmlyZUV2ZW50LnByZXNzKGxvZ291dEJ1dHRvbik7XG5cbiAgICAvLyBzaG93IG1vZGFsXG4gICAgY29uc3QgbW9kYWwgPSBnZXRCeVRlc3RJZChcInNpZ25PdXRtb2RhbFwiKTtcbiAgICBleHBlY3QobW9kYWwpLnRvQmVUcnV0aHkoKTtcblxuICAgIGNvbnN0IGNhbmNlbEJ1dHRvbiA9IGdldEJ5VGVzdElkKFwiY2FuY2VsXCIpO1xuICAgIGZpcmVFdmVudC5wcmVzcyhjYW5jZWxCdXR0b24pO1xuICAgIGV4cGVjdChtb2RhbCkudG9CZVRydXRoeSgpO1xuICB9KTtcblxufSk7XG4iXSwibWFwcGlu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