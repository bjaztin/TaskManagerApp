310473b41ae6c59e6aecf4b6e01e2298
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.SearchBar = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _react = _interopRequireDefault(require("react"));
var _config = require("../config");
var _SearchBarIos = _interopRequireDefault(require("./SearchBar-ios"));
var _SearchBarAndroid = _interopRequireDefault(require("./SearchBar-android"));
var _SearchBarDefault = _interopRequireDefault(require("./SearchBar-default"));
var _jsxRuntime = require("react/jsx-runtime");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var SEARCHBAR_COMPONENTS = {
  ios: _SearchBarIos.default,
  android: _SearchBarAndroid.default,
  default: _SearchBarDefault.default
};
var SearchBar = function (_React$Component) {
  (0, _inherits2.default)(SearchBar, _React$Component);
  var _super = _createSuper(SearchBar);
  function SearchBar() {
    var _this;
    (0, _classCallCheck2.default)(this, SearchBar);
    _this = _super.apply(this, arguments);
    _this.focus = function () {
      _this.searchbar.focus();
    };
    _this.blur = function () {
      _this.searchbar.blur();
    };
    _this.clear = function () {
      _this.searchbar.clear();
    };
    _this.cancel = function () {
      _this.searchbar.cancel && _this.searchbar.cancel();
    };
    return _this;
  }
  (0, _createClass2.default)(SearchBar, [{
    key: "render",
    value: function render() {
      var _this2 = this;
      var Component = SEARCHBAR_COMPONENTS[this.props.platform] || _SearchBarDefault.default;
      return (0, _jsxRuntime.jsx)(Component, _objectSpread({
        ref: function ref(_ref) {
          _this2.searchbar = _ref;
        }
      }, this.props));
    }
  }]);
  return SearchBar;
}(_react.default.Component);
exports.SearchBar = SearchBar;
SearchBar.defaultProps = {
  platform: 'default'
};
var _default = (0, _config.withTheme)(SearchBar, 'SearchBar');
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jb25maWciLCJfU2VhcmNoQmFySW9zIiwiX1NlYXJjaEJhckFuZHJvaWQiLCJfU2VhcmNoQmFyRGVmYXVsdCIsIl9qc3hSdW50aW1lIiwib3duS2V5cyIsImUiLCJyIiwidCIsIk9iamVjdCIsImtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJvIiwiZmlsdGVyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsInB1c2giLCJhcHBseSIsIl9vYmplY3RTcHJlYWQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJmb3JFYWNoIiwiX2RlZmluZVByb3BlcnR5MiIsImRlZmF1bHQiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsImRlZmluZVByb3BlcnR5IiwiX2NyZWF0ZVN1cGVyIiwiRGVyaXZlZCIsImhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiX2NyZWF0ZVN1cGVySW50ZXJuYWwiLCJTdXBlciIsIl9nZXRQcm90b3R5cGVPZjIiLCJyZXN1bHQiLCJOZXdUYXJnZXQiLCJjb25zdHJ1Y3RvciIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjIiLCJzaGFtIiwiUHJveHkiLCJCb29sZWFuIiwicHJvdG90eXBlIiwidmFsdWVPZiIsImNhbGwiLCJTRUFSQ0hCQVJfQ09NUE9ORU5UUyIsImlvcyIsIklPU1NlYXJjaEJhciIsImFuZHJvaWQiLCJBbmRyb2lkU2VhcmNoQmFyIiwiRGVmYXVsdFNlYXJjaEJhciIsIlNlYXJjaEJhciIsIl9SZWFjdCRDb21wb25lbnQiLCJfaW5oZXJpdHMyIiwiX3N1cGVyIiwiX3RoaXMiLCJfY2xhc3NDYWxsQ2hlY2syIiwiZm9jdXMiLCJzZWFyY2hiYXIiLCJibHVyIiwiY2xlYXIiLCJjYW5jZWwiLCJfY3JlYXRlQ2xhc3MyIiwia2V5IiwidmFsdWUiLCJyZW5kZXIiLCJfdGhpczIiLCJDb21wb25lbnQiLCJwcm9wcyIsInBsYXRmb3JtIiwianN4IiwicmVmIiwiUmVhY3QiLCJleHBvcnRzIiwiZGVmYXVsdFByb3BzIiwiX2RlZmF1bHQiLCJ3aXRoVGhlbWUiXSwic291cmNlcyI6WyJTZWFyY2hCYXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHdpdGhUaGVtZSB9IGZyb20gJy4uL2NvbmZpZyc7XG5pbXBvcnQgSU9TU2VhcmNoQmFyIGZyb20gJy4vU2VhcmNoQmFyLWlvcyc7XG5pbXBvcnQgQW5kcm9pZFNlYXJjaEJhciBmcm9tICcuL1NlYXJjaEJhci1hbmRyb2lkJztcbmltcG9ydCBEZWZhdWx0U2VhcmNoQmFyIGZyb20gJy4vU2VhcmNoQmFyLWRlZmF1bHQnO1xuY29uc3QgU0VBUkNIQkFSX0NPTVBPTkVOVFMgPSB7XG4gICAgaW9zOiBJT1NTZWFyY2hCYXIsXG4gICAgYW5kcm9pZDogQW5kcm9pZFNlYXJjaEJhcixcbiAgICBkZWZhdWx0OiBEZWZhdWx0U2VhcmNoQmFyLFxufTtcbmNsYXNzIFNlYXJjaEJhciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuZm9jdXMgPSAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnNlYXJjaGJhci5mb2N1cygpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLmJsdXIgPSAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnNlYXJjaGJhci5ibHVyKCk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuY2xlYXIgPSAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnNlYXJjaGJhci5jbGVhcigpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLmNhbmNlbCA9ICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuc2VhcmNoYmFyLmNhbmNlbCAmJiB0aGlzLnNlYXJjaGJhci5jYW5jZWwoKTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCBDb21wb25lbnQgPSBTRUFSQ0hCQVJfQ09NUE9ORU5UU1t0aGlzLnByb3BzLnBsYXRmb3JtXSB8fCBEZWZhdWx0U2VhcmNoQmFyO1xuICAgICAgICByZXR1cm4gKDxDb21wb25lbnQgcmVmPXsocmVmKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWFyY2hiYXIgPSByZWY7XG4gICAgICAgICAgICB9fSB7Li4udGhpcy5wcm9wc30vPik7XG4gICAgfVxufVxuU2VhcmNoQmFyLmRlZmF1bHRQcm9wcyA9IHtcbiAgICBwbGF0Zm9ybTogJ2RlZmF1bHQnLFxufTtcbmV4cG9ydCB7IFNlYXJjaEJhciB9O1xuZXhwb3J0IGRlZmF1bHQgd2l0aFRoZW1lKFNlYXJjaEJhciwgJ1NlYXJjaEJhcicpO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLE9BQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLGFBQUEsR0FBQUgsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFHLGlCQUFBLEdBQUFKLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBSSxpQkFBQSxHQUFBTCxzQkFBQSxDQUFBQyxPQUFBO0FBQW1ELElBQUFLLFdBQUEsR0FBQUwsT0FBQTtBQUFBLFNBQUFNLFFBQUFDLENBQUEsRUFBQUMsQ0FBQSxRQUFBQyxDQUFBLEdBQUFDLE1BQUEsQ0FBQUMsSUFBQSxDQUFBSixDQUFBLE9BQUFHLE1BQUEsQ0FBQUUscUJBQUEsUUFBQUMsQ0FBQSxHQUFBSCxNQUFBLENBQUFFLHFCQUFBLENBQUFMLENBQUEsR0FBQUMsQ0FBQSxLQUFBSyxDQUFBLEdBQUFBLENBQUEsQ0FBQUMsTUFBQSxXQUFBTixDQUFBLFdBQUFFLE1BQUEs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