97f9e2add20adca9236ddccb1b703926
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = styleConstructor;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _reactNative = require("react-native");
var defaultStyle = _interopRequireWildcard(require("../../style"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function styleConstructor() {
  var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var appStyle = _objectSpread(_objectSpread({}, defaultStyle), theme);
  return _reactNative.StyleSheet.create(_objectSpread({
    container: {
      flexDirection: 'row'
    },
    innerContainer: {
      flex: 1
    },
    dayNum: {
      fontSize: 28,
      fontWeight: '200',
      fontFamily: appStyle.textDayFontFamily,
      color: appStyle.agendaDayNumColor
    },
    dayText: {
      fontSize: 14,
      fontWeight: appStyle.textDayFontWeight,
      fontFamily: appStyle.textDayFontFamily,
      color: appStyle.agendaDayTextColor,
      backgroundColor: 'rgba(0,0,0,0)',
      marginTop: -5
    },
    day: {
      width: 63,
      alignItems: 'center',
      justifyContent: 'flex-start',
      marginTop: 32
    },
    today: {
      color: appStyle.agendaTodayColor
    },
    indicator: {
      marginTop: 80
    }
  }, theme['stylesheet.agenda.list'] || {}));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiZGVmYXVsdFN0eWxlIiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJub2RlSW50ZXJvcCIsIldlYWtNYXAiLCJjYWNoZUJhYmVsSW50ZXJvcCIsImNhY2hlTm9kZUludGVyb3AiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJkZXNjIiwic2V0Iiwib3duS2V5cyIsImUiLCJyIiwidCIsImtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJvIiwiZmlsdGVyIiwiZW51bWVyYWJsZSIsInB1c2giLCJhcHBseSIsIl9vYmplY3RTcHJlYWQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJmb3JFYWNoIiwiX2RlZmluZVByb3BlcnR5MiIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwic3R5bGVDb25zdHJ1Y3RvciIsInRoZW1lIiwidW5kZWZpbmVkIiwiYXBwU3R5bGUiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiY29udGFpbmVyIiwiZmxleERpcmVjdGlvbiIsImlubmVyQ29udGFpbmVyIiwiZmxleCIsImRheU51bSIsImZvbnRTaXplIiwiZm9udFdlaWdodCIsImZvbnRGYW1pbHkiLCJ0ZXh0RGF5Rm9udEZhbWlseSIsImNvbG9yIiwiYWdlbmRhRGF5TnVtQ29sb3IiLCJkYXlUZXh0IiwidGV4dERheUZvbnRXZWlnaHQiLCJhZ2VuZGFEYXlUZXh0Q29sb3IiLCJiYWNrZ3JvdW5kQ29sb3IiLCJtYXJnaW5Ub3AiLCJkYXkiLCJ3aWR0aCIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsInRvZGF5IiwiYWdlbmRhVG9kYXlDb2xvciIsImluZGljYXRvciJdLCJzb3VyY2VzIjpbInN0eWxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0eWxlU2hlZXQgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0ICogYXMgZGVmYXVsdFN0eWxlIGZyb20gJy4uLy4uL3N0eWxlJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHN0eWxlQ29uc3RydWN0b3IodGhlbWUgPSB7fSkge1xuICAgIGNvbnN0IGFwcFN0eWxlID0geyAuLi5kZWZhdWx0U3R5bGUsIC4uLnRoZW1lIH07XG4gICAgcmV0dXJuIFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgICAgICAgY29udGFpbmVyOiB7XG4gICAgICAgICAgICBmbGV4RGlyZWN0aW9uOiAncm93J1xuICAgICAgICB9LFxuICAgICAgICBpbm5lckNvbnRhaW5lcjoge1xuICAgICAgICAgICAgZmxleDogMVxuICAgICAgICB9LFxuICAgICAgICBkYXlOdW06IHtcbiAgICAgICAgICAgIGZvbnRTaXplOiAyOCxcbiAgICAgICAgICAgIGZvbnRXZWlnaHQ6ICcyMDAnLFxuICAgICAgICAgICAgZm9udEZhbWlseTogYXBwU3R5bGUudGV4dERheUZvbnRGYW1pbHksXG4gICAgICAgICAgICBjb2xvcjogYXBwU3R5bGUuYWdlbmRhRGF5TnVtQ29sb3JcbiAgICAgICAgfSxcbiAgICAgICAgZGF5VGV4dDoge1xuICAgICAgICAgICAgZm9udFNpemU6IDE0LFxuICAgICAgICAgICAgZm9udFdlaWdodDogYXBwU3R5bGUudGV4dERheUZvbnRXZWlnaHQsXG4gICAgICAgICAgICBmb250RmFtaWx5OiBhcHBTdHlsZS50ZXh0RGF5Rm9udEZhbWlseSxcbiAgICAgICAgICAgIGNvbG9yOiBhcHBTdHlsZS5hZ2VuZGFEYXlUZXh0Q29sb3IsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDAsMCwwLDApJyxcbiAgICAgICAgICAgIG1hcmdpblRvcDogLTVcbiAgICAgICAgfSxcbiAgICAgICAgZGF5OiB7XG4gICAgICAgICAgICB3aWR0aDogNjMsXG4gICAgICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgICAgICAgIGp1c3RpZnlDb250ZW50OiAnZmxleC1zdGFydCcsXG4gICAgICAgICAgICBtYXJnaW5Ub3A6IDMyXG4gICAgICAgIH0sXG4gICAgICAgIHRvZGF5OiB7XG4gICAgICAgICAgICBjb2xvcjogYXBwU3R5bGUuYWdlbmRhVG9kYXlDb2xvclxuICAgICAgICB9LFxuICAgICAgICBpbmRpY2F0b3I6IHtcbiAgICAgICAgICAgIG1hcmdpblRvcDogODBcbiAgICAgICAgfSxcbiAgICAgICAgLi4uKHRoZW1lWydzdHlsZXNoZWV0LmFnZW5kYS5saXN0J10gfHwge30pXG4gICAgfSk7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFBLFlBQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLFlBQUEsR0FBQUMsdUJBQUEsQ0FBQUYsT0FBQTtBQUE0QyxTQUFBRyx5QkFBQUMsV0FBQSxlQUFBQyxPQUFBLGtDQUFBQyxpQkFBQSxPQUFBRCxPQUFBLFFBQUFFLGdCQUFBLE9BQUFGLE9BQUEsWUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLFdBQUEsV0FBQUEsV0FBQSxHQUFBRyxnQkFBQSxHQUFBRCxpQkFBQSxLQUFBRixXQUFBO0FBQUEsU0FBQUYsd0JBQUFNLEdBQUEsRUFBQUosV0FBQSxTQUFBQSxXQUFBLElBQUFJLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLFdBQUFELEdBQUEsUUFBQUEsR0FBQSxvQkFBQUEsR0FBQSx3QkFBQUEsR0FBQSw0QkFBQUUsT0FBQSxFQUFBRixHQUFBLFVBQUFHLEtBQUEsR0FBQVIsd0JBQUEsQ0FBQUMsV0FBQSxPQUFBTyxLQUFBLElBQUFBLEtBQUEsQ0FBQUMsR0FBQSxDQUFBSixHQUFBLFlBQUFHLEtBQUEsQ0FBQUUsR0FBQSxDQUFBTCxHQUFBLFNB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