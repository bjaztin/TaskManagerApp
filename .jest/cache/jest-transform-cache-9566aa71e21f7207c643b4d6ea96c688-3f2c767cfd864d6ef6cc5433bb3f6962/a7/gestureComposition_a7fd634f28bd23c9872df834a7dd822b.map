{"version":3,"names":["_gesture","require","extendRelation","currentRelation","extendWith","undefined","_toConsumableArray2","default","concat","ComposedGesture","_gesture$Gesture","_inherits2","_super","_createSuper","_this","_classCallCheck2","call","_defineProperty","_assertThisInitialized2","_len","arguments","length","gestures","Array","_key","_createClass2","key","value","prepareSingleGesture","gesture","simultaneousGestures","requireGesturesToFail","BaseGesture","newConfig","_objectSpread","config","simultaneousWith","requireToFail","prepare","initialize","toGestureArray","flatMap","Gesture","SimultaneousGesture","_ComposedGesture","_super2","apply","_this2","simultaneousArrays","map","filter","x","i","ExclusiveGesture","_ComposedGesture2","_super3","gestureArrays"],"sources":["gestureComposition.ts"],"sourcesContent":["import { BaseGesture, Gesture, GestureRef, GestureType } from './gesture';\n\nfunction extendRelation(\n  currentRelation: GestureRef[] | undefined,\n  extendWith: GestureType[]\n) {\n  if (currentRelation === undefined) {\n    return [...extendWith];\n  } else {\n    return [...currentRelation, ...extendWith];\n  }\n}\n\nexport class ComposedGesture extends Gesture {\n  protected gestures: Gesture[] = [];\n  protected simultaneousGestures: GestureType[] = [];\n  protected requireGesturesToFail: GestureType[] = [];\n\n  constructor(...gestures: Gesture[]) {\n    super();\n    this.gestures = gestures;\n  }\n\n  protected prepareSingleGesture(\n    gesture: Gesture,\n    simultaneousGestures: GestureType[],\n    requireGesturesToFail: GestureType[]\n  ) {\n    if (gesture instanceof BaseGesture) {\n      const newConfig = { ...gesture.config };\n\n      newConfig.simultaneousWith = extendRelation(\n        newConfig.simultaneousWith,\n        simultaneousGestures\n      );\n      newConfig.requireToFail = extendRelation(\n        newConfig.requireToFail,\n        requireGesturesToFail\n      );\n\n      gesture.config = newConfig;\n    } else if (gesture instanceof ComposedGesture) {\n      gesture.simultaneousGestures = simultaneousGestures;\n      gesture.requireGesturesToFail = requireGesturesToFail;\n      gesture.prepare();\n    }\n  }\n\n  prepare() {\n    for (const gesture of this.gestures) {\n      this.prepareSingleGesture(\n        gesture,\n        this.simultaneousGestures,\n        this.requireGesturesToFail\n      );\n    }\n  }\n\n  initialize() {\n    for (const gesture of this.gestures) {\n      gesture.initialize();\n    }\n  }\n\n  toGestureArray(): GestureType[] {\n    return this.gestures.flatMap((gesture) => gesture.toGestureArray());\n  }\n}\n\nexport class SimultaneousGesture extends ComposedGesture {\n  prepare() {\n    // this piece of magic works something like this:\n    // for every gesture in the array\n    const simultaneousArrays = this.gestures.map((gesture) =>\n      // we take the array it's in\n      this.gestures\n        // and make a copy without it\n        .filter((x) => x !== gesture)\n        // then we flatmap the result to get list of raw (not composed) gestures\n        // this way we don't make the gestures simultaneous with themselves, which is\n        // important when the gesture is `ExclusiveGesture` - we don't want to make\n        // exclusive gestures simultaneous\n        .flatMap((x) => x.toGestureArray())\n    );\n\n    for (let i = 0; i < this.gestures.length; i++) {\n      this.prepareSingleGesture(\n        this.gestures[i],\n        simultaneousArrays[i],\n        this.requireGesturesToFail\n      );\n    }\n  }\n}\n\nexport class ExclusiveGesture extends ComposedGesture {\n  prepare() {\n    // transforms the array of gestures into array of grouped raw (not composed) gestures\n    // i.e. [gesture1, gesture2, ComposedGesture(gesture3, gesture4)] -> [[gesture1], [gesture2], [gesture3, gesture4]]\n    const gestureArrays = this.gestures.map((gesture) =>\n      gesture.toGestureArray()\n    );\n\n    let requireToFail: GestureType[] = [];\n\n    for (let i = 0; i < this.gestures.length; i++) {\n      this.prepareSingleGesture(\n        this.gestures[i],\n        this.simultaneousGestures,\n        this.requireGesturesToFail.concat(requireToFail)\n      );\n\n      // every group gets to wait for all groups before it\n      requireToFail = requireToFail.concat(gestureArrays[i]);\n    }\n  }\n}\n\nexport type ComposedGestureType = InstanceType<typeof ComposedGesture>;\nexport type RaceGestureType = ComposedGestureType;\nexport type SimultaneousGestureType = InstanceType<typeof SimultaneousGesture>;\nexport type ExclusiveGestureType = InstanceType<typeof ExclusiveGesture>;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;;;;;;;;;;;;;;AAEA,SAASC,cAATA,CACEC,eADF,EAEEC,UAFF,EAGE;EACA,IAAID,eAAe,KAAKE,SAAxB,EAAmC;IACjC,WAAAC,mBAAA,CAAAC,OAAA,EAAWH,UAAJ;EACR,CAFD,MAEO;IACL,UAAAI,MAAA,KAAAF,mBAAA,CAAAC,OAAA,EAAWJ,eAAJ,OAAAG,mBAAA,CAAAC,OAAA,EAAwBH,UAAxB;EACR;AACF;AAAA,IAEYK,eAAN,aAAAC,gBAAA;EAAA,IAAAC,UAAA,CAAAJ,OAAA,EAAAE,eAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,eAAA;EAKL,SAAAA,gBAAA,EAAoC;IAAA,IAAAK,KAAA;IAAA,IAAAC,gBAAA,CAAAR,OAAA,QAAAE,eAAA;IAClCK,KAAA,GAAAF,MAAA,CAAAI,IAAA;IADkCC,eAAA,KAAAC,uBAAA,CAAAX,OAAA,EAAAO,KAAA,eAJJ,EAII;IAAAG,eAAA,KAAAC,uBAAA,CAAAX,OAAA,EAAAO,KAAA,2BAHY,EAGZ;IAAAG,eAAA,KAAAC,uBAAA,CAAAX,OAAA,EAAAO,KAAA,4BAFa,EAEb;IAAA,SAAAK,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAArBC,QAAJ,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAIF,QAAJ,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAETV,KAAA,CAAKQ,QAAL,GAAgBA,QAAhB;IAAA,OAAAR,KAAA;EACD;EAAA,IAAAW,aAAA,CAAAlB,OAAA,EAAAE,eAAA;IAAAiB,GAAA;IAAAC,KAAA,EAES,SAAAC,qBACRC,OAD4B,EAE5BC,oBAF4B,EAG5BC,qBAH4B,EAI5B;MACA,IAAIF,OAAO,YAAY7B,QAAA,CAAAgC,WAAvB,EAAoC;QAClC,IAAMC,SAAS,GAAAC,aAAA,KAAQL,OAAO,CAACM,MAAA,CAA/B;QAEAF,SAAS,CAACG,gBAAV,GAA6BlC,cAAc,CACzC+B,SAAS,CAACG,gBAD+B,EAEzCN,oBAFyC,CAA3C;QAIAG,SAAS,CAACI,aAAV,GAA0BnC,cAAc,CACtC+B,SAAS,CAACI,aAD4B,EAEtCN,qBAFsC,CAAxC;QAKAF,OAAO,CAACM,MAAR,GAAiBF,SAAjB;MACD,CAbD,MAaO,IAAIJ,OAAO,YAAYpB,eAAvB,EAAwC;QAC7CoB,OAAO,CAACC,oBAAR,GAA+BA,oBAA/B;QACAD,OAAO,CAACE,qBAAR,GAAgCA,qBAAhC;QACAF,OAAO,CAACS,OAAR;MACD;IACF;EAAA;IAAAZ,GAAA;IAAAC,KAAA,EAED,SAAAW,QAAA,EAAU;MACR,KAAK,IAAMT,OAAX,IAAsB,KAAKP,QAA3B,EAAqC;QACnC,KAAKM,oBAAL,CACEC,OADF,EAEE,KAAKC,oBAFP,EAGE,KAAKC,qBAHP;MAKD;IACF;EAAA;IAAAL,GAAA;IAAAC,KAAA,EAED,SAAAY,WAAA,EAAa;MACX,KAAK,IAAMV,OAAX,IAAsB,KAAKP,QAA3B,EAAqC;QACnCO,OAAO,CAACU,UAAR;MACD;IACF;EAAA;IAAAb,GAAA;IAAAC,KAAA,EAED,SAAAa,eAAA,EAAgC;MAC9B,OAAO,KAAKlB,QAAL,CAAcmB,OAAd,CAAuB,UAAAZ,OAAD;QAAA,OAAaA,OAAO,CAACW,cAAR,EAAnC;MAAA,EAAP;IACD;EAAA;EAAA,OAAA/B,eAAA;AAAA,EArDkCT,QAAA,CAAA0C,OAA9B;;IAwDMC,mBAAN,aAAAC,gBAAA;EAAA,IAAAjC,UAAA,CAAAJ,OAAA,EAAAoC,mBAAA,EAAAC,gBAAA;EAAA,IAAAC,OAAA,GAAAhC,YAAA,CAAA8B,mBAAA;EAAA,SAAAA,oBAAA;IAAA,IAAA5B,gBAAA,CAAAR,OAAA,QAAAoC,mBAAA;IAAA,OAAAE,OAAA,CAAAC,KAAA,OAAA1B,SAAA;EAAA;EAAA,IAAAK,aAAA,CAAAlB,OAAA,EAAAoC,mBAAA;IAAAjB,GAAA;IAAAC,KAAA,EACL,SAAAW,QAAA,EAAU;MAAA,IAAAS,MAAA;MAGR,IAAMC,kBAAkB,GAAG,KAAK1B,QAAL,CAAc2B,GAAd,CAAmB,UAAApB,OAAD;QAAA,OAE3CkB,MAAA,CAAKzB,QAAL,CAEG4B,MAFH,CAEW,UAAAC,CAAD;UAAA,OAAOA,CAAC,KAAKtB,OAFvB;QAAA,GAOGY,OAPH,CAOY,UAAAU,CAAD;UAAA,OAAOA,CAAC,CAACX,cAAF,EAPlB;QAAA,EAFyB;MAAA,EAA3B;MAYA,KAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK9B,QAAL,CAAcD,MAAlC,EAA0C+B,CAAC,EAA3C,EAA+C;QAC7C,KAAKxB,oBAAL,CACE,KAAKN,QAAL,CAAc8B,CAAd,CADF,EAEEJ,kBAAkB,CAACI,CAAD,CAFpB,EAGE,KAAKrB,qBAHP;MAKD;IACF;EAAA;EAAA,OAAAY,mBAAA;AAAA,EAvBsClC,eAAlC;;IA0BM4C,gBAAN,aAAAC,iBAAA;EAAA,IAAA3C,UAAA,CAAAJ,OAAA,EAAA8C,gBAAA,EAAAC,iBAAA;EAAA,IAAAC,OAAA,GAAA1C,YAAA,CAAAwC,gBAAA;EAAA,SAAAA,iBAAA;IAAA,IAAAtC,gBAAA,CAAAR,OAAA,QAAA8C,gBAAA;IAAA,OAAAE,OAAA,CAAAT,KAAA,OAAA1B,SAAA;EAAA;EAAA,IAAAK,aAAA,CAAAlB,OAAA,EAAA8C,gBAAA;IAAA3B,GAAA;IAAAC,KAAA,EACL,SAAAW,QAAA,EAAU;MAGR,IAAMkB,aAAa,GAAG,KAAKlC,QAAL,CAAc2B,GAAd,CAAmB,UAAApB,OAAD;QAAA,OACtCA,OAAO,CAACW,cAAR,EADoB;MAAA,EAAtB;MAIA,IAAIH,aAA4B,GAAG,EAAnC;MAEA,KAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK9B,QAAL,CAAcD,MAAlC,EAA0C+B,CAAC,EAA3C,EAA+C;QAC7C,KAAKxB,oBAAL,CACE,KAAKN,QAAL,CAAc8B,CAAd,CADF,EAEE,KAAKtB,oBAFP,EAGE,KAAKC,qBAAL,CAA2BvB,MAA3B,CAAkC6B,aAAlC,CAHF;QAOAA,aAAa,GAAGA,aAAa,CAAC7B,MAAd,CAAqBgD,aAAa,CAACJ,CAAD,CAAlC,CAAhB;MACD;IACF;EAAA;EAAA,OAAAC,gBAAA;AAAA,EApBmC5C,eAA/B"}