17f92e1446c5463d6373be216b273648
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _jsxRuntime = require("react/jsx-runtime");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var React = require('react');
function mockModal(BaseComponent) {
  var ModalMock = function (_BaseComponent) {
    (0, _inherits2.default)(ModalMock, _BaseComponent);
    var _super = _createSuper(ModalMock);
    function ModalMock() {
      (0, _classCallCheck2.default)(this, ModalMock);
      return _super.apply(this, arguments);
    }
    (0, _createClass2.default)(ModalMock, [{
      key: "render",
      value: function render() {
        return (0, _jsxRuntime.jsx)(BaseComponent, _objectSpread(_objectSpread({}, this.props), {}, {
          children: this.props.visible !== true ? null : this.props.children
        }));
      }
    }]);
    return ModalMock;
  }(BaseComponent);
  return ModalMock;
}
module.exports = mockModal;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9kZWZpbmVQcm9wZXJ0eTIiLCJfY2xhc3NDYWxsQ2hlY2syIiwiX2NyZWF0ZUNsYXNzMiIsIl9pbmhlcml0czIiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjIiLCJfZ2V0UHJvdG90eXBlT2YyIiwiX2pzeFJ1bnRpbWUiLCJvd25LZXlzIiwiZSIsInIiLCJ0IiwiT2JqZWN0Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsIm8iLCJmaWx0ZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwicHVzaCIsImFwcGx5IiwiX29iamVjdFNwcmVhZCIsImFyZ3VtZW50cyIsImxlbmd0aCIsImZvckVhY2giLCJkZWZhdWx0IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJkZWZpbmVQcm9wZXJ0eSIsIl9jcmVhdGVTdXBlciIsIkRlcml2ZWQiLCJoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIl9jcmVhdGVTdXBlckludGVybmFsIiwiU3VwZXIiLCJyZXN1bHQiLCJOZXdUYXJnZXQiLCJjb25zdHJ1Y3RvciIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJzaGFtIiwiUHJveHkiLCJCb29sZWFuIiwicHJvdG90eXBlIiwidmFsdWVPZiIsImNhbGwiLCJSZWFjdCIsIm1vY2tNb2RhbCIsIkJhc2VDb21wb25lbnQiLCJNb2RhbE1vY2siLCJfQmFzZUNvbXBvbmVudCIsIl9zdXBlciIsImtleSIsInZhbHVlIiwicmVuZGVyIiwianN4IiwicHJvcHMiLCJjaGlsZHJlbiIsInZpc2libGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsibW9ja01vZGFsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcbiAqL1xuXG4vKiBlc2xpbnQtZW52IGplc3QgKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5pbXBvcnQgdHlwZW9mIE1vZGFsIGZyb20gJy4uL0xpYnJhcmllcy9Nb2RhbC9Nb2RhbCc7XG5cbmZ1bmN0aW9uIG1vY2tNb2RhbChCYXNlQ29tcG9uZW50OiAkRmxvd0ZpeE1lKSB7XG4gIGNsYXNzIE1vZGFsTW9jayBleHRlbmRzIEJhc2VDb21wb25lbnQge1xuICAgIHJlbmRlcigpOiBSZWFjdC5FbGVtZW50PE1vZGFsPiB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8QmFzZUNvbXBvbmVudCB7Li4udGhpcy5wcm9wc30+XG4gICAgICAgICAge3RoaXMucHJvcHMudmlzaWJsZSAhPT0gdHJ1ZSA/IG51bGwgOiB0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgICA8L0Jhc2VDb21wb25lbnQ+XG4gICAgICApO1xuICAgIH1cbiAgfVxuICByZXR1cm4gTW9kYWxNb2NrO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IChtb2NrTW9kYWw6ICRGbG93Rml4TWUpO1xuIl0sIm1hcHBpbmdzIjoiQUFZQSxZQUFZOztBQUFDLElBQUFBLHNCQUFBLEdBQUFDLE9BQUE7QUFBQSxJQUFBQyxnQkFBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBQUEsSUFBQUUsZ0JBQUEsR0FBQUgsc0JBQUEsQ0FBQUMsT0FBQTtBQUFBLElBQUFHLGFBQUEsR0FBQUosc0JBQUEsQ0FBQUMsT0FBQTtBQUFBLElBQUFJLFVBQUEsR0FBQUwsc0JB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