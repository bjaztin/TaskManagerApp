7d5847518a473a6efc7b555d919dc1f7
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _reactNative = require("react-native");
var _react = _interopRequireWildcard(require("react"));
var Haptics = _interopRequireWildcard(require("expo-haptics"));
var _TaskTitle = _interopRequireDefault(require("./TaskTitle"));
var _TaskNote = _interopRequireDefault(require("./TaskNote"));
var _TaskUrl = _interopRequireDefault(require("./TaskUrl"));
var _TaskImage = _interopRequireDefault(require("./TaskImage"));
var _TaskDate = _interopRequireDefault(require("./TaskDate"));
var _TaskTime = _interopRequireDefault(require("./TaskTime"));
var _TaskCompleteButton = _interopRequireDefault(require("./TaskCompleteButton"));
var _TaskTagIcon = _interopRequireDefault(require("./TaskTagIcon"));
var _SwipeAction = _interopRequireDefault(require("./SwipeAction"));
var _asyncStorage = _interopRequireDefault(require("@react-native-async-storage/async-storage"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function cov_2jrdxb5yiy() {
  var path = "/Users/bjaztin/Desktop/taskManagerApp/src/components/TaskDetail/TaskDetails.js";
  var hash = "448bdb1a69e931a83a834b874cccd2fdb150391c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/bjaztin/Desktop/taskManagerApp/src/components/TaskDetail/TaskDetails.js",
    statementMap: {
      "0": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 109,
          column: 1
        }
      },
      "1": {
        start: {
          line: 26,
          column: 30
        },
        end: {
          line: 26,
          column: 34
        }
      },
      "2": {
        start: {
          line: 27,
          column: 38
        },
        end: {
          line: 27,
          column: 53
        }
      },
      "3": {
        start: {
          line: 28,
          column: 38
        },
        end: {
          line: 28,
          column: 63
        }
      },
      "4": {
        start: {
          line: 30,
          column: 2
        },
        end: {
          line: 46,
          column: 16
        }
      },
      "5": {
        start: {
          line: 32,
          column: 28
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "6": {
        start: {
          line: 33,
          column: 6
        },
        end: {
          line: 42,
          column: 7
        }
      },
      "7": {
        start: {
          line: 34,
          column: 33
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "8": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "9": {
        start: {
          line: 38,
          column: 10
        },
        end: {
          line: 38,
          column: 54
        }
      },
      "10": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 74
        }
      },
      "11": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 22
        }
      },
      "12": {
        start: {
          line: 48,
          column: 31
        },
        end: {
          line: 64,
          column: 3
        }
      },
      "13": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 59
        }
      },
      "14": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 31
        }
      },
      "15": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "16": {
        start: {
          line: 55,
          column: 6
        },
        end: {
          line: 58,
          column: 8
        }
      },
      "17": {
        start: {
          line: 60,
          column: 6
        },
        end: {
          line: 60,
          column: 78
        }
      },
      "18": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 43
        }
      },
      "19": {
        start: {
          line: 66,
          column: 2
        },
        end: {
          line: 108,
          column: 4
        }
      },
      "20": {
        start: {
          line: 80,
          column: 31
        },
        end: {
          line: 80,
          column: 60
        }
      },
      "21": {
        start: {
          line: 113,
          column: 15
        },
        end: {
          line: 153,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 15,
            column: 21
          }
        },
        loc: {
          start: {
            line: 25,
            column: 6
          },
          end: {
            line: 109,
            column: 1
          }
        },
        line: 25
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 13
          }
        },
        loc: {
          start: {
            line: 30,
            column: 18
          },
          end: {
            line: 46,
            column: 3
          }
        },
        line: 30
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 32,
            column: 28
          },
          end: {
            line: 32,
            column: 29
          }
        },
        loc: {
          start: {
            line: 32,
            column: 40
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 48,
            column: 32
          }
        },
        loc: {
          start: {
            line: 48,
            column: 43
          },
          end: {
            line: 64,
            column: 3
          }
        },
        line: 48
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 80,
            column: 25
          },
          end: {
            line: 80,
            column: 26
          }
        },
        loc: {
          start: {
            line: 80,
            column: 31
          },
          end: {
            line: 80,
            column: 60
          }
        },
        line: 80
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "448bdb1a69e931a83a834b874cccd2fdb150391c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2jrdxb5yiy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2jrdxb5yiy();
cov_2jrdxb5yiy().s[0]++;
var TaskDetails = function TaskDetails(_ref) {
  var item = _ref.item,
    onDelete = _ref.onDelete,
    selectedDate = _ref.selectedDate,
    selectedTime = _ref.selectedTime,
    selectedEndTime = _ref.selectedEndTime,
    selectedImage = _ref.selectedImage,
    onImagePress = _ref.onImagePress,
    setIsTagPickerVisible = _ref.setIsTagPickerVisible,
    onToggleComplete = _ref.onToggleComplete;
  cov_2jrdxb5yiy().f[0]++;
  var _ref2 = (cov_2jrdxb5yiy().s[1]++, item),
    task = _ref2.task,
    note = _ref2.note,
    url = _ref2.url;
  var _ref3 = (cov_2jrdxb5yiy().s[2]++, (0, _react.useState)(false)),
    _ref4 = (0, _slicedToArray2.default)(_ref3, 2),
    isComplete = _ref4[0],
    setIsComplete = _ref4[1];
  var _ref5 = (cov_2jrdxb5yiy().s[3]++, (0, _react.useState)("label-outline")),
    _ref6 = (0, _slicedToArray2.default)(_ref5, 2),
    selectTag = _ref6[0],
    setSelectedTag = _ref6[1];
  cov_2jrdxb5yiy().s[4]++;
  (0, _react.useEffect)(function () {
    cov_2jrdxb5yiy().f[1]++;
    cov_2jrdxb5yiy().s[5]++;
    var loadToggleState = function () {
      var _ref7 = (0, _asyncToGenerator2.default)(function* () {
        cov_2jrdxb5yiy().f[2]++;
        cov_2jrdxb5yiy().s[6]++;
        try {
          var savedToggleState = (cov_2jrdxb5yiy().s[7]++, yield _asyncStorage.default.getItem(`completedTask${item.id}`));
          cov_2jrdxb5yiy().s[8]++;
          if (savedToggleState !== null) {
            cov_2jrdxb5yiy().b[0][0]++;
            cov_2jrdxb5yiy().s[9]++;
            setIsComplete(JSON.parse(savedToggleState));
          } else {
            cov_2jrdxb5yiy().b[0][1]++;
          }
        } catch (error) {
          cov_2jrdxb5yiy().s[10]++;
          console.error("Error loading UI state from AsyncStorage:", error);
        }
      });
      return function loadToggleState() {
        return _ref7.apply(this, arguments);
      };
    }();
    cov_2jrdxb5yiy().s[11]++;
    loadToggleState();
  }, [item.id]);
  cov_2jrdxb5yiy().s[12]++;
  var handleToggleComplete = function () {
    var _ref8 = (0, _asyncToGenerator2.default)(function* () {
      cov_2jrdxb5yiy().f[3]++;
      cov_2jrdxb5yiy().s[13]++;
      Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Heavy);
      cov_2jrdxb5yiy().s[14]++;
      setIsComplete(!isComplete);
      cov_2jrdxb5yiy().s[15]++;
      try {
        cov_2jrdxb5yiy().s[16]++;
        yield _asyncStorage.default.setItem(`completedTask${item.id}`, JSON.stringify(!isComplete));
      } catch (error) {
        cov_2jrdxb5yiy().s[17]++;
        console.error("Error saving completion status to AsyncStorage:", error);
      }
      cov_2jrdxb5yiy().s[18]++;
      onToggleComplete(item.id, !isComplete);
    });
    return function handleToggleComplete() {
      return _ref8.apply(this, arguments);
    };
  }();
  cov_2jrdxb5yiy().s[19]++;
  return (0, _jsxRuntime.jsx)(_SwipeAction.default, {
    onDelete: onDelete,
    children: (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.item,
      children: (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: styles.itemLeft,
        children: (0, _jsxRuntime.jsxs)(_reactNative.View, {
          style: styles.itemsContainer,
          children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
            style: styles.header,
            children: [(0, _jsxRuntime.jsx)(_TaskTagIcon.default, {
              item: item,
              setSelectedTag: setSelectedTag,
              isComplete: isComplete,
              setIsTagPickerVisible: setIsTagPickerVisible
            }), (0, _jsxRuntime.jsx)(_TaskCompleteButton.default, {
              isComplete: isComplete,
              onPress: function onPress() {
                cov_2jrdxb5yiy().f[4]++;
                cov_2jrdxb5yiy().s[20]++;
                return handleToggleComplete(item.id);
              },
              style: styles.completeButton,
              testID: "completeButton"
            })]
          }), (0, _jsxRuntime.jsx)(_TaskTitle.default, {
            task: task,
            isComplete: isComplete,
            item: item.id
          }), (0, _jsxRuntime.jsx)(_TaskNote.default, {
            note: note,
            isComplete: isComplete
          }), (0, _jsxRuntime.jsx)(_TaskUrl.default, {
            url: url,
            isComplete: isComplete
          }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
            style: styles.dateTimeContainer,
            children: [(0, _jsxRuntime.jsx)(_TaskDate.default, {
              selectedDate: selectedDate,
              isComplete: isComplete
            }), (0, _jsxRuntime.jsx)(_TaskTime.default, {
              selectedTime: selectedTime,
              selectedEndTime: selectedEndTime,
              isComplete: isComplete
            })]
          }), (0, _jsxRuntime.jsx)(_TaskImage.default, {
            selectedImage: selectedImage,
            isComplete: isComplete,
            onImagePress: onImagePress
          })]
        })
      })
    })
  });
};
var _default = TaskDetails;
exports.default = _default;
var styles = (cov_2jrdxb5yiy().s[21]++, _reactNative.StyleSheet.create({
  item: {
    margin: 10,
    paddingLeft: 8,
    paddingBottom: 40,
    padding: 30,
    flexDirection: "column",
    backgroundColor: "#435334",
    borderRadius: 30
  },
  header: {
    alignItems: "flex-end"
  },
  itemLeft: {
    flexDirection: "row",
    flexWrap: "wrap",
    marginLeft: 22
  },
  itemsContainer: {
    width: "100%"
  },
  dateTimeContainer: {
    flexDirection: "row",
    color: "#404040"
  },
  completedTaskTitle: {
    color: "lightgray"
  },
  completedTask: {
    color: "lightgray"
  },
  completeButton: {
    marginRight: 15,
    opacity: 0.8,
    borderRadius: 20,
    alignItems: "center",
    justifyContent: "center"
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,