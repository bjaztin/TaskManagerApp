6a4b9072fd6567a67f768605020725f3
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EventType = void 0;
exports.useAnimatedGestureHandler = useAnimatedGestureHandler;
var _Hooks = require("./Hooks");
var EventType = function (EventType) {
  EventType[EventType["UNDETERMINED"] = 0] = "UNDETERMINED";
  EventType[EventType["FAILED"] = 1] = "FAILED";
  EventType[EventType["BEGAN"] = 2] = "BEGAN";
  EventType[EventType["CANCELLED"] = 3] = "CANCELLED";
  EventType[EventType["ACTIVE"] = 4] = "ACTIVE";
  EventType[EventType["END"] = 5] = "END";
  return EventType;
}({});
exports.EventType = EventType;
var _worklet_7959857095227_init_data = {
  code: "function anonymous(e) {\n  const {\n    useWeb,\n    EventType,\n    handlers,\n    context\n  } = this._closure;\n  const event = useWeb ? e.nativeEvent : e;\n  if (event.state === EventType.BEGAN && handlers.onStart) {\n    handlers.onStart(event, context);\n  }\n  if (event.state === EventType.ACTIVE && handlers.onActive) {\n    handlers.onActive(event, context);\n  }\n  if (event.oldState === EventType.ACTIVE && event.state === EventType.END && handlers.onEnd) {\n    handlers.onEnd(event, context);\n  }\n  if (event.oldState === EventType.BEGAN && event.state === EventType.FAILED && handlers.onFail) {\n    handlers.onFail(event, context);\n  }\n  if (event.oldState === EventType.ACTIVE && event.state === EventType.CANCELLED && handlers.onCancel) {\n    handlers.onCancel(event, context);\n  }\n  if ((event.oldState === EventType.BEGAN || event.oldState === EventType.ACTIVE) && event.state !== EventType.BEGAN && event.state !== EventType.ACTIVE && handlers.onFinish) {\n    handlers.onFinish(event, context, event.state === EventType.CANCELLED || event.state === EventType.FAILED);\n  }\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedGestureHandler.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"e\",\"useWeb\",\"EventType\",\"handlers\",\"context\",\"_closure\",\"event\",\"nativeEvent\",\"state\",\"BEGAN\",\"onStart\",\"ACTIVE\",\"onActive\",\"oldState\",\"END\",\"onEnd\",\"FAILED\",\"onFail\",\"CANCELLED\",\"onCancel\",\"onFinish\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedGestureHandler.js\"],\"mappings\":\"AAgBkB,SAACA,SAAIA,CAAAC,CAAA;EAAA;IAAAC,MAAA;IAAAC,SAAA;IAAAC,QAAA;IAAAC;EAAA,SAAAC,QAAA;EAGnB,MAAMC,KAAK,GAAGL,MAAM,GAAGD,CAAC,CAACO,WAAW,GAAGP,CAAC;EACxC,IAAIM,KAAK,CAACE,KAAK,KAAKN,SAAS,CAACO,KAAK,IAAIN,QAAQ,CAACO,OAAO,EAAE;IACvDP,QAAQ,CAACO,OAAO,CAACJ,KAAK,EAAEF,OAAO,CAAC;EAClC;EACA,IAAIE,KAAK,CAACE,KAAK,KAAKN,SAAS,CAACS,MAAM,IAAIR,QAAQ,CAACS,QAAQ,EAAE;IACzDT,QAAQ,CAACS,QAAQ,CAACN,KAAK,EAAEF,OAAO,CAAC;EACnC;EACA,IAAIE,KAAK,CAACO,QAAQ,KAAKX,SAAS,CAACS,MAAM,IAAIL,KAAK,CAACE,KAAK,KAAKN,SAAS,CAACY,GAAG,IAAIX,QAAQ,CAACY,KAAK,EAAE;IAC1FZ,QAAQ,CAACY,KAAK,CAACT,KAAK,EAAEF,OAAO,CAAC;EAChC;EACA,IAAIE,KAAK,CAACO,QAAQ,KAAKX,SAAS,CAACO,KAAK,IAAIH,KAAK,CAACE,KAAK,KAAKN,SAAS,CAACc,MAAM,IAAIb,QAAQ,CAACc,MAAM,EAAE;IAC7Fd,QAAQ,CAACc,MAAM,CAACX,KAAK,EAAEF,OAAO,CAAC;EACjC;EACA,IAAIE,KAAK,CAACO,QAAQ,KAAKX,SAAS,CAACS,MAAM,IAAIL,KAAK,CAACE,KAAK,KAAKN,SAAS,CAACgB,SAAS,IAAIf,QAAQ,CAACgB,QAAQ,EAAE;IACnGhB,QAAQ,CAACgB,QAAQ,CAACb,KAAK,EAAEF,OAAO,CAAC;EACnC;EACA,IAAI,CAACE,KAAK,CAACO,QAAQ,KAAKX,SAAS,CAACO,KAAK,IAAIH,KAAK,CAACO,QAAQ,KAAKX,SAAS,CAACS,MAAM,KAAKL,KAAK,CAACE,KAAK,KAAKN,SAAS,CAACO,KAAK,IAAIH,KAAK,CAACE,KAAK,KAAKN,SAAS,CAACS,MAAM,IAAIR,QAAQ,CAACiB,QAAQ,EAAE;IAC3KjB,QAAQ,CAACiB,QAAQ,CAACd,KAAK,EAAEF,OAAO,EAAEE,KAAK,CAACE,KAAK,KAAKN,SAAS,CAACgB,SAAS,IAAIZ,KAAK,CAACE,KAAK,KAAKN,SAAS,CAACc,MAAM,CAAC;EAC5G;AACF\"}"
};
function useAnimatedGestureHandler(handlers, dependencies) {
  var _useHandler = (0, _Hooks.useHandler)(handlers, dependencies),
    context = _useHandler.context,
    doDependenciesDiffer = _useHandler.doDependenciesDiffer,
    useWeb = _useHandler.useWeb;
  var handler = function () {
    var _e = [new global.Error(), -5, -27];
    var _f = function _f(e) {
      var event = useWeb ? e.nativeEvent : e;
      if (event.state === EventType.BEGAN && handlers.onStart) {
        handlers.onStart(event, context);
      }
      if (event.state === EventType.ACTIVE && handlers.onActive) {
        handlers.onActive(event, context);
      }
      if (event.oldState === EventType.ACTIVE && event.state === EventType.END && handlers.onEnd) {
        handlers.onEnd(event, context);
      }
      if (event.oldState === EventType.BEGAN && event.state === EventType.FAILED && handlers.onFail) {
        handlers.onFail(event, context);
      }
      if (event.oldState === EventType.ACTIVE && event.state === EventType.CANCELLED && handlers.onCancel) {
        handlers.onCancel(event, context);
      }
      if ((event.oldState === EventType.BEGAN || event.oldState === EventType.ACTIVE) && event.state !== EventType.BEGAN && event.state !== EventType.ACTIVE && handlers.onFinish) {
        handlers.onFinish(event, context, event.state === EventType.CANCELLED || event.state === EventType.FAILED);
      }
    };
    _f._closure = {
      useWeb: useWeb,
      EventType: EventType,
      handlers: handlers,
      context: context
    };
    _f.__initData = _worklet_7959857095227_init_data;
    _f.__workletHash = 7959857095227;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }();
  if (useWeb) {
    return handler;
  }
  return (0, _Hooks.useEvent)(handler, ['onGestureHandlerStateChange', 'onGestureHandlerEvent'], doDependenciesDiffer);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfSG9va3MiLCJyZXF1aXJlIiwiRXZlbnRUeXBlIiwiZXhwb3J0cyIsIl93b3JrbGV0Xzc5NTk4NTcwOTUyMjdfaW5pdF9kYXRhIiwiY29kZSIsImxvY2F0aW9uIiwic291cmNlTWFwIiwidXNlQW5pbWF0ZWRHZXN0dXJlSGFuZGxlciIsImhhbmRsZXJzIiwiZGVwZW5kZW5jaWVzIiwiX3VzZUhhbmRsZXIiLCJ1c2VIYW5kbGVyIiwiY29udGV4dCIsImRvRGVwZW5kZW5jaWVzRGlmZmVyIiwidXNlV2ViIiwiaGFuZGxlciIsIl9lIiwiZ2xvYmFsIiwiRXJyb3IiLCJfZiIsImUiLCJldmVudCIsIm5hdGl2ZUV2ZW50Iiwic3RhdGUiLCJCRUdBTiIsIm9uU3RhcnQiLCJBQ1RJVkUiLCJvbkFjdGl2ZSIsIm9sZFN0YXRlIiwiRU5EIiwib25FbmQiLCJGQUlMRUQiLCJvbkZhaWwiLCJDQU5DRUxMRUQiLCJvbkNhbmNlbCIsIm9uRmluaXNoIiwiX2Nsb3N1cmUiLCJ1c2VFdmVudCJdLCJzb3VyY2VzIjpbInVzZUFuaW1hdGVkR2VzdHVyZUhhbmRsZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTXV0YWJsZVJlZk9iamVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IENvbnRleHQsIFdvcmtsZXRGdW5jdGlvbiB9IGZyb20gJy4uL2NvbW1vblR5cGVzJztcbmltcG9ydCBXb3JrbGV0RXZlbnRIYW5kbGVyIGZyb20gJy4uL1dvcmtsZXRFdmVudEhhbmRsZXInO1xuaW1wb3J0IHsgRGVwZW5kZW5jeUxpc3QgfSBmcm9tICcuL2NvbW1vblR5cGVzJztcbmltcG9ydCB7IHVzZUV2ZW50LCB1c2VIYW5kbGVyIH0gZnJvbSAnLi9Ib29rcyc7XG5cbmludGVyZmFjZSBIYW5kbGVyPFQsIFRDb250ZXh0IGV4dGVuZHMgQ29udGV4dD4gZXh0ZW5kcyBXb3JrbGV0RnVuY3Rpb24ge1xuICAoZXZlbnQ6IFQsIGNvbnRleHQ6IFRDb250ZXh0LCBpc0NhbmNlbGVkT3JGYWlsZWQ/OiBib29sZWFuKTogdm9pZDtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBHZXN0dXJlSGFuZGxlcnM8VCwgVENvbnRleHQgZXh0ZW5kcyBDb250ZXh0PiB7XG4gIFtrZXk6IHN0cmluZ106IEhhbmRsZXI8VCwgVENvbnRleHQ+IHwgdW5kZWZpbmVkO1xuICBvblN0YXJ0PzogSGFuZGxlcjxULCBUQ29udGV4dD47XG4gIG9uQWN0aXZlPzogSGFuZGxlcjxULCBUQ29udGV4dD47XG4gIG9uRW5kPzogSGFuZGxlcjxULCBUQ29udGV4dD47XG4gIG9uRmFpbD86IEhhbmRsZXI8VCwgVENvbnRleHQ+O1xuICBvbkNhbmNlbD86IEhhbmRsZXI8VCwgVENvbnRleHQ+O1xuICBvbkZpbmlzaD86IEhhbmRsZXI8VCwgVENvbnRleHQ+O1xufVxuXG5leHBvcnQgZW51bSBFdmVudFR5cGUge1xuICBVTkRFVEVSTUlORUQgPSAwLFxuICBGQUlMRUQsXG4gIEJFR0FOLFxuICBDQU5DRUxMRUQsXG4gIEFDVElWRSxcbiAgRU5ELFxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEdlc3R1cmVIYW5kbGVyU3RhdGVDaGFuZ2VOYXRpdmVFdmVudCB7XG4gIGhhbmRsZXJUYWc6IG51bWJlcjtcbiAgbnVtYmVyT2ZQb2ludGVyczogbnVtYmVyO1xuICBzdGF0ZTogRXZlbnRUeXBlO1xuICBvbGRTdGF0ZTogRXZlbnRUeXBlO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEdlc3R1cmVIYW5kbGVyRXZlbnQ8VD5cbiAgZXh0ZW5kcyBHZXN0dXJlSGFuZGxlclN0YXRlQ2hhbmdlTmF0aXZlRXZlbnQge1xuICBuYXRpdmVFdmVudDogVDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZUFuaW1hdGVkR2VzdHVyZUhhbmRsZXI8XG4gIFQgZXh0ZW5kcyBHZXN0dXJlSGFuZGxlckV2ZW50PFQ+LFxuICBUQ29udGV4dCBleHRlbmRzIENvbnRleHRcbj4oXG4gIGhhbmRsZXJzOiBHZXN0dXJlSGFuZGxlcnM8VCwgVENvbnRleHQ+LFxuICBkZXBlbmRlbmNpZXM/OiBEZXBlbmRlbmN5TGlzdFxuKTogTXV0YWJsZVJlZk9iamVjdDxXb3JrbGV0RXZlbnRIYW5kbGVyPFQ+IHwgbnVsbD4gfCAoKGU6IFQpID0+IHZvaWQpIHtcbiAgY29uc3QgeyBjb250ZXh0LCBkb0RlcGVuZGVuY2llc0RpZmZlciwgdXNlV2ViIH0gPSB1c2VIYW5kbGVyPFQsIFRDb250ZXh0PihcbiAgICBoYW5kbGVycyxcbiAgICBkZXBlbmRlbmNpZXNcbiAgKTtcblxuICBjb25zdCBoYW5kbGVyID0gKGU6IFQpID0+IHtcbiAgICAnd29ya2xldCc7XG4gICAgY29uc3QgZXZlbnQgPSB1c2VXZWIgPyBlLm5hdGl2ZUV2ZW50IDogZTtcblxuICAgIGlmIChldmVudC5zdGF0ZSA9PT0gRXZlbnRUeXBlLkJFR0FOICYmIGhhbmRsZXJzLm9uU3RhcnQpIHtcbiAgICAgIGhhbmRsZXJzLm9uU3RhcnQoZXZlbnQsIGNvbnRleHQpO1xuICAgIH1cbiAgICBpZiAoZXZlbnQuc3RhdGUgPT09IEV2ZW50VHlwZS5BQ1RJVkUgJiYgaGFuZGxlcnMub25BY3RpdmUpIHtcbiAgICAgIGhhbmRsZXJzLm9uQWN0aXZlKGV2ZW50LCBjb250ZXh0KTtcbiAgICB9XG4gICAgaWYgKFxuICAgICAgZXZlbnQub2xkU3RhdGUgPT09IEV2ZW50VHlwZS5BQ1RJVkUgJiZcbiAgICAgIGV2ZW50LnN0YXRlID09PSBFdmVudFR5cGUuRU5EICYmXG4gICAgICBoYW5kbGVycy5vbkVuZFxuICAgICkge1xuICAgICAgaGFuZGxlcnMub25FbmQoZXZlbnQsIGNvbnRleHQpO1xuICAgIH1cbiAgICBpZiAoXG4gICAgICBldmVudC5vbGRTdGF0ZSA9PT0gRXZlbnRUeXBlLkJFR0FOICYmXG4gICAgICBldmVudC5zdGF0ZSA9PT0gRXZlbnRUeXBlLkZBSUxFRCAmJlxuICAgICAgaGFuZGxlcnMub25GYWlsXG4gICAgKSB7XG4gICAgICBoYW5kbGVycy5vbkZhaWwoZXZlbnQsIGNvbnRleHQpO1xuICAgIH1cbiAgICBpZiAoXG4gICAgICBldmVudC5vbGRTdGF0ZSA9PT0gRXZlbnRUeXBlLkFDVElWRSAmJlxuICAgICAgZXZlbnQuc3RhdGUgPT09IEV2ZW50VHlwZS5DQU5DRUxMRUQgJiZcbiAgICAgIGhhbmRsZXJzLm9uQ2FuY2VsXG4gICAgKSB7XG4gICAgICBoYW5kbGVycy5vbkNhbmNlbChldmVudCwgY29udGV4dCk7XG4gICAgfVxuICAgIGlmIChcbiAgICAgIChldmVudC5vbGRTdGF0ZSA9PT0gRXZlbnRUeXBlLkJFR0FOIHx8XG4gICAgICAgIGV2ZW50Lm9sZFN0YXRlID09PSBFdmVudFR5cGUuQUNUSVZFKSAmJlxuICAgICAgZXZlbnQuc3RhdGUgIT09IEV2ZW50VHlwZS5CRUdBTiAmJlxuICAgICAgZXZlbnQuc3RhdGUgIT09IEV2ZW50VHlwZS5BQ1RJVkUgJiZcbiAgICAgIGhhbmRsZXJzLm9uRmluaXNoXG4gICAgKSB7XG4gICAgICBoYW5kbGVycy5vbkZpbmlzaChcbiAgICAgICAgZXZlbnQsXG4gICAgICAgIGNvbnRleHQsXG4gICAgICAgIGV2ZW50LnN0YXRlID09PSBFdmVudFR5cGUuQ0FOQ0VMTEVEIHx8IGV2ZW50LnN0YXRlID09PSBFdmVudFR5cGUuRkFJTEVEXG4gICAgICApO1xuICAgIH1cbiAgfTtcblxuICBpZiAodXNlV2ViKSB7XG4gICAgcmV0dXJuIGhhbmRsZXI7XG4gIH1cblxuICByZXR1cm4gdXNlRXZlbnQ8VD4oXG4gICAgaGFuZGxlcixcbiAgICBbJ29uR2VzdHVyZUhhbmRsZXJTdGF0ZUNoYW5nZScsICdvbkdlc3R1cmVIYW5kbGVyRXZlbnQnXSxcbiAgICBkb0RlcGVuZGVuY2llc0RpZmZlclxuICApO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7OztBQUlBLElBQUFBLE1BQUEsR0FBQUMsT0FBQTtBQWdCQSxJQUFZQyxTQUFTLGFBQVRBLFNBQVM7RUFBVEEsU0FBUyxDQUFUQSxTQUFTO0VBQVRBLFNBQVMsQ0FBVEEsU0FBUztFQUFUQSxTQUFTLENBQVRBLFNBQVM7RUFBVEEs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