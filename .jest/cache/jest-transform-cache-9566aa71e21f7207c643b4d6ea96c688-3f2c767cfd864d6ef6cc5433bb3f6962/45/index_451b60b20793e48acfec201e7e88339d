6583dd1eeadeb2c1c9a0436a7862e0f2
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var Dot = function Dot(_ref) {
  var theme = _ref.theme,
    marked = _ref.marked,
    disabled = _ref.disabled,
    inactive = _ref.inactive,
    color = _ref.color,
    today = _ref.today,
    selected = _ref.selected;
  var style = (0, _react.useRef)((0, _style.default)(theme));
  var dotStyle = [style.current.dot];
  if (marked) {
    dotStyle.push(style.current.visibleDot);
    if (today) {
      dotStyle.push(style.current.todayDot);
    }
    if (disabled) {
      dotStyle.push(style.current.disabledDot);
    }
    if (inactive) {
      dotStyle.push(style.current.inactiveDot);
    }
    if (selected) {
      dotStyle.push(style.current.selectedDot);
    }
    if (color) {
      dotStyle.push({
        backgroundColor: color
      });
    }
  }
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: dotStyle
  });
};
var _default = Dot;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfcmVhY3ROYXRpdmUiLCJfc3R5bGUiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX2pzeFJ1bnRpbWUiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJub2RlSW50ZXJvcCIsIldlYWtNYXAiLCJjYWNoZUJhYmVsSW50ZXJvcCIsImNhY2hlTm9kZUludGVyb3AiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJkZXNjIiwic2V0IiwiRG90IiwiX3JlZiIsInRoZW1lIiwibWFya2VkIiwiZGlzYWJsZWQiLCJpbmFjdGl2ZSIsImNvbG9yIiwidG9kYXkiLCJzZWxlY3RlZCIsInN0eWxlIiwidXNlUmVmIiwic3R5bGVDb25zdHJ1Y3RvciIsImRvdFN0eWxlIiwiY3VycmVudCIsImRvdCIsInB1c2giLCJ2aXNpYmxlRG90IiwidG9kYXlEb3QiLCJkaXNhYmxlZERvdCIsImluYWN0aXZlRG90Iiwic2VsZWN0ZWREb3QiLCJiYWNrZ3JvdW5kQ29sb3IiLCJqc3giLCJWaWV3IiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFZpZXcgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHN0eWxlQ29uc3RydWN0b3IgZnJvbSAnLi9zdHlsZSc7XG5jb25zdCBEb3QgPSAoeyB0aGVtZSwgbWFya2VkLCBkaXNhYmxlZCwgaW5hY3RpdmUsIGNvbG9yLCB0b2RheSwgc2VsZWN0ZWQgfSkgPT4ge1xuICAgIGNvbnN0IHN0eWxlID0gdXNlUmVmKHN0eWxlQ29uc3RydWN0b3IodGhlbWUpKTtcbiAgICBjb25zdCBkb3RTdHlsZSA9IFtzdHlsZS5jdXJyZW50LmRvdF07XG4gICAgaWYgKG1hcmtlZCkge1xuICAgICAgICBkb3RTdHlsZS5wdXNoKHN0eWxlLmN1cnJlbnQudmlzaWJsZURvdCk7XG4gICAgICAgIGlmICh0b2RheSkge1xuICAgICAgICAgICAgZG90U3R5bGUucHVzaChzdHlsZS5jdXJyZW50LnRvZGF5RG90KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZGlzYWJsZWQpIHtcbiAgICAgICAgICAgIGRvdFN0eWxlLnB1c2goc3R5bGUuY3VycmVudC5kaXNhYmxlZERvdCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGluYWN0aXZlKSB7XG4gICAgICAgICAgICBkb3RTdHlsZS5wdXNoKHN0eWxlLmN1cnJlbnQuaW5hY3RpdmVEb3QpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxlY3RlZCkge1xuICAgICAgICAgICAgZG90U3R5bGUucHVzaChzdHlsZS5jdXJyZW50LnNlbGVjdGVkRG90KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY29sb3IpIHtcbiAgICAgICAgICAgIGRvdFN0eWxlLnB1c2goeyBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9yIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiA8VmlldyBzdHlsZT17ZG90U3R5bGV9Lz47XG59O1xuZXhwb3J0IGRlZmF1bHQgRG90O1xuIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUgsT0FBQTtBQUF1QyxJQUFBSSxXQUFBLEdBQUFKLE9BQUE7QUFBQSxTQUFBSyx5QkFBQUMsV0FBQSxlQUFBQyxPQUFBLGtDQUFBQyxpQkFB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