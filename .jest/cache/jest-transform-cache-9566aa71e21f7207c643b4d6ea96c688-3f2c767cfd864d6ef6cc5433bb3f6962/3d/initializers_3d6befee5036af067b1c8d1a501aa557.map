{"version":3,"names":["_errors","require","_NativeReanimated","_interopRequireDefault","_PlatformChecker","_threads","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","_worklet_2058902618278_init_data","code","location","sourceMap","callGuardDEV","_e","global","Error","_f","fn","_len","args","Array","_key","__ErrorUtils","reportFatalError","_closure","__initData","__workletHash","__stackDetails","__version","_worklet_7622902604485_init_data","valueUnpacker","objectToUnpack","category","workletsCache","__workletsCache","handleCache","__handleCache","undefined","Map","WeakMap","workletHash","workletFun","get","initData","evalWithSourceMap","evalWithSourceUrl","eval","set","functionInstance","bind","_recur","__init","value","fun","__remoteFunction","_worklet_9468165435498_init_data","setupRequestAnimationFrame","nativeRequestAnimationFrame","requestAnimationFrame","animationFrameCallbacks","lastNativeAnimationFrameTimestamp","__flushAnimationFrame","frameTimestamp","currentCallbacks","f","callMicrotasks","callback","timestamp","__frameTimestamp","_worklet_9801289261028_init_data","initializeUIRuntime","NativeReanimatedModule","installCoreFunctions","IS_JEST","isJest","IS_CHROME_DEBUGGER","isChromeDebugger","setTimeout","performance","now","capturableConsole","console","runOnUIImmediately","error","runOnJS","reportFatalErrorOnJS","message","stack","assert","debug","log","warn","info","setupMicrotasks"],"sources":["initializers.ts"],"sourcesContent":["import { reportFatalErrorOnJS } from './errors';\nimport NativeReanimatedModule from './NativeReanimated';\nimport { isChromeDebugger, isJest } from './PlatformChecker';\nimport {\n  runOnJS,\n  setupMicrotasks,\n  callMicrotasks,\n  runOnUIImmediately,\n} from './threads';\n\n// callGuard is only used with debug builds\nfunction callGuardDEV<T extends Array<any>, U>(\n  fn: (...args: T) => U,\n  ...args: T\n): void {\n  'worklet';\n  try {\n    fn(...args);\n  } catch (e) {\n    if (global.__ErrorUtils) {\n      global.__ErrorUtils.reportFatalError(e as Error);\n    } else {\n      throw e;\n    }\n  }\n}\n\nfunction valueUnpacker(objectToUnpack: any, category?: string): any {\n  'worklet';\n  let workletsCache = global.__workletsCache;\n  let handleCache = global.__handleCache;\n  if (workletsCache === undefined) {\n    // init\n    workletsCache = global.__workletsCache = new Map();\n    handleCache = global.__handleCache = new WeakMap();\n  }\n  const workletHash = objectToUnpack.__workletHash;\n  if (workletHash !== undefined) {\n    let workletFun = workletsCache.get(workletHash);\n    if (workletFun === undefined) {\n      const initData = objectToUnpack.__initData;\n      if (global.evalWithSourceMap) {\n        // if the runtime (hermes only for now) supports loading source maps\n        // we want to use the proper filename for the location as it guarantees\n        // that debugger understands and loads the source code of the file where\n        // the worklet is defined.\n        workletFun = global.evalWithSourceMap(\n          '(' + initData.code + '\\n)',\n          initData.location,\n          initData.sourceMap\n        ) as (...args: any[]) => any;\n      } else if (global.evalWithSourceUrl) {\n        // if the runtime doesn't support loading source maps, in dev mode we\n        // can pass source url when evaluating the worklet. Now, instead of using\n        // the actual file location we use worklet hash, as it the allows us to\n        // properly symbolicate traces (see errors.ts for details)\n        workletFun = global.evalWithSourceUrl(\n          '(' + initData.code + '\\n)',\n          `worklet_${workletHash}`\n        ) as (...args: any[]) => any;\n      } else {\n        // in release we use the regular eval to save on JSI calls\n        // eslint-disable-next-line no-eval\n        workletFun = eval('(' + initData.code + '\\n)') as (\n          ...args: any[]\n        ) => any;\n      }\n      workletsCache.set(workletHash, workletFun);\n    }\n    const functionInstance = workletFun.bind(objectToUnpack);\n    objectToUnpack._recur = functionInstance;\n    return functionInstance;\n  } else if (objectToUnpack.__init) {\n    let value = handleCache!.get(objectToUnpack);\n    if (value === undefined) {\n      value = objectToUnpack.__init();\n      handleCache!.set(objectToUnpack, value);\n    }\n    return value;\n  } else if (category === 'RemoteFunction') {\n    const fun = () => {\n      throw new Error(`Tried to synchronously call a non-worklet function on the UI thread.\n\nPossible solutions are:\n  a) If you want to synchronously execute this method, mark it as a worklet\n  b) If you want to execute this function on the JS thread, wrap it using \\`runOnJS\\``);\n    };\n    fun.__remoteFunction = objectToUnpack;\n    return fun;\n  } else {\n    throw new Error('data type not recognized by unpack method');\n  }\n}\n\nfunction setupRequestAnimationFrame() {\n  'worklet';\n\n  // Jest mocks requestAnimationFrame API and it does not like if that mock gets overridden\n  // so we avoid doing requestAnimationFrame batching in Jest environment.\n  const nativeRequestAnimationFrame = global.requestAnimationFrame;\n\n  let animationFrameCallbacks: Array<(timestamp: number) => void> = [];\n  let lastNativeAnimationFrameTimestamp = -1;\n\n  global.__flushAnimationFrame = (frameTimestamp: number) => {\n    const currentCallbacks = animationFrameCallbacks;\n    animationFrameCallbacks = [];\n    currentCallbacks.forEach((f) => f(frameTimestamp));\n    callMicrotasks();\n  };\n\n  global.requestAnimationFrame = (\n    callback: (timestamp: number) => void\n  ): number => {\n    animationFrameCallbacks.push(callback);\n    if (animationFrameCallbacks.length === 1) {\n      // We schedule native requestAnimationFrame only when the first callback\n      // is added and then use it to execute all the enqueued callbacks. Once\n      // the callbacks are run, we clear the array.\n      nativeRequestAnimationFrame((timestamp) => {\n        if (lastNativeAnimationFrameTimestamp >= timestamp) {\n          // Make sure we only execute the callbacks once for a given frame\n          return;\n        }\n        lastNativeAnimationFrameTimestamp = timestamp;\n        global.__frameTimestamp = timestamp;\n        global.__flushAnimationFrame(timestamp);\n        global.__frameTimestamp = undefined;\n      });\n    }\n    // Reanimated currently does not support cancelling callbacks requested with\n    // requestAnimationFrame. We return -1 as identifier which isn't in line\n    // with the spec but it should give users better clue in case they actually\n    // attempt to store the value returned from rAF and use it for cancelling.\n    return -1;\n  };\n}\n\nexport function initializeUIRuntime() {\n  NativeReanimatedModule.installCoreFunctions(callGuardDEV, valueUnpacker);\n\n  const IS_JEST = isJest();\n  const IS_CHROME_DEBUGGER = isChromeDebugger();\n\n  if (IS_JEST) {\n    // requestAnimationFrame react-native jest's setup is incorrect as it polyfills\n    // the method directly using setTimeout, therefore the callback doesn't get the\n    // expected timestamp as the only argument: https://github.com/facebook/react-native/blob/main/jest/setup.js#L28\n    // We override this setup here to make sure that callbacks get the proper timestamps\n    // when executed. For non-jest environments we define requestAnimationFrame in setupRequestAnimationFrame\n    // @ts-ignore TypeScript uses Node definition for rAF, setTimeout, etc which returns a Timeout object rather than a number\n    global.requestAnimationFrame = (callback: (timestamp: number) => void) => {\n      return setTimeout(() => callback(performance.now()), 0);\n    };\n  }\n\n  // We really have to create a copy of console here. Function runOnJS we use on elements inside\n  // this object makes it not configurable\n  const capturableConsole = { ...console };\n  runOnUIImmediately(() => {\n    'worklet';\n    // setup error handler\n    global.__ErrorUtils = {\n      reportFatalError: (error: Error) => {\n        runOnJS(reportFatalErrorOnJS)({\n          message: error.message,\n          stack: error.stack,\n        });\n      },\n    };\n\n    if (!IS_CHROME_DEBUGGER) {\n      // setup console\n      // @ts-ignore TypeScript doesn't like that there are missing methods in console object, but we don't provide all the methods for the UI runtime console version\n      global.console = {\n        assert: runOnJS(capturableConsole.assert),\n        debug: runOnJS(capturableConsole.debug),\n        log: runOnJS(capturableConsole.log),\n        warn: runOnJS(capturableConsole.warn),\n        error: runOnJS(capturableConsole.error),\n        info: runOnJS(capturableConsole.info),\n      };\n    }\n\n    if (!IS_JEST) {\n      setupMicrotasks();\n      setupRequestAnimationFrame();\n    }\n  })();\n}\n"],"mappings":"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"}