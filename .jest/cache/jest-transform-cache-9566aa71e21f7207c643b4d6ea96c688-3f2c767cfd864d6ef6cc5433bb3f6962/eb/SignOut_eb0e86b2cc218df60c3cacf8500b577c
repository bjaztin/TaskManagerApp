3e1a3d555d56b724c90a263fea8dcb04
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _reactNative = require("react-native");
var _react = _interopRequireWildcard(require("react"));
var _vectorIcons = require("@expo/vector-icons");
var _firebase = require("../../../firebase");
var _auth = require("firebase/auth");
var _reactNativeGestureHandler = require("react-native-gesture-handler");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function cov_24758b82vf() {
  var path = "/Users/bjaztin/Desktop/taskManagerApp/src/components/TaskScreenFeatures/SignOut.js";
  var hash = "5681398cecc05418cdddbb680ea81526a320fa3d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/bjaztin/Desktop/taskManagerApp/src/components/TaskScreenFeatures/SignOut.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 63,
          column: 1
        }
      },
      "1": {
        start: {
          line: 10,
          column: 42
        },
        end: {
          line: 10,
          column: 57
        }
      },
      "2": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "3": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 18,
          column: 46
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 31
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 41
        }
      },
      "6": {
        start: {
          line: 18,
          column: 24
        },
        end: {
          line: 18,
          column: 44
        }
      },
      "7": {
        start: {
          line: 21,
          column: 2
        },
        end: {
          line: 62,
          column: 4
        }
      },
      "8": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "9": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 43
        }
      },
      "10": {
        start: {
          line: 42,
          column: 33
        },
        end: {
          line: 42,
          column: 63
        }
      },
      "11": {
        start: {
          line: 58,
          column: 55
        },
        end: {
          line: 58,
          column: 76
        }
      },
      "12": {
        start: {
          line: 67,
          column: 15
        },
        end: {
          line: 115,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 17
          }
        },
        loc: {
          start: {
            line: 8,
            column: 36
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 12,
            column: 25
          }
        },
        loc: {
          start: {
            line: 12,
            column: 30
          },
          end: {
            line: 19,
            column: 3
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 14,
            column: 12
          },
          end: {
            line: 14,
            column: 13
          }
        },
        loc: {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 17,
            column: 7
          }
        },
        line: 14
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 13
          },
          end: {
            line: 18,
            column: 14
          }
        },
        loc: {
          start: {
            line: 18,
            column: 24
          },
          end: {
            line: 18,
            column: 44
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 29,
            column: 26
          },
          end: {
            line: 29,
            column: 27
          }
        },
        loc: {
          start: {
            line: 29,
            column: 32
          },
          end: {
            line: 32,
            column: 11
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 42,
            column: 27
          },
          end: {
            line: 42,
            column: 28
          }
        },
        loc: {
          start: {
            line: 42,
            column: 33
          },
          end: {
            line: 42,
            column: 63
          }
        },
        line: 42
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 58,
            column: 49
          },
          end: {
            line: 58,
            column: 50
          }
        },
        loc: {
          start: {
            line: 58,
            column: 55
          },
          end: {
            line: 58,
            column: 76
          }
        },
        line: 58
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5681398cecc05418cdddbb680ea81526a320fa3d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_24758b82vf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_24758b82vf();
cov_24758b82vf().s[0]++;
var SignOut = function SignOut(_ref) {
  var navigation = _ref.navigation;
  cov_24758b82vf().f[0]++;
  var _ref2 = (cov_24758b82vf().s[1]++, (0, _react.useState)(false)),
    _ref3 = (0, _slicedToArray2.default)(_ref2, 2),
    modalVisible = _ref3[0],
    setModalVisible = _ref3[1];
  cov_24758b82vf().s[2]++;
  var handleSignOut = function handleSignOut() {
    cov_24758b82vf().f[1]++;
    cov_24758b82vf().s[3]++;
    (0, _auth.signOut)(_firebase.auth).then(function () {
      cov_24758b82vf().f[2]++;
      cov_24758b82vf().s[4]++;
      setModalVisible(false);
      cov_24758b82vf().s[5]++;
      navigation.replace("OnBoarding");
    }).catch(function (error) {
      cov_24758b82vf().f[3]++;
      cov_24758b82vf().s[6]++;
      return alert(error.message);
    });
  };
  cov_24758b82vf().s[7]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.container,
    children: [(0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.centeredView,
      children: (0, _jsxRuntime.jsx)(_reactNative.Modal, {
        testID: "signOutmodal",
        animationType: "slide",
        transparent: true,
        visible: modalVisible,
        onRequestClose: function onRequestClose() {
          cov_24758b82vf().f[4]++;
          cov_24758b82vf().s[8]++;
          Alert.alert("Modal has been closed.");
          cov_24758b82vf().s[9]++;
          setModalVisible(!modalVisible);
        },
        children: (0, _jsxRuntime.jsx)(_reactNative.View, {
          style: styles.centeredView,
          children: (0, _jsxRuntime.jsxs)(_reactNative.View, {
            style: styles.modalView,
            children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
              style: styles.modalText,
              children: "Are you sure you want to sign out?"
            }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
              style: styles.buttons,
              children: [(0, _jsxRuntime.jsx)(_reactNativeGestureHandler.TouchableOpacity, {
                style: [styles.cancelButton],
                onPress: function onPress() {
                  cov_24758b82vf().f[5]++;
                  cov_24758b82vf().s[10]++;
                  return setModalVisible(!modalVisible);
                },
                testID: "cancel",
                children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
                  style: styles.cancelTextStyle,
                  children: "Cancel"
                })
              }), (0, _jsxRuntime.jsx)(_reactNativeGestureHandler.TouchableOpacity, {
                style: [styles.signOutButton],
                onPress: handleSignOut,
                children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
                  style: styles.signOutTextStyle,
                  children: "Sign Out"
                })
              })]
            })]
          })
        })
      })
    }), (0, _jsxRuntime.jsx)(_reactNativeGestureHandler.TouchableOpacity, {
      testID: "logout",
      onPress: function onPress() {
        cov_24758b82vf().f[6]++;
        cov_24758b82vf().s[11]++;
        return setModalVisible(true);
      },
      children: (0, _jsxRuntime.jsx)(_vectorIcons.MaterialIcons, {
        name: "logout",
        size: 22,
        color: "gray"
      })
    })]
  });
};
var _default = SignOut;
exports.default = _default;
var styles = (cov_24758b82vf().s[12]++, _reactNative.StyleSheet.create({
  centeredView: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    marginTop: 22
  },
  modalView: {
    margin: 10,
    backgroundColor: "white",
    borderRadius: 20,
    padding: 45,
    alignItems: "center",
    shadowColor: "#000",
    shadowOffset: {
      width: 0,
      height: 2
    },
    shadowOpacity: 0.25,
    shadowRadius: 4,
    elevation: 5
  },
  buttons: {
    flexDirection: "row"
  },
  cancelButton: {
    borderRadius: 12,
    padding: 12,
    backgroundColor: "lightgray"
  },
  signOutButton: {
    borderRadius: 12,
    padding: 12,
    marginLeft: 5,
    backgroundColor: "#D58258"
  },
  cancelTextStyle: {
    color: "white",
    textAlign: "center"
  },
  signOutTextStyle: {
    color: "white",
    textAlign: "center"
  },
  modalText: {
    marginBottom: 15,
    textAlign: "center"
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,