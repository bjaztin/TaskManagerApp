{"version":3,"names":["bisectRoot","_e","global","Error","_f","_ref","min","max","func","_ref$maxIterations","maxIterations","ACCURACY","idx","current","Math","abs","_closure","__initData","_worklet_2968916340903_init_data","__workletHash","__stackDetails","__version","_worklet_15750509760427_init_data","code","location","sourceMap","initialCalculations","mass","arguments","length","undefined","config","configIsInvalid","zeta","omega0","omega1","useDuration","k","stiffness","dampingRatio","sqrt","c","damping","m","exports","_worklet_4593224459311_init_data","_worklet_411302994911_init_data","calcuateNewMassToMatchDuration","x0","v0","threshold","restSpeedThreshold","duration","durationForMass","amplitude","exp","log","_worklet_17497043282573_init_data","criticallyDampedSpringCalculations","animation","precalculatedValues","toValue","t","criticallyDampedEnvelope","criticallyDampedPosition","criticallyDampedVelocity","position","velocity","_worklet_14463682152611_init_data","underDampedSpringCalculations","sin1","sin","cos1","cos","underDampedEnvelope","underDampedFrag1","underDampedPosition","underDampedVelocity","_worklet_6231286114166_init_data","isAnimationTerminatingCalculation","startValue","isOvershooting","overshootClamping","isVelocity","isDisplacement","restDisplacementThreshold"],"sources":["springUtils.ts"],"sourcesContent":["import { Animation, AnimatableValue, Timestamp } from '../commonTypes';\n\nexport type SpringConfig = {\n  stiffness?: number;\n  overshootClamping?: boolean;\n  restDisplacementThreshold?: number;\n  restSpeedThreshold?: number;\n  velocity?: number;\n} & (\n  | {\n      mass?: number;\n      damping?: number;\n      duration?: never;\n      dampingRatio?: never;\n    }\n  | {\n      mass?: never;\n      damping?: never;\n      duration?: number;\n      dampingRatio?: number;\n    }\n);\n\nexport interface SpringConfigInner {\n  useDuration: boolean;\n  configIsInvalid: boolean;\n}\n\nexport interface SpringAnimation extends Animation<SpringAnimation> {\n  current: AnimatableValue;\n  toValue: AnimatableValue;\n  velocity: number;\n  lastTimestamp: Timestamp;\n  startTimestamp: Timestamp;\n  startValue: number;\n  zeta: number;\n  omega0: number;\n  omega1: number;\n}\n\nexport interface InnerSpringAnimation\n  extends Omit<SpringAnimation, 'toValue' | 'current'> {\n  toValue: number;\n  current: number;\n}\n\nfunction bisectRoot({\n  min,\n  max,\n  func,\n  maxIterations = 20,\n}: {\n  min: number;\n  max: number;\n  func: (x: number) => number;\n  maxIterations?: number;\n}) {\n  'worklet';\n  const ACCURACY = 0.00005;\n  let idx = maxIterations;\n  let current = (max + min) / 2;\n  while (Math.abs(func(current)) > ACCURACY && idx > 0) {\n    idx -= 1;\n\n    if (func(current) < 0) {\n      min = current;\n    } else {\n      max = current;\n    }\n    current = (min + max) / 2;\n  }\n  return current;\n}\n\nexport function initialCalculations(\n  mass = 0,\n  config: Record<keyof SpringConfig, any> & SpringConfigInner\n): {\n  zeta: number;\n  omega0: number;\n  omega1: number;\n} {\n  'worklet';\n\n  if (config.configIsInvalid) {\n    return { zeta: 0, omega0: 0, omega1: 0 };\n  }\n\n  if (config.useDuration) {\n    const { stiffness: k, dampingRatio: zeta } = config;\n\n    /** omega0 and omega1 denote angular frequency and natural angular frequency, see this link for formulas:\n     *  https://courses.lumenlearning.com/suny-osuniversityphysics/chapter/15-5-damped-oscillations/\n     */\n    const omega0 = Math.sqrt(k / mass);\n    const omega1 = omega0 * Math.sqrt(1 - zeta ** 2);\n\n    return { zeta, omega0, omega1 };\n  } else {\n    const { damping: c, mass: m, stiffness: k } = config;\n\n    const zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n    const omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n    const omega1 = omega0 * Math.sqrt(1 - zeta ** 2); // exponential decay\n\n    return { zeta, omega0, omega1 };\n  }\n}\n\nexport function calcuateNewMassToMatchDuration(\n  x0: number,\n  config: Record<keyof SpringConfig, any> & SpringConfigInner,\n  v0: number\n) {\n  'worklet';\n  if (config.configIsInvalid) {\n    return 0;\n  }\n\n  /** Use this formula: https://phys.libretexts.org/Bookshelves/University_Physics/Book%3A_University_Physics_(OpenStax)/Book%3A_University_Physics_I_-_Mechanics_Sound_Oscillations_and_Waves_(OpenStax)/15%3A_Oscillations/15.06%3A_Damped_Oscillations\n       * to find the asympotote and esitmate the damping that gives us the expected duration \n\n            ⎛ ⎛ c⎞           ⎞           \n            ⎜-⎜──⎟ ⋅ duration⎟           \n            ⎝ ⎝2m⎠           ⎠           \n       A ⋅ e                   = treshold\n\n \n      Amplitude calculated using \"Conservation of energy\"\n                       _________________\n                      ╱      2         2\n                     ╱ m ⋅ v0  + k ⋅ x0 \n      amplitude =   ╱  ─────────────────\n                  ╲╱           k        \n\n      And replace mass with damping ratio which is provided: m = (c^2)/(4 * k * zeta^2)   \n      */\n  const {\n    stiffness: k,\n    dampingRatio: zeta,\n    restSpeedThreshold: threshold,\n    duration,\n  } = config;\n\n  const durationForMass = (mass: number) => {\n    'worklet';\n    const amplitude =\n      (mass * v0 * v0 + k * x0 * x0) / (Math.exp(1 - 0.5 * zeta) * k);\n    const c = zeta * 2 * Math.sqrt(k * mass);\n    return (\n      1000 * ((-2 * mass) / c) * Math.log((threshold * 0.01) / amplitude) -\n      duration\n    );\n  };\n\n  // Bisection turns out to be much faster than Newton's method in our case\n  return bisectRoot({ min: 0, max: 100, func: durationForMass });\n}\n\nexport function criticallyDampedSpringCalculations(\n  animation: InnerSpringAnimation,\n  precalculatedValues: {\n    v0: number;\n    x0: number;\n    omega0: number;\n    t: number;\n  }\n): { position: number; velocity: number } {\n  'worklet';\n  const { toValue } = animation;\n\n  const { v0, x0, omega0, t } = precalculatedValues;\n\n  const criticallyDampedEnvelope = Math.exp(-omega0 * t);\n  const criticallyDampedPosition =\n    toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\n\n  const criticallyDampedVelocity =\n    criticallyDampedEnvelope *\n    (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\n\n  return {\n    position: criticallyDampedPosition,\n    velocity: criticallyDampedVelocity,\n  };\n}\n\nexport function underDampedSpringCalculations(\n  animation: InnerSpringAnimation,\n  precalculatedValues: {\n    zeta: number;\n    v0: number;\n    x0: number;\n    omega0: number;\n    omega1: number;\n    t: number;\n  }\n): { position: number; velocity: number } {\n  'worklet';\n  const { toValue, current, velocity } = animation;\n\n  const { zeta, t, omega0, omega1 } = precalculatedValues;\n\n  const v0 = -velocity;\n  const x0 = toValue - current;\n\n  const sin1 = Math.sin(omega1 * t);\n  const cos1 = Math.cos(omega1 * t);\n\n  // under damped\n  const underDampedEnvelope = Math.exp(-zeta * omega0 * t);\n  const underDampedFrag1 =\n    underDampedEnvelope *\n    (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\n\n  const underDampedPosition = toValue - underDampedFrag1;\n  // This looks crazy -- it's actually just the derivative of the oscillation function\n  const underDampedVelocity =\n    zeta * omega0 * underDampedFrag1 -\n    underDampedEnvelope *\n      (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\n\n  return { position: underDampedPosition, velocity: underDampedVelocity };\n}\n\nexport function isAnimationTerminatingCalculation(\n  animation: InnerSpringAnimation,\n  config: Partial<SpringConfig> &\n    Required<\n      Pick<SpringConfig, 'restSpeedThreshold' | 'restDisplacementThreshold'>\n    >\n): {\n  isOvershooting: boolean;\n  isVelocity: boolean;\n  isDisplacement: boolean;\n} {\n  'worklet';\n  const { toValue, velocity, startValue, current } = animation;\n\n  const isOvershooting = config.overshootClamping\n    ? (current > toValue && startValue < toValue) ||\n      (current < toValue && startValue > toValue)\n    : false;\n\n  const isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\n  const isDisplacement =\n    Math.abs(toValue - current) < config.restDisplacementThreshold;\n\n  return { isOvershooting, isVelocity, isDisplacement };\n}\n"],"mappings":"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"}