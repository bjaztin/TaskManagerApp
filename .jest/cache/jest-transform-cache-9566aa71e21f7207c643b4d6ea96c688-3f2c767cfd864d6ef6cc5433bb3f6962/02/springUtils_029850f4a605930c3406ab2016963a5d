0a3f244b5c58befa547bd97aa3f0e48f
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.underDampedSpringCalculations = exports.isAnimationTerminatingCalculation = exports.initialCalculations = exports.criticallyDampedSpringCalculations = exports.calcuateNewMassToMatchDuration = void 0;
var _worklet_2968916340903_init_data = {
  code: "function bisectRoot(_ref) {\n  let {\n    min: min,\n    max: max,\n    func: func,\n    maxIterations = 20\n  } = _ref;\n  const ACCURACY = 0.00005;\n  let idx = maxIterations;\n  let current = (max + min) / 2;\n  while (Math.abs(func(current)) > ACCURACY && idx > 0) {\n    idx -= 1;\n    if (func(current) < 0) {\n      min = current;\n    } else {\n      max = current;\n    }\n    current = (min + max) / 2;\n  }\n  return current;\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/animation/springUtils.js",
  sourceMap: "{\"version\":3,\"names\":[\"bisectRoot\",\"_ref\",\"min\",\"max\",\"func\",\"maxIterations\",\"ACCURACY\",\"idx\",\"current\",\"Math\",\"abs\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/animation/springUtils.js\"],\"mappings\":\"AAAA,SAAAA,UAASA,CAAWC,IAAA,EAAI;EAGtB,IAAI;IACFC,GAAG,EAAHA,GAAG;IACHC,GAAG,EAAHA,GAAG;IACHC,IAAI,EAAJA,IAAI;IACJC,aAAa,GAAG;EAClB,CAAC,GAAGJ,IAAI;EACR,MAAMK,QAAQ,GAAG,OAAO;EACxB,IAAIC,GAAG,GAAGF,aAAa;EACvB,IAAIG,OAAO,GAAG,CAACL,GAAG,GAAGD,GAAG,IAAI,CAAC;EAC7B,OAAOO,IAAI,CAACC,GAAG,CAACN,IAAI,CAACI,OAAO,CAAC,CAAC,GAAGF,QAAQ,IAAIC,GAAG,GAAG,CAAC,EAAE;IACpDA,GAAG,IAAI,CAAC;IACR,IAAIH,IAAI,CAACI,OAAO,CAAC,GAAG,CAAC,EAAE;MACrBN,GAAG,GAAGM,OAAO;IACf,CAAC,MAAM;MACLL,GAAG,GAAGK,OAAO;IACf;IACAA,OAAO,GAAG,CAACN,GAAG,GAAGC,GAAG,IAAI,CAAC;EAC3B;EACA,OAAOK,OAAO;AAChB\"}"
};
var bisectRoot = function () {
  var _e = [new global.Error(), 1, -27];
  var _f = function _f(_ref) {
    var min = _ref.min,
      max = _ref.max,
      func = _ref.func,
      _ref$maxIterations = _ref.maxIterations,
      maxIterations = _ref$maxIterations === void 0 ? 20 : _ref$maxIterations;
    var ACCURACY = 0.00005;
    var idx = maxIterations;
    var current = (max + min) / 2;
    while (Math.abs(func(current)) > ACCURACY && idx > 0) {
      idx -= 1;
      if (func(current) < 0) {
        min = current;
      } else {
        max = current;
      }
      current = (min + max) / 2;
    }
    return current;
  };
  _f._closure = {};
  _f.__initData = _worklet_2968916340903_init_data;
  _f.__workletHash = 2968916340903;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
var _worklet_15750509760427_init_data = {
  code: "function initialCalculations() {\n  let mass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let config = arguments.length > 1 ? arguments[1] : undefined;\n  if (config.configIsInvalid) {\n    return {\n      zeta: 0,\n      omega0: 0,\n      omega1: 0\n    };\n  }\n  if (config.useDuration) {\n    const {\n      stiffness: k,\n      dampingRatio: zeta\n    } = config;\n    const omega0 = Math.sqrt(k / mass);\n    const omega1 = omega0 * Math.sqrt(1 - zeta ** 2);\n    return {\n      zeta: zeta,\n      omega0: omega0,\n      omega1: omega1\n    };\n  } else {\n    const {\n      damping: c,\n      mass: m,\n      stiffness: k\n    } = config;\n    const zeta = c / (2 * Math.sqrt(k * m));\n    const omega0 = Math.sqrt(k / m);\n    const omega1 = omega0 * Math.sqrt(1 - zeta ** 2);\n    return {\n      zeta: zeta,\n      omega0: omega0,\n      omega1: omega1\n    };\n  }\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/animation/springUtils.js",
  sourceMap: "{\"version\":3,\"names\":[\"initialCalculations\",\"mass\",\"arguments\",\"length\",\"undefined\",\"config\",\"configIsInvalid\",\"zeta\",\"omega0\",\"omega1\",\"useDuration\",\"stiffness\",\"k\",\"dampingRatio\",\"Math\",\"sqrt\",\"damping\",\"c\",\"m\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/animation/springUtils.js\"],\"mappings\":\"AAuBO,SAAAA,mBAASA,CAAA,EAAmB;EAGjC,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;EAChF,IAAIG,MAAM,GAAGH,SAAS,CAACC,MAAM,GAAG,CAAC,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAGE,SAAS;EAC5D,IAAIC,MAAM,CAACC,eAAe,EAAE;IAC1B,OAAO;MACLC,IAAI,EAAE,CAAC;MACPC,MAAM,EAAE,CAAC;MACTC,MAAM,EAAE;IACV,CAAC;EACH;EACA,IAAIJ,MAAM,CAACK,WAAW,EAAE;IACtB,MAAM;MACJC,SAAS,EAAEC,CAAC;MACZC,YAAY,EAAEN;IAChB,CAAC,GAAGF,MAAM;IAKV,MAAMG,MAAM,GAAGM,IAAI,CAACC,IAAI,CAACH,CAAC,GAAGX,IAAI,CAAC;IAClC,MAAMQ,MAAM,GAAGD,MAAM,GAAGM,IAAI,CAACC,IAAI,CAAC,CAAC,GAAGR,IAAI,IAAI,CAAC,CAAC;IAChD,OAAO;MACLA,IAAI,EAAJA,IAAI;MACJC,MAAM,EAANA,MAAM;MACNC,MAAA,EAAAA;IACF,CAAC;EACH,CAAC,MAAM;IACL,MAAM;MACJO,OAAO,EAAEC,CAAC;MACVhB,IAAI,EAAEiB,CAAC;MACPP,SAAS,EAAEC;IACb,CAAC,GAAGP,MAAM;IACV,MAAME,IAAI,GAAGU,CAAC,IAAI,CAAC,GAAGH,IAAI,CAACC,IAAI,CAACH,CAAC,GAAGM,CAAC,CAAC,CAAC;IACvC,MAAMV,MAAM,GAAGM,IAAI,CAACC,IAAI,CAACH,CAAC,GAAGM,CAAC,CAAC;IAC/B,MAAMT,MAAM,GAAGD,MAAM,GAAGM,IAAI,CAACC,IAAI,CAAC,CAAC,GAAGR,IAAI,IAAI,CAAC,CAAC;IAEhD,OAAO;MACLA,IAAI,EAAJA,IAAI;MACJC,MAAM,EAANA,MAAM;MACNC,MAAA,EAAAA;IACF,CAAC;EACH;AACF\"}"
};
var initialCalculations = function () {
  var _e = [new global.Error(), 1, -27];
  var _f = function _f() {
    var mass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    var config = arguments.length > 1 ? arguments[1] : undefined;
    if (config.configIsInvalid) {
      return {
        zeta: 0,
        omega0: 0,
        omega1: 0
      };
    }
    if (config.useDuration) {
      var k = config.stiffness,
        zeta = config.dampingRatio;
      var omega0 = Math.sqrt(k / mass);
      var omega1 = omega0 * Math.sqrt(1 - zeta ** 2);
      return {
        zeta: zeta,
        omega0: omega0,
        omega1: omega1
      };
    } else {
      var c = config.damping,
        m = config.mass,
        _k = config.stiffness;
      var _zeta = c / (2 * Math.sqrt(_k * m));
      var _omega = Math.sqrt(_k / m);
      var _omega2 = _omega * Math.sqrt(1 - _zeta ** 2);
      return {
        zeta: _zeta,
        omega0: _omega,
        omega1: _omega2
      };
    }
  };
  _f._closure = {};
  _f.__initData = _worklet_15750509760427_init_data;
  _f.__workletHash = 15750509760427;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
exports.initialCalculations = initialCalculations;
var _worklet_4593224459311_init_data = {
  code: "function calcuateNewMassToMatchDuration(x0, config, v0) {\n  const {\n    bisectRoot\n  } = this._closure;\n  if (config.configIsInvalid) {\n    return 0;\n  }\n  const {\n    stiffness: k,\n    dampingRatio: zeta,\n    restSpeedThreshold: threshold,\n    duration: duration\n  } = config;\n  const durationForMass = function (mass) {\n    'worklet';\n\n    const amplitude = (mass * v0 * v0 + k * x0 * x0) / (Math.exp(1 - 0.5 * zeta) * k);\n    const c = zeta * 2 * Math.sqrt(k * mass);\n    return 1000 * (-2 * mass / c) * Math.log(threshold * 0.01 / amplitude) - duration;\n  };\n  return bisectRoot({\n    min: 0,\n    max: 100,\n    func: durationForMass\n  });\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/animation/springUtils.js",
  sourceMap: "{\"version\":3,\"names\":[\"calcuateNewMassToMatchDuration\",\"x0\",\"config\",\"v0\",\"bisectRoot\",\"_closure\",\"configIsInvalid\",\"stiffness\",\"k\",\"dampingRatio\",\"zeta\",\"restSpeedThreshold\",\"threshold\",\"duration\",\"durationForMass\",\"mass\",\"amplitude\",\"Math\",\"exp\",\"c\",\"sqrt\",\"log\",\"min\",\"max\",\"func\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/animation/springUtils.js\"],\"mappings\":\"AAoEO,SAAAA,8BAASA,CAA+BC,EAAA,EAAEC,MAAE,EAAMC,EAAE,EAAE;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAG3D,IAAIH,MAAM,CAACI,eAAe,EAAE;IAC1B,OAAO,CAAC;EACV;EAiBA,MAAM;IACJC,SAAS,EAAEC,CAAC;IACZC,YAAY,EAAEC,IAAI;IAClBC,kBAAkB,EAAEC,SAAS;IAC7BC,QAAA,EAAAA;EACF,CAAC,GAAGX,MAAM;EACV,MAAMY,eAAe,GAAG,SAAAA,CAAAC,IAAI,EAAI;IAC9B,SAAS;;IAET,MAAMC,SAAS,GAAG,CAACD,IAAI,GAAGZ,EAAE,GAAGA,EAAE,GAAGK,CAAC,GAAGP,EAAE,GAAGA,EAAE,KAAKgB,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGR,IAAI,CAAC,GAAGF,CAAC,CAAC;IACjF,MAAMW,CAAC,GAAGT,IAAI,GAAG,CAAC,GAAGO,IAAI,CAACG,IAAI,CAACZ,CAAC,GAAGO,IAAI,CAAC;IACxC,OAAO,IAAI,IAAI,CAAC,CAAC,GAAGA,IAAI,GAAGI,CAAC,CAAC,GAAGF,IAAI,CAACI,GAAG,CAACT,SAAS,GAAG,IAAI,GAAGI,SAAS,CAAC,GAAGH,QAAQ;EACnF,CAAC;EAGD,OAAOT,UAAU,CAAC;IAChBkB,GAAG,EAAE,CAAC;IACNC,GAAG,EAAE,GAAG;IACRC,IAAI,EAAEV;EACR,CAAC,CAAC;AACJ\"}"
};
var _worklet_411302994911_init_data = {
  code: "function anonymous(mass) {\n  const {\n    v0,\n    k,\n    x0,\n    zeta,\n    threshold,\n    duration\n  } = this._closure;\n  const amplitude = (mass * v0 * v0 + k * x0 * x0) / (Math.exp(1 - 0.5 * zeta) * k);\n  const c = zeta * 2 * Math.sqrt(k * mass);\n  return 1000 * (-2 * mass / c) * Math.log(threshold * 0.01 / amplitude) - duration;\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/animation/springUtils.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"mass\",\"v0\",\"k\",\"x0\",\"zeta\",\"threshold\",\"duration\",\"_closure\",\"amplitude\",\"Math\",\"exp\",\"c\",\"sqrt\",\"log\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/animation/springUtils.js\"],\"mappings\":\"AAgG0B,SAAAA,SAAQA,CAAAC,IAAA;EAAA;IAAAC,EAAA;IAAAC,CAAA;IAAAC,EAAA;IAAAC,IAAA;IAAAC,SAAA;IAAAC;EAAA,SAAAC,QAAA;EAG9B,MAAMC,SAAS,GAAG,CAACR,IAAI,GAAGC,EAAE,GAAGA,EAAE,GAAGC,CAAC,GAAGC,EAAE,GAAGA,EAAE,KAAKM,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGN,IAAI,CAAC,GAAGF,CAAC,CAAC;EACjF,MAAMS,CAAC,GAAGP,IAAI,GAAG,CAAC,GAAGK,IAAI,CAACG,IAAI,CAACV,CAAC,GAAGF,IAAI,CAAC;EACxC,OAAO,IAAI,IAAI,CAAC,CAAC,GAAGA,IAAI,GAAGW,CAAC,CAAC,GAAGF,IAAI,CAACI,GAAG,CAACR,SAAS,GAAG,IAAI,GAAGG,SAAS,CAAC,GAAGF,QAAQ;AACnF\"}"
};
var calcuateNewMassToMatchDuration = function () {
  var _e = [new global.Error(), -2, -27];
  var _f = function _f(x0, config, v0) {
    if (config.configIsInvalid) {
      return 0;
    }
    var k = config.stiffness,
      zeta = config.dampingRatio,
      threshold = config.restSpeedThreshold,
      duration = config.duration;
    var durationForMass = function () {
      var _e = [new global.Error(), -7, -27];
      var _f = function _f(mass) {
        var amplitude = (mass * v0 * v0 + k * x0 * x0) / (Math.exp(1 - 0.5 * zeta) * k);
        var c = zeta * 2 * Math.sqrt(k * mass);
        return 1000 * (-2 * mass / c) * Math.log(threshold * 0.01 / amplitude) - duration;
      };
      _f._closure = {
        v0: v0,
        k: k,
        x0: x0,
        zeta: zeta,
        threshold: threshold,
        duration: duration
      };
      _f.__initData = _worklet_411302994911_init_data;
      _f.__workletHash = 411302994911;
      _f.__stackDetails = _e;
      _f.__version = "3.3.0";
      return _f;
    }();
    return bisectRoot({
      min: 0,
      max: 100,
      func: durationForMass
    });
  };
  _f._closure = {
    bisectRoot: bisectRoot
  };
  _f.__initData = _worklet_4593224459311_init_data;
  _f.__workletHash = 4593224459311;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
exports.calcuateNewMassToMatchDuration = calcuateNewMassToMatchDuration;
var _worklet_17497043282573_init_data = {
  code: "function criticallyDampedSpringCalculations(animation, precalculatedValues) {\n  const {\n    toValue: toValue\n  } = animation;\n  const {\n    v0: v0,\n    x0: x0,\n    omega0: omega0,\n    t: t\n  } = precalculatedValues;\n  const criticallyDampedEnvelope = Math.exp(-omega0 * t);\n  const criticallyDampedPosition = toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\n  const criticallyDampedVelocity = criticallyDampedEnvelope * (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\n  return {\n    position: criticallyDampedPosition,\n    velocity: criticallyDampedVelocity\n  };\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/animation/springUtils.js",
  sourceMap: "{\"version\":3,\"names\":[\"criticallyDampedSpringCalculations\",\"animation\",\"precalculatedValues\",\"toValue\",\"v0\",\"x0\",\"omega0\",\"t\",\"criticallyDampedEnvelope\",\"Math\",\"exp\",\"criticallyDampedPosition\",\"criticallyDampedVelocity\",\"position\",\"velocity\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/animation/springUtils.js\"],\"mappings\":\"AA+GO,SAAAA,kCAASA,CAAmCC,SAAA,EAASC,mBAAE,EAAmB;EAG/E,MAAM;IACJC,OAAA,EAAAA;EACF,CAAC,GAAGF,SAAS;EACb,MAAM;IACJG,EAAE,EAAFA,EAAE;IACFC,EAAE,EAAFA,EAAE;IACFC,MAAM,EAANA,MAAM;IACNC,CAAA,EAAAA;EACF,CAAC,GAAGL,mBAAmB;EACvB,MAAMM,wBAAwB,GAAGC,IAAI,CAACC,GAAG,CAAC,CAACJ,MAAM,GAAGC,CAAC,CAAC;EACtD,MAAMI,wBAAwB,GAAGR,OAAO,GAAGK,wBAAwB,IAAIH,EAAE,GAAG,CAACD,EAAE,GAAGE,MAAM,GAAGD,EAAE,IAAIE,CAAC,CAAC;EACnG,MAAMK,wBAAwB,GAAGJ,wBAAwB,IAAIJ,EAAE,IAAIG,CAAC,GAAGD,MAAM,GAAG,CAAC,CAAC,GAAGC,CAAC,GAAGF,EAAE,GAAGC,MAAM,GAAGA,MAAM,CAAC;EAC9G,OAAO;IACLO,QAAQ,EAAEF,wBAAwB;IAClCG,QAAQ,EAAEF;EACZ,CAAC;AACH\"}"
};
var criticallyDampedSpringCalculations = function () {
  var _e = [new global.Error(), 1, -27];
  var _f = function _f(animation, precalculatedValues) {
    var toValue = animation.toValue;
    var v0 = precalculatedValues.v0,
      x0 = precalculatedValues.x0,
      omega0 = precalculatedValues.omega0,
      t = precalculatedValues.t;
    var criticallyDampedEnvelope = Math.exp(-omega0 * t);
    var criticallyDampedPosition = toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);
    var criticallyDampedVelocity = criticallyDampedEnvelope * (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);
    return {
      position: criticallyDampedPosition,
      velocity: criticallyDampedVelocity
    };
  };
  _f._closure = {};
  _f.__initData = _worklet_17497043282573_init_data;
  _f.__workletHash = 17497043282573;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
exports.criticallyDampedSpringCalculations = criticallyDampedSpringCalculations;
var _worklet_14463682152611_init_data = {
  code: "function underDampedSpringCalculations(animation, precalculatedValues) {\n  const {\n    toValue: toValue,\n    current: current,\n    velocity: velocity\n  } = animation;\n  const {\n    zeta: zeta,\n    t: t,\n    omega0: omega0,\n    omega1: omega1\n  } = precalculatedValues;\n  const v0 = -velocity;\n  const x0 = toValue - current;\n  const sin1 = Math.sin(omega1 * t);\n  const cos1 = Math.cos(omega1 * t);\n  const underDampedEnvelope = Math.exp(-zeta * omega0 * t);\n  const underDampedFrag1 = underDampedEnvelope * (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\n  const underDampedPosition = toValue - underDampedFrag1;\n  const underDampedVelocity = zeta * omega0 * underDampedFrag1 - underDampedEnvelope * (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\n  return {\n    position: underDampedPosition,\n    velocity: underDampedVelocity\n  };\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/animation/springUtils.js",
  sourceMap: "{\"version\":3,\"names\":[\"underDampedSpringCalculations\",\"animation\",\"precalculatedValues\",\"toValue\",\"current\",\"velocity\",\"zeta\",\"t\",\"omega0\",\"omega1\",\"v0\",\"x0\",\"sin1\",\"Math\",\"sin\",\"cos1\",\"cos\",\"underDampedEnvelope\",\"exp\",\"underDampedFrag1\",\"underDampedPosition\",\"underDampedVelocity\",\"position\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/animation/springUtils.js\"],\"mappings\":\"AAmIO,SAAAA,6BAASA,CAA8BC,SAAA,EAASC,mBAAE,EAAmB;EAG1E,MAAM;IACJC,OAAO,EAAPA,OAAO;IACPC,OAAO,EAAPA,OAAO;IACPC,QAAA,EAAAA;EACF,CAAC,GAAGJ,SAAS;EACb,MAAM;IACJK,IAAI,EAAJA,IAAI;IACJC,CAAC,EAADA,CAAC;IACDC,MAAM,EAANA,MAAM;IACNC,MAAA,EAAAA;EACF,CAAC,GAAGP,mBAAmB;EACvB,MAAMQ,EAAE,GAAG,CAACL,QAAQ;EACpB,MAAMM,EAAE,GAAGR,OAAO,GAAGC,OAAO;EAC5B,MAAMQ,IAAI,GAAGC,IAAI,CAACC,GAAG,CAACL,MAAM,GAAGF,CAAC,CAAC;EACjC,MAAMQ,IAAI,GAAGF,IAAI,CAACG,GAAG,CAACP,MAAM,GAAGF,CAAC,CAAC;EAGjC,MAAMU,mBAAmB,GAAGJ,IAAI,CAACK,GAAG,CAAC,CAACZ,IAAI,GAAGE,MAAM,GAAGD,CAAC,CAAC;EACxD,MAAMY,gBAAgB,GAAGF,mBAAmB,IAAIL,IAAI,IAAI,CAACF,EAAE,GAAGJ,IAAI,GAAGE,MAAM,GAAGG,EAAE,IAAIF,MAAM,CAAC,GAAGE,EAAE,GAAGI,IAAI,CAAC;EACxG,MAAMK,mBAAmB,GAAGjB,OAAO,GAAGgB,gBAAgB;EAEtD,MAAME,mBAAmB,GAAGf,IAAI,GAAGE,MAAM,GAAGW,gBAAgB,GAAGF,mBAAmB,IAAIF,IAAI,IAAIL,EAAE,GAAGJ,IAAI,GAAGE,MAAM,GAAGG,EAAE,CAAC,GAAGF,MAAM,GAAGE,EAAE,GAAGC,IAAI,CAAC;EAC5I,OAAO;IACLU,QAAQ,EAAEF,mBAAmB;IAC7Bf,QAAQ,EAAEgB;EACZ,CAAC;AACH\"}"
};
var underDampedSpringCalculations = function () {
  var _e = [new global.Error(), 1, -27];
  var _f = function _f(animation, precalculatedValues) {
    var toValue = animation.toValue,
      current = animation.current,
      velocity = animation.velocity;
    var zeta = precalculatedValues.zeta,
      t = precalculatedValues.t,
      omega0 = precalculatedValues.omega0,
      omega1 = precalculatedValues.omega1;
    var v0 = -velocity;
    var x0 = toValue - current;
    var sin1 = Math.sin(omega1 * t);
    var cos1 = Math.cos(omega1 * t);
    var underDampedEnvelope = Math.exp(-zeta * omega0 * t);
    var underDampedFrag1 = underDampedEnvelope * (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);
    var underDampedPosition = toValue - underDampedFrag1;
    var underDampedVelocity = zeta * omega0 * underDampedFrag1 - underDampedEnvelope * (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);
    return {
      position: underDampedPosition,
      velocity: underDampedVelocity
    };
  };
  _f._closure = {};
  _f.__initData = _worklet_14463682152611_init_data;
  _f.__workletHash = 14463682152611;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
exports.underDampedSpringCalculations = underDampedSpringCalculations;
var _worklet_6231286114166_init_data = {
  code: "function isAnimationTerminatingCalculation(animation, config) {\n  const {\n    toValue: toValue,\n    velocity: velocity,\n    startValue: startValue,\n    current: current\n  } = animation;\n  const isOvershooting = config.overshootClamping ? current > toValue && startValue < toValue || current < toValue && startValue > toValue : false;\n  const isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\n  const isDisplacement = Math.abs(toValue - current) < config.restDisplacementThreshold;\n  return {\n    isOvershooting: isOvershooting,\n    isVelocity: isVelocity,\n    isDisplacement: isDisplacement\n  };\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/animation/springUtils.js",
  sourceMap: "{\"version\":3,\"names\":[\"isAnimationTerminatingCalculation\",\"animation\",\"config\",\"toValue\",\"velocity\",\"startValue\",\"current\",\"isOvershooting\",\"overshootClamping\",\"isVelocity\",\"Math\",\"abs\",\"restSpeedThreshold\",\"isDisplacement\",\"restDisplacementThreshold\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/animation/springUtils.js\"],\"mappings\":\"AAiKO,SAAAA,iCAASA,CAAkCC,SAAA,EAASC,MAAE,EAAM;EAGjE,MAAM;IACJC,OAAO,EAAPA,OAAO;IACPC,QAAQ,EAARA,QAAQ;IACRC,UAAU,EAAVA,UAAU;IACVC,OAAA,EAAAA;EACF,CAAC,GAAGL,SAAS;EACb,MAAMM,cAAc,GAAGL,MAAM,CAACM,iBAAiB,GAAGF,OAAO,GAAGH,OAAO,IAAIE,UAAU,GAAGF,OAAO,IAAIG,OAAO,GAAGH,OAAO,IAAIE,UAAU,GAAGF,OAAO,GAAG,KAAK;EAChJ,MAAMM,UAAU,GAAGC,IAAI,CAACC,GAAG,CAACP,QAAQ,CAAC,GAAGF,MAAM,CAACU,kBAAkB;EACjE,MAAMC,cAAc,GAAGH,IAAI,CAACC,GAAG,CAACR,OAAO,GAAGG,OAAO,CAAC,GAAGJ,MAAM,CAACY,yBAAyB;EACrF,OAAO;IACLP,cAAc,EAAdA,cAAc;IACdE,UAAU,EAAVA,UAAU;IACVI,cAAA,EAAAA;EACF,CAAC;AACH\"}"
};
var isAnimationTerminatingCalculation = function () {
  var _e = [new global.Error(), 1, -27];
  var _f = function _f(animation, config) {
    var toValue = animation.toValue,
      velocity = animation.velocity,
      startValue = animation.startValue,
      current = animation.current;
    var isOvershooting = config.overshootClamping ? current > toValue && startValue < toValue || current < toValue && startValue > toValue : false;
    var isVelocity = Math.abs(velocity) < config.restSpeedThreshold;
    var isDisplacement = Math.abs(toValue - current) < config.restDisplacementThreshold;
    return {
      isOvershooting: isOvershooting,
      isVelocity: isVelocity,
      isDisplacement: isDisplacement
    };
  };
  _f._closure = {};
  _f.__initData = _worklet_6231286114166_init_data;
  _f.__workletHash = 6231286114166;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
exports.isAnimationTerminatingCalculation = isAnimationTerminatingCalculation;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,