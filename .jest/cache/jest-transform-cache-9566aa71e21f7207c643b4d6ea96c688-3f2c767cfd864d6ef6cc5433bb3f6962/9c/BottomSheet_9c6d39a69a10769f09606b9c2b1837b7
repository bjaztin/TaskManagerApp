35105fe9eea5e11c20784ae1ea54ec36
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.BottomSheet = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _reactNativeSafeAreaContext = require("react-native-safe-area-context");
var _config = require("../config");
var _jsxRuntime = require("react/jsx-runtime");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var __rest = this && this.__rest || function (s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
var BottomSheet = function BottomSheet(_a) {
  var containerStyle = _a.containerStyle,
    _a$isVisible = _a.isVisible,
    isVisible = _a$isVisible === void 0 ? false : _a$isVisible,
    _a$modalProps = _a.modalProps,
    modalProps = _a$modalProps === void 0 ? {} : _a$modalProps,
    children = _a.children,
    props = __rest(_a, ["containerStyle", "isVisible", "modalProps", "children"]);
  return (0, _jsxRuntime.jsx)(_reactNative.Modal, _objectSpread(_objectSpread({
    animationType: "slide",
    transparent: true,
    visible: isVisible
  }, modalProps), {}, {
    children: (0, _jsxRuntime.jsx)(_reactNativeSafeAreaContext.SafeAreaView, _objectSpread(_objectSpread({
      style: _reactNative.StyleSheet.flatten([styles.safeAreaView, containerStyle && containerStyle])
    }, props), {}, {
      children: (0, _jsxRuntime.jsx)(_reactNative.View, {
        children: (0, _jsxRuntime.jsx)(_reactNative.ScrollView, {
          children: children
        })
      })
    }))
  }));
};
exports.BottomSheet = BottomSheet;
var styles = _reactNative.StyleSheet.create({
  safeAreaView: {
    flex: 1,
    backgroundColor: 'rgba(0,0,0,0.2)',
    flexDirection: 'column-reverse'
  },
  listContainer: {
    backgroundColor: 'white'
  }
});
var _default = (0, _config.withTheme)(BottomSheet, 'BottomSheet');
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9yZWFjdE5hdGl2ZVNhZmVBcmVhQ29udGV4dCIsIl9jb25maWciLCJfanN4UnVudGltZSIsIm93bktleXMiLCJlIiwiciIsInQiLCJPYmplY3QiLCJrZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwibyIsImZpbHRlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJwdXNoIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiZm9yRWFjaCIsIl9kZWZpbmVQcm9wZXJ0eTIiLCJkZWZhdWx0IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJkZWZpbmVQcm9wZXJ0eSIsIl9fcmVzdCIsInMiLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaW5kZXhPZiIsImkiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIkJvdHRvbVNoZWV0IiwiX2EiLCJjb250YWluZXJTdHlsZSIsIl9hJGlzVmlzaWJsZSIsImlzVmlzaWJsZSIsIl9hJG1vZGFsUHJvcHMiLCJtb2RhbFByb3BzIiwiY2hpbGRyZW4iLCJwcm9wcyIsImpzeCIsIk1vZGFsIiwiYW5pbWF0aW9uVHlwZSIsInRyYW5zcGFyZW50IiwidmlzaWJsZSIsIlNhZmVBcmVhVmlldyIsInN0eWxlIiwiU3R5bGVTaGVldCIsImZsYXR0ZW4iLCJzdHlsZXMiLCJzYWZlQXJlYVZpZXciLCJWaWV3IiwiU2Nyb2xsVmlldyIsImV4cG9ydHMiLCJjcmVhdGUiLCJmbGV4IiwiYmFja2dyb3VuZENvbG9yIiwiZmxleERpcmVjdGlvbiIsImxpc3RDb250YWluZXIiLCJfZGVmYXVsdCIsIndpdGhUaGVtZSJdLCJzb3VyY2VzIjpbIkJvdHRvbVNoZWV0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX3Jlc3QgPSAodGhpcyAmJiB0aGlzLl9fcmVzdCkgfHwgZnVuY3Rpb24gKHMsIGUpIHtcbiAgICB2YXIgdCA9IHt9O1xuICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSAmJiBlLmluZGV4T2YocCkgPCAwKVxuICAgICAgICB0W3BdID0gc1twXTtcbiAgICBpZiAocyAhPSBudWxsICYmIHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBwID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzKTsgaSA8IHAubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChlLmluZGV4T2YocFtpXSkgPCAwICYmIE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzLCBwW2ldKSlcbiAgICAgICAgICAgICAgICB0W3BbaV1dID0gc1twW2ldXTtcbiAgICAgICAgfVxuICAgIHJldHVybiB0O1xufTtcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBNb2RhbCwgVmlldywgU3R5bGVTaGVldCwgU2Nyb2xsVmlldywgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgU2FmZUFyZWFWaWV3IH0gZnJvbSAncmVhY3QtbmF0aXZlLXNhZmUtYXJlYS1jb250ZXh0JztcbmltcG9ydCB7IHdpdGhUaGVtZSB9IGZyb20gJy4uL2NvbmZpZyc7XG5jb25zdCBCb3R0b21TaGVldCA9IChfYSkgPT4ge1xuICAgIHZhciB7IGNvbnRhaW5lclN0eWxlLCBpc1Zpc2libGUgPSBmYWxzZSwgbW9kYWxQcm9wcyA9IHt9LCBjaGlsZHJlbiB9ID0gX2EsIHByb3BzID0gX19yZXN0KF9hLCBbXCJjb250YWluZXJTdHlsZVwiLCBcImlzVmlzaWJsZVwiLCBcIm1vZGFsUHJvcHNcIiwgXCJjaGlsZHJlblwiXSk7XG4gICAgcmV0dXJuICg8TW9kYWwgYW5pbWF0aW9uVHlwZT1cInNsaWRlXCIgdHJhbnNwYXJlbnQ9e3RydWV9IHZpc2libGU9e2lzVmlzaWJsZX0gey4uLm1vZGFsUHJvcHN9PlxuICAgICAgPFNhZmVBcmVhVmlldyBzdHlsZT17U3R5bGVTaGVldC5mbGF0dGVuKFtcbiAgICAgICAgICAgIHN0eWxlcy5zYWZlQXJlYVZpZXcsXG4gICAgICAgICAgICBjb250YWluZXJTdHlsZSAmJiBjb250YWluZXJTdHlsZSxcbiAgICAgICAgXSl9IHsuLi5wcm9wc30+XG4gICAgICAgIDxWaWV3PlxuICAgICAgICAgIDxTY3JvbGxWaWV3PntjaGlsZHJlbn08L1Njcm9sbFZpZXc+XG4gICAgICAgIDwvVmlldz5cbiAgICAgIDwvU2FmZUFyZWFWaWV3PlxuICAgIDwvTW9kYWw+KTtcbn07XG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gICAgc2FmZUFyZWFWaWV3OiB7XG4gICAgICAgIGZsZXg6IDEsXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMCwwLDAsMC4yKScsXG4gICAgICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4tcmV2ZXJzZScsXG4gICAgfSxcbiAgICBsaXN0Q29udGFpbmVyOiB7IGJhY2tncm91bmRDb2xvcjogJ3doaXRlJyB9LFxufSk7XG5leHBvcnQgeyBCb3R0b21TaGVldCB9O1xuZXhwb3J0IGRlZmF1bHQgd2l0aFRoZW1lKEJvdHRvbVNoZWV0LCAnQm90dG9tU2hlZXQnKTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBV0EsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsMkJBQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLE9BQUEsR0FBQUgsT0FBQTtBQUFzQyxJQUFBSSxXQUFBLEdBQUFKLE9BQUE7QUFBQSxTQUFBSyxRQUFBQyxDQUFBLEVBQUFDLENBQUEsUUFBQUMsQ0FBQSxH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