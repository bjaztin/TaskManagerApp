78a0d7c4a7c099e1ea0c16a1f5a26523
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getStyle;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _reactNative = require("react-native");
var defaultStyle = _interopRequireWildcard(require("../style"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function getStyle() {
  var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var appStyle = _objectSpread(_objectSpread({}, defaultStyle), theme);
  return _reactNative.StyleSheet.create(_objectSpread({
    flatListContainer: {
      flex: _reactNative.Platform.OS === 'web' ? 1 : undefined
    },
    container: {
      backgroundColor: appStyle.calendarBackground
    },
    placeholder: {
      backgroundColor: appStyle.calendarBackground,
      alignItems: 'center',
      justifyContent: 'center'
    },
    placeholderText: {
      fontSize: 20,
      fontWeight: '200',
      color: appStyle.dayTextColor
    },
    calendar: {
      paddingLeft: 15,
      paddingRight: 15
    },
    staticHeader: {
      position: 'absolute',
      left: 0,
      right: 0,
      top: 0,
      backgroundColor: appStyle.calendarBackground,
      paddingHorizontal: 15
    }
  }, theme['stylesheet.calendar-list.main'] || {}));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiZGVmYXVsdFN0eWxlIiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJub2RlSW50ZXJvcCIsIldlYWtNYXAiLCJjYWNoZUJhYmVsSW50ZXJvcCIsImNhY2hlTm9kZUludGVyb3AiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJkZXNjIiwic2V0Iiwib3duS2V5cyIsImUiLCJyIiwidCIsImtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJvIiwiZmlsdGVyIiwiZW51bWVyYWJsZSIsInB1c2giLCJhcHBseSIsIl9vYmplY3RTcHJlYWQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJmb3JFYWNoIiwiX2RlZmluZVByb3BlcnR5MiIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZ2V0U3R5bGUiLCJ0aGVtZSIsInVuZGVmaW5lZCIsImFwcFN0eWxlIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImZsYXRMaXN0Q29udGFpbmVyIiwiZmxleCIsIlBsYXRmb3JtIiwiT1MiLCJjb250YWluZXIiLCJiYWNrZ3JvdW5kQ29sb3IiLCJjYWxlbmRhckJhY2tncm91bmQiLCJwbGFjZWhvbGRlciIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsInBsYWNlaG9sZGVyVGV4dCIsImZvbnRTaXplIiwiZm9udFdlaWdodCIsImNvbG9yIiwiZGF5VGV4dENvbG9yIiwiY2FsZW5kYXIiLCJwYWRkaW5nTGVmdCIsInBhZGRpbmdSaWdodCIsInN0YXRpY0hlYWRlciIsInBvc2l0aW9uIiwibGVmdCIsInJpZ2h0IiwidG9wIiwicGFkZGluZ0hvcml6b250YWwiXSwic291cmNlcyI6WyJzdHlsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQbGF0Zm9ybSwgU3R5bGVTaGVldCB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgKiBhcyBkZWZhdWx0U3R5bGUgZnJvbSAnLi4vc3R5bGUnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0U3R5bGUodGhlbWUgPSB7fSkge1xuICAgIGNvbnN0IGFwcFN0eWxlID0geyAuLi5kZWZhdWx0U3R5bGUsIC4uLnRoZW1lIH07XG4gICAgcmV0dXJuIFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgICAgICAgZmxhdExpc3RDb250YWluZXI6IHtcbiAgICAgICAgICAgIGZsZXg6IFBsYXRmb3JtLk9TID09PSAnd2ViJyA/IDEgOiB1bmRlZmluZWRcbiAgICAgICAgfSxcbiAgICAgICAgY29udGFpbmVyOiB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGFwcFN0eWxlLmNhbGVuZGFyQmFja2dyb3VuZFxuICAgICAgICB9LFxuICAgICAgICBwbGFjZWhvbGRlcjoge1xuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBhcHBTdHlsZS5jYWxlbmRhckJhY2tncm91bmQsXG4gICAgICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgICAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJ1xuICAgICAgICB9LFxuICAgICAgICBwbGFjZWhvbGRlclRleHQ6IHtcbiAgICAgICAgICAgIGZvbnRTaXplOiAyMCxcbiAgICAgICAgICAgIGZvbnRXZWlnaHQ6ICcyMDAnLFxuICAgICAgICAgICAgY29sb3I6IGFwcFN0eWxlLmRheVRleHRDb2xvclxuICAgICAgICB9LFxuICAgICAgICBjYWxlbmRhcjoge1xuICAgICAgICAgICAgcGFkZGluZ0xlZnQ6IDE1LFxuICAgICAgICAgICAgcGFkZGluZ1JpZ2h0OiAxNVxuICAgICAgICB9LFxuICAgICAgICBzdGF0aWNIZWFkZXI6IHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgICAgICAgbGVmdDogMCxcbiAgICAgICAgICAgIHJpZ2h0OiAwLFxuICAgICAgICAgICAgdG9wOiAwLFxuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBhcHBTdHlsZS5jYWxlbmRhckJhY2tncm91bmQsXG4gICAgICAgICAgICBwYWRkaW5nSG9yaXpvbnRhbDogMTVcbiAgICAgICAgfSxcbiAgICAgICAgLi4uKHRoZW1lWydzdHlsZXNoZWV0LmNhbGVuZGFyLWxpc3QubWFpbiddIHx8IHt9KVxuICAgIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxZQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxZQUFBLEdBQUFDLHVCQUFBLENBQUFGLE9BQUE7QUFBeUMsU0FBQUcseUJBQUFDLFdBQUEsZUFBQUMsT0FBQSxrQ0FBQUMsaUJBQUEsT0FBQUQsT0FBQSxRQUFBRSxnQkFBQSxPQUFBRixPQUFBLFlBQUFGLHdCQUFBLFlBQUFBLHlCQUFBQyxXQUFBLFdBQUFBLFdBQUEsR0FBQUcsZ0JBQUEsR0FBQUQsaUJBQUEsS0FBQUYsV0FBQTtBQUFBLFNBQUFGLHdCQUFBTSxHQUFBLEVBQUFKLFdBQUEsU0FBQUEsV0FBQSxJQUFBSSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxXQUFBRCxHQUFBLFFBQUFBLEdBQUEsb0JBQUFBLEdBQUEsd0JBQUFBLEdBQUEsNEJBQUFFLE9BQUEsRUFBQUYsR0FBQSxVQUFBRyxLQUFBLEdBQUFSLHdCQUFBLENBQUFDLFdBQUEsT0FBQU8sS0FBQSxJQUFBQSxLQUFBLENBQUFDLEdBQUEsQ0FBQUosR0FBQSxZQUFBRyxLQUFBLENBQUFFLEdBQUEsQ0FBQUwsR0FBQSxTQUFBTSxNQUFBLFdBQUFDLHFCQUFBLEdBQUFDLE1BQUEsQ0FBQUMsY0FBQSxJQUFBRCxNQUFBLENBQUFFLHdCQUFBLFdBQUFDLEdBQUEs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