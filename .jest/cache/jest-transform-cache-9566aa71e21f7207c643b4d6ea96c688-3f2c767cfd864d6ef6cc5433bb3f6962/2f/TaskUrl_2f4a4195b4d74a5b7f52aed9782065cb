22ec49ad049a8a62a7d27dbd46508d86
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _reactNative = require("react-native");
var _react = _interopRequireWildcard(require("react"));
var _native = require("@react-navigation/native");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function cov_2o0l6cbq20() {
  var path = "/Users/bjaztin/Desktop/taskManagerApp/src/components/TaskDetail/TaskUrl.js";
  var hash = "d7b10095a4bfe4002c23842c0673ea595efe2618";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/bjaztin/Desktop/taskManagerApp/src/components/TaskDetail/TaskUrl.js",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 26,
          column: 1
        }
      },
      "1": {
        start: {
          line: 7,
          column: 21
        },
        end: {
          line: 7,
          column: 36
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 23,
          column: 3
        }
      },
      "3": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 12,
          column: 13
        }
      },
      "4": {
        start: {
          line: 11,
          column: 6
        },
        end: {
          line: 11,
          column: 57
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 22,
          column: 6
        }
      },
      "6": {
        start: {
          line: 25,
          column: 2
        },
        end: {
          line: 25,
          column: 73
        }
      },
      "7": {
        start: {
          line: 30,
          column: 15
        },
        end: {
          line: 42,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 16
          },
          end: {
            line: 5,
            column: 17
          }
        },
        loc: {
          start: {
            line: 5,
            column: 41
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 24
          },
          end: {
            line: 9,
            column: 25
          }
        },
        loc: {
          start: {
            line: 9,
            column: 37
          },
          end: {
            line: 23,
            column: 3
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 10,
            column: 36
          },
          end: {
            line: 10,
            column: 37
          }
        },
        loc: {
          start: {
            line: 10,
            column: 48
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 10
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 38
          },
          end: {
            line: 17,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 51
          },
          end: {
            line: 17,
            column: 71
          }
        }, {
          start: {
            line: 17,
            column: 74
          },
          end: {
            line: 17,
            column: 78
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 25,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 25,
            column: 19
          }
        }, {
          start: {
            line: 25,
            column: 23
          },
          end: {
            line: 25,
            column: 64
          }
        }],
        line: 25
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d7b10095a4bfe4002c23842c0673ea595efe2618"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2o0l6cbq20 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2o0l6cbq20();
cov_2o0l6cbq20().s[0]++;
var TaskUrl = function TaskUrl(_ref) {
  var url = _ref.url,
    isComplete = _ref.isComplete;
  cov_2o0l6cbq20().f[0]++;
  var navigation = (cov_2o0l6cbq20().s[1]++, (0, _native.useNavigation)());
  cov_2o0l6cbq20().s[2]++;
  var OpenURLButton = function OpenURLButton(_ref2) {
    var url = _ref2.url;
    cov_2o0l6cbq20().f[1]++;
    var handlePress = (cov_2o0l6cbq20().s[3]++, (0, _react.useCallback)((0, _asyncToGenerator2.default)(function* () {
      cov_2o0l6cbq20().f[2]++;
      cov_2o0l6cbq20().s[4]++;
      navigation.navigate("VideoPreviewScreen", {
        url: url
      });
    }), [url]));
    cov_2o0l6cbq20().s[5]++;
    return (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
      onPress: handlePress,
      disabled: isComplete,
      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: [styles.itemTextUrl, isComplete ? (cov_2o0l6cbq20().b[0][0]++, styles.completedTask) : (cov_2o0l6cbq20().b[0][1]++, null)],
        children: url
      })
    });
  };
  cov_2o0l6cbq20().s[6]++;
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    children: (cov_2o0l6cbq20().b[1][0]++, url) && (cov_2o0l6cbq20().b[1][1]++, (0, _jsxRuntime.jsx)(OpenURLButton, {
      url: url
    }))
  });
};
var _default = TaskUrl;
exports.default = _default;
var styles = (cov_2o0l6cbq20().s[7]++, _reactNative.StyleSheet.create({
  itemTextUrl: {
    maxWidth: "100%",
    paddingTop: 6,
    fontSize: 10,
    paddingLeft: 2,
    color: "#CEDEBD",
    textDecorationStyle: "solid"
  },
  completedTask: {
    color: "gray"
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,