3d1b415c4f23d7fca67e7d4ac4a06dac
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _react = _interopRequireWildcard(require("react"));
var _hoistNonReactStatics = _interopRequireDefault(require("hoist-non-react-statics"));
var _Context = _interopRequireDefault(require("./Context"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function asCalendarConsumer(WrappedComponent) {
  var CalendarConsumer = function (_Component) {
    (0, _inherits2.default)(CalendarConsumer, _Component);
    var _super = _createSuper(CalendarConsumer);
    function CalendarConsumer() {
      var _this;
      (0, _classCallCheck2.default)(this, CalendarConsumer);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _super.call.apply(_super, [this].concat(args));
      _this.saveRef = function (r) {
        _this.contentRef = r;
      };
      return _this;
    }
    (0, _createClass2.default)(CalendarConsumer, [{
      key: "render",
      value: function render() {
        var _this2 = this;
        return (0, _jsxRuntime.jsx)(_Context.default.Consumer, {
          children: function children(context) {
            return (0, _jsxRuntime.jsx)(WrappedComponent, _objectSpread({
              ref: _this2.saveRef,
              context: context
            }, _this2.props));
          }
        });
      }
    }]);
    return CalendarConsumer;
  }(_react.Component);
  (0, _hoistNonReactStatics.default)(CalendarConsumer, WrappedComponent);
  return CalendarConsumer;
}
var _default = asCalendarConsumer;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX0NvbnRleHQiLCJfanN4UnVudGltZSIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJvd25LZXlzIiwiZSIsInIiLCJ0Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsIm8iLCJmaWx0ZXIiLCJlbnVtZXJhYmxlIiwicHVzaCIsImFwcGx5IiwiX29iamVjdFNwcmVhZCIsImFyZ3VtZW50cyIsImxlbmd0aCIsImZvckVhY2giLCJfZGVmaW5lUHJvcGVydHkyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJfY3JlYXRlU3VwZXIiLCJEZXJpdmVkIiwiaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIl9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJfY3JlYXRlU3VwZXJJbnRlcm5hbCIsIlN1cGVyIiwiX2dldFByb3RvdHlwZU9mMiIsInJlc3VsdCIsIk5ld1RhcmdldCIsImNvbnN0cnVjdG9yIiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMiIsInNoYW0iLCJQcm94eSIsIkJvb2xlYW4iLCJ2YWx1ZU9mIiwiYXNDYWxlbmRhckNvbnN1bWVyIiwiV3JhcHBlZENvbXBvbmVudCIsIkNhbGVuZGFyQ29uc3VtZXIiLCJfQ29tcG9uZW50IiwiX2luaGVyaXRzMiIsIl9zdXBlciIsIl90aGlzIiwiX2NsYXNzQ2FsbENoZWNrMiIsIl9sZW4iLCJhcmdzIiwiQXJyYXkiLCJfa2V5IiwiY29uY2F0Iiwic2F2ZVJlZiIsImNvbnRlbnRSZWYiLCJfY3JlYXRlQ2xhc3MyIiwidmFsdWUiLCJyZW5kZXIiLCJfdGhpczIiLCJqc3giLCJDb25zdW1lciIsImNoaWxkcmVuIiwiY29udGV4dCIsInJlZiIsInByb3BzIiwiQ29tcG9uZW50IiwiaG9pc3ROb25SZWFjdFN0YXRpYyIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbImFzQ2FsZW5kYXJDb25zdW1lci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGhvaXN0Tm9uUmVhY3RTdGF0aWMgZnJvbSAnaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MnO1xuaW1wb3J0IENhbGVuZGFyQ29udGV4dCBmcm9tICcuL0NvbnRleHQnO1xuZnVuY3Rpb24gYXNDYWxlbmRhckNvbnN1bWVyKFdyYXBwZWRDb21wb25lbnQpIHtcbiAgICBjbGFzcyBDYWxlbmRhckNvbnN1bWVyIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICAgICAgY29udGVudFJlZjtcbiAgICAgICAgc2F2ZVJlZiA9IChyKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmNvbnRlbnRSZWYgPSByO1xuICAgICAgICB9O1xuICAgICAgICByZW5kZXIoKSB7XG4gICAgICAgICAgICByZXR1cm4gKDxDYWxlbmRhckNvbnRleHQuQ29uc3VtZXI+XG4gICAgICAgICAge2NvbnRleHQgPT4gPFdyYXBwZWRDb21wb25lbnQgcmVmPXt0aGlzLnNhdmVSZWZ9IGNvbnRleHQ9e2NvbnRleHR9IHsuLi50aGlzLnByb3BzfS8+fVxuICAgICAgICA8L0NhbGVuZGFyQ29udGV4dC5Db25zdW1lcj4pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWMoQ2FsZW5kYXJDb25zdW1lciwgV3JhcHBlZENvbXBvbmVudCk7XG4gICAgcmV0dXJuIENhbGVuZGFyQ29uc3VtZXI7XG59XG5leHBvcnQgZGVmYXVsdCBhc0NhbGVuZGFyQ29uc3VtZXI7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMscUJBQUEsR0FBQUMsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFHLFFBQUEsR0FBQUQsc0JBQUEsQ0FBQUYsT0FBQTtBQUF3QyxJQUFBSSxXQUFBLEdBQUFKLE9BQUE7QUFBQSxTQUFBSyx5QkFBQUMsV0FBQSxlQUFBQyxPQUFBLGtDQUFBQyxpQkFBQSxPQUFBRCxPQUFBLFFBQUFFLGdCQUFBLE9BQUFGLE9BQUEsWUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLFdBQUEsV0FBQUEsV0FBQSxHQUFBRyxnQkFBQSxHQUFBRCxpQkFBQSxLQUFBRixXQUFBO0FBQUEsU0FBQVAsd0JBQUFXLEdBQUEsRUFBQUosV0FBQSxTQUFBQSxXQUFBLElBQUFJLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLFdBQUFELEdBQUEsUUFBQUEsR0FBQSxvQkFBQUEsR0FBQSx3QkFBQUEsR0FBQSw0QkFBQUUsT0FBQSxFQUFBRixHQUFBLFVBQUFHLEtBQUEsR0FBQVIsd0JBQUEsQ0FBQUMsV0FBQSxPQUFBTyxLQUFBLElBQUFBLEtBQUEsQ0FBQUMsR0FBQSxDQUFBSixHQUFBLFlBQUFHLEtBQUEsQ0FBQUUsR0FBQSxDQUFBTCxHQUFBLFNBQUFNLE1BQUEsV0FBQUMscUJBQUEsR0FBQUMsTUFBQSxDQUFBQyxjQUFBLElBQUFELE1BQUEsQ0FBQUUsd0JBQUEsV0FBQUMsR0FBQSxJQUFBWCxHQUFBLFFBQUFXLEdBQUEsa0JBQUFILE1BQUEsQ0FBQUksU0FBQSxDQUFBQyxjQUFBLENBQUFDLElBQUEsQ0FBQWQsR0FB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