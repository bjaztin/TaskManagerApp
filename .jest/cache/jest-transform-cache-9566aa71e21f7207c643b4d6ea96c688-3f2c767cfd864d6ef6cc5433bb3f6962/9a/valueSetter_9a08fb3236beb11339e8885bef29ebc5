339be920c9ba78052accb31d4bbf62d5
Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "stopMapper", {
  enumerable: true,
  get: function get() {
    return _mappers.stopMapper;
  }
});
exports.valueSetter = void 0;
var _mappers = require("./mappers");
var _worklet_16665543178482_init_data = {
  code: "function valueSetter(sv, value) {\n  const previousAnimation = sv._animation;\n  if (previousAnimation) {\n    previousAnimation.cancelled = true;\n    sv._animation = null;\n  }\n  if (typeof value === 'function' || value !== null && typeof value === 'object' && value.onFrame !== undefined) {\n    const animation = typeof value === 'function' ? value() : value;\n    if (sv._value === animation.current && !animation.isHigherOrder) {\n      animation.callback && animation.callback(true);\n      return;\n    }\n    const initializeAnimation = function (timestamp) {\n      animation.onStart(animation, sv.value, timestamp, previousAnimation);\n    };\n    const currentTimestamp = global.__frameTimestamp || performance.now();\n    initializeAnimation(currentTimestamp);\n    const step = function (timestamp) {\n      if (animation.cancelled) {\n        animation.callback && animation.callback(false);\n        return;\n      }\n      const finished = animation.onFrame(animation, timestamp);\n      animation.finished = true;\n      animation.timestamp = timestamp;\n      sv._value = animation.current;\n      if (finished) {\n        animation.callback && animation.callback(true);\n      } else {\n        requestAnimationFrame(step);\n      }\n    };\n    sv._animation = animation;\n    step(currentTimestamp);\n  } else {\n    if (sv._value === value) {\n      return;\n    }\n    sv._value = value;\n  }\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/valueSetter.js",
  sourceMap: "{\"version\":3,\"names\":[\"valueSetter\",\"sv\",\"value\",\"previousAnimation\",\"_animation\",\"cancelled\",\"onFrame\",\"undefined\",\"animation\",\"_value\",\"current\",\"isHigherOrder\",\"callback\",\"initializeAnimation\",\"timestamp\",\"onStart\",\"currentTimestamp\",\"global\",\"__frameTimestamp\",\"performance\",\"now\",\"step\",\"finished\",\"requestAnimationFrame\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/valueSetter.js\"],\"mappings\":\"AACO,SAAAA,WAASA,CAAYC,EAAA,EAAEC,KAAE,EAAK;EAGnC,MAAMC,iBAAiB,GAAGF,EAAE,CAACG,UAAU;EACvC,IAAID,iBAAiB,EAAE;IACrBA,iBAAiB,CAACE,SAAS,GAAG,IAAI;IAClCJ,EAAE,CAACG,UAAU,GAAG,IAAI;EACtB;EACA,IAAI,OAAOF,KAAK,KAAK,UAAU,IAAIA,KAAK,KAAK,IAAI,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACI,OAAO,KAAKC,SAAS,EAAE;IAC7G,MAAMC,SAAS,GAAG,OAAON,KAAK,KAAK,UAAU,GAAGA,KAAK,CAAC,CAAC,GAAGA,KAAK;IAK/D,IAAID,EAAE,CAACQ,MAAM,KAAKD,SAAS,CAACE,OAAO,IAAI,CAACF,SAAS,CAACG,aAAa,EAAE;MAC/DH,SAAS,CAACI,QAAQ,IAAIJ,SAAS,CAACI,QAAQ,CAAC,IAAI,CAAC;MAC9C;IACF;IAEA,MAAMC,mBAAmB,GAAG,SAAAA,CAAAC,SAAS,EAAI;MACvCN,SAAS,CAACO,OAAO,CAACP,SAAS,EAAEP,EAAE,CAACC,KAAK,EAAEY,SAAS,EAAEX,iBAAiB,CAAC;IACtE,CAAC;IACD,MAAMa,gBAAgB,GAAGC,MAAM,CAACC,gBAAgB,IAAIC,WAAW,CAACC,GAAG,CAAC,CAAC;IACrEP,mBAAmB,CAACG,gBAAgB,CAAC;IACrC,MAAMK,IAAI,GAAG,SAAAA,CAAAP,SAAS,EAAI;MACxB,IAAIN,SAAS,CAACH,SAAS,EAAE;QACvBG,SAAS,CAACI,QAAQ,IAAIJ,SAAS,CAACI,QAAQ,CAAC,KAAoB,CAAC;QAC9D;MACF;MACA,MAAMU,QAAQ,GAAGd,SAAS,CAACF,OAAO,CAACE,SAAS,EAAEM,SAAS,CAAC;MACxDN,SAAS,CAACc,QAAQ,GAAG,IAAI;MACzBd,SAAS,CAACM,SAAS,GAAGA,SAAS;MAC/Bb,EAAE,CAACQ,MAAM,GAAGD,SAAS,CAACE,OAAO;MAC7B,IAAIY,QAAQ,EAAE;QACZd,SAAS,CAACI,QAAQ,IAAIJ,SAAS,CAACI,QAAQ,CAAC,IAAmB,CAAC;MAC/D,CAAC,MAAM;QACLW,qBAAqB,CAACF,IAAI,CAAC;MAC7B;IACF,CAAC;IACDpB,EAAE,CAACG,UAAU,GAAGI,SAAS;IACzBa,IAAI,CAACL,gBAAgB,CAAC;EACxB,CAAC,MAAM;IAGL,IAAIf,EAAE,CAACQ,MAAM,KAAKP,KAAK,EAAE;MACvB;IACF;IACAD,EAAE,CAACQ,MAAM,GAAGP,KAAK;EACnB;AACF\"}"
};
var valueSetter = function () {
  var _e = [new global.Error(), 1, -27];
  var _f = function _f(sv, value) {
    var previousAnimation = sv._animation;
    if (previousAnimation) {
      previousAnimation.cancelled = true;
      sv._animation = null;
    }
    if (typeof value === 'function' || value !== null && typeof value === 'object' && value.onFrame !== undefined) {
      var animation = typeof value === 'function' ? value() : value;
      if (sv._value === animation.current && !animation.isHigherOrder) {
        animation.callback && animation.callback(true);
        return;
      }
      var initializeAnimation = function initializeAnimation(timestamp) {
        animation.onStart(animation, sv.value, timestamp, previousAnimation);
      };
      var currentTimestamp = global.__frameTimestamp || performance.now();
      initializeAnimation(currentTimestamp);
      var step = function step(timestamp) {
        if (animation.cancelled) {
          animation.callback && animation.callback(false);
          return;
        }
        var finished = animation.onFrame(animation, timestamp);
        animation.finished = true;
        animation.timestamp = timestamp;
        sv._value = animation.current;
        if (finished) {
          animation.callback && animation.callback(true);
        } else {
          requestAnimationFrame(step);
        }
      };
      sv._animation = animation;
      step(currentTimestamp);
    } else {
      if (sv._value === value) {
        return;
      }
      sv._value = value;
    }
  };
  _f._closure = {};
  _f.__initData = _worklet_16665543178482_init_data;
  _f.__workletHash = 16665543178482;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
exports.valueSetter = valueSetter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfbWFwcGVycyIsInJlcXVpcmUiLCJfd29ya2xldF8xNjY2NTU0MzE3ODQ4Ml9pbml0X2RhdGEiLCJjb2RlIiwibG9jYXRpb24iLCJzb3VyY2VNYXAiLCJ2YWx1ZVNldHRlciIsIl9lIiwiZ2xvYmFsIiwiRXJyb3IiLCJfZiIsInN2IiwidmFsdWUiLCJwcmV2aW91c0FuaW1hdGlvbiIsIl9hbmltYXRpb24iLCJjYW5jZWxsZWQiLCJvbkZyYW1lIiwidW5kZWZpbmVkIiwiYW5pbWF0aW9uIiwiX3ZhbHVlIiwiY3VycmVudCIsImlzSGlnaGVyT3JkZXIiLCJjYWxsYmFjayIsImluaXRpYWxpemVBbmltYXRpb24iLCJ0aW1lc3RhbXAiLCJvblN0YXJ0IiwiY3VycmVudFRpbWVzdGFtcCIsIl9fZnJhbWVUaW1lc3RhbXAiLCJwZXJmb3JtYW5jZSIsIm5vdyIsInN0ZXAiLCJmaW5pc2hlZCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsIl9jbG9zdXJlIiwiX19pbml0RGF0YSIsIl9fd29ya2xldEhhc2giLCJfX3N0YWNrRGV0YWlscyIsIl9fdmVyc2lvbiIsImV4cG9ydHMiXSwic291cmNlcyI6WyJ2YWx1ZVNldHRlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBbmltYXRpb25PYmplY3QsIEFuaW1hdGFibGVWYWx1ZSB9IGZyb20gJy4vY29tbW9uVHlwZXMnO1xuaW1wb3J0IHsgRGVzY3JpcHRvciB9IGZyb20gJy4vaG9vay9jb21tb25UeXBlcyc7XG5leHBvcnQgeyBzdG9wTWFwcGVyIH0gZnJvbSAnLi9tYXBwZXJzJztcblxuZXhwb3J0IGZ1bmN0aW9uIHZhbHVlU2V0dGVyKHN2OiBhbnksIHZhbHVlOiBhbnkpOiB2b2lkIHtcbiAgJ3dvcmtsZXQnO1xuICBjb25zdCBwcmV2aW91c0FuaW1hdGlvbiA9IHN2Ll9hbmltYXRpb247XG4gIGlmIChwcmV2aW91c0FuaW1hdGlvbikge1xuICAgIHByZXZpb3VzQW5pbWF0aW9uLmNhbmNlbGxlZCA9IHRydWU7XG4gICAgc3YuX2FuaW1hdGlvbiA9IG51bGw7XG4gIH1cbiAgaWYgKFxuICAgIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJyB8fFxuICAgICh2YWx1ZSAhPT0gbnVsbCAmJlxuICAgICAgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJlxuICAgICAgKHZhbHVlIGFzIEFuaW1hdGlvbk9iamVjdCkub25GcmFtZSAhPT0gdW5kZWZpbmVkKVxuICApIHtcbiAgICBjb25zdCBhbmltYXRpb246IEFuaW1hdGlvbk9iamVjdCA9XG4gICAgICB0eXBlb2YgdmFsdWUgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyAodmFsdWUgYXMgKCkgPT4gQW5pbWF0aW9uT2JqZWN0KSgpXG4gICAgICAgIDogKHZhbHVlIGFzIEFuaW1hdGlvbk9iamVjdCk7XG4gICAgLy8gcHJldmVudCBzZXR0aW5nIGFnYWluIHRvIHRoZSBzYW1lIHZhbHVlXG4gICAgLy8gYW5kIHRyaWdnZXJpbmcgdGhlIG1hcHBlcnMgdGhhdCB0cmVhdCB0aGlzIHZhbHVlIGFzIGFuIGlucHV0XG4gICAgLy8gdGhpcyBoYXBwZW5zIHdoZW4gdGhlIGFuaW1hdGlvbidzIHRhcmdldCB2YWx1ZShzdG9yZWQgaW4gYW5pbWF0aW9uLmN1cnJlbnQgdW50aWwgYW5pbWF0aW9uLm9uU3RhcnQgaXMgY2FsbGVkKSBpcyBzZXQgdG8gdGhlIHNhbWUgdmFsdWUgYXMgYSBjdXJyZW50IG9uZSh0aGlzLl92YWx1ZSlcbiAgICAvLyBidWlsdCBpbiBhbmltYXRpb25zIHRoYXQgYXJlIG5vdCBoaWdoZXIgb3JkZXIod2l0aFRpbWluZywgd2l0aFNwcmluZykgaG9sZCB0YXJnZXQgdmFsdWUgaW4gLmN1cnJlbnRcbiAgICBpZiAoc3YuX3ZhbHVlID09PSBhbmltYXRpb24uY3VycmVudCAmJiAhYW5pbWF0aW9uLmlzSGlnaGVyT3JkZXIpIHtcbiAgICAgIGFuaW1hdGlvbi5jYWxsYmFjayAmJiBhbmltYXRpb24uY2FsbGJhY2sodHJ1ZSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIGFuaW1hdGVkIHNldFxuICAgIGNvbnN0IGluaXRpYWxpemVBbmltYXRpb24gPSAodGltZXN0YW1wOiBudW1iZXIpID0+IHtcbiAgICAgIGFuaW1hdGlvbi5vblN0YXJ0KGFuaW1hdGlvbiwgc3YudmFsdWUsIHRpbWVzdGFtcCwgcHJldmlvdXNBbmltYXRpb24pO1xuICAgIH07XG4gICAgY29uc3QgY3VycmVudFRpbWVzdGFtcCA9IGdsb2JhbC5fX2ZyYW1lVGltZXN0YW1wIHx8IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgIGluaXRpYWxpemVBbmltYXRpb24oY3VycmVudFRpbWVzdGFtcCk7XG4gICAgY29uc3Qgc3RlcCA9ICh0aW1lc3RhbXA6IG51bWJlcikgPT4ge1xuICAgICAgaWYgKGFuaW1hdGlvbi5jYW5jZWxsZWQpIHtcbiAgICAgICAgYW5pbWF0aW9uLmNhbGxiYWNrICYmIGFuaW1hdGlvbi5jYWxsYmFjayhmYWxzZSAvKiBmaW5pc2hlZCAqLyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGZpbmlzaGVkID0gYW5pbWF0aW9uLm9uRnJhbWUoYW5pbWF0aW9uLCB0aW1lc3RhbXApO1xuICAgICAgYW5pbWF0aW9uLmZpbmlzaGVkID0gdHJ1ZTtcbiAgICAgIGFuaW1hdGlvbi50aW1lc3RhbXAgPSB0aW1lc3RhbXA7XG4gICAgICBzdi5fdmFsdWUgPSBhbmltYXRpb24uY3VycmVudDtcbiAgICAgIGlmIChmaW5pc2hlZCkge1xuICAgICAgICBhbmltYXRpb24uY2FsbGJhY2sgJiYgYW5pbWF0aW9uLmNhbGxiYWNrKHRydWUgLyogZmluaXNoZWQgKi8pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHN0ZXApO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBzdi5fYW5pbWF0aW9uID0gYW5pbWF0aW9uO1xuXG4gICAgc3RlcChjdXJyZW50VGltZXN0YW1wKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBwcmV2ZW50IHNldHRpbmcgYWdhaW4gdG8gdGhlIHNhbWUgdmFsdWVcbiAgICAvLyBhbmQgdHJpZ2dlcmluZyB0aGUgbWFwcGVycyB0aGF0IHRyZWF0IHRoaXMgdmFsdWUgYXMgYW4gaW5wdXRcbiAgICBpZiAoc3YuX3ZhbHVlID09PSB2YWx1ZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBzdi5fdmFsdWUgPSB2YWx1ZSBhcyBEZXNjcmlwdG9yIHwgQW5pbWF0YWJsZVZhbHVlO1xuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFFQSxJQUFBQSxRQUFBLEdBQUFDLE9BQUE7QUFBc0MsSUFBQUMsaUNBQUE7RUFBQUMsSUFBQTtFQUFBQyxRQUFBO0VBQUFDLFNBQUE7QUFBQTtBQUFBLElBRXRCQyxXQUFXO0VBQUEsSUFBQUMsRUFBQSxRQUFBQyxNQUFBLENBQUFDLEtBQUE7RUFBQSxJQUFBQyxFQUFBLFlBQUFBLEdBQUNDLEVBQU8sRUFBRUMsS0FBVSxFQUFRO0lBRXJELElBQU1DLGlCQUFpQixHQUFHRixFQUFFLENBQUNHLFVBQVU7SUFDdkMsSUFBSUQsaUJBQWlCLEVBQUU7TUFDckJBLGlCQUFpQixDQUFDRSxTQUFTLEdBQUcsSUFBSTtNQUNsQ0osRUFBRSxDQUFDRyxVQUFVLEdBQUcsSUFBSTtJQUN0QjtJQUNBLElBQ0UsT0FBT0YsS0FBSyxLQUFLLFVBQVUsSUFDMUJBLEtBQUssS0FBSyxJQUFJLElBQ2IsT0FBT0EsS0FBSyxLQUFLLFFBQVEsSUFDeEJBLEtBQUssQ0FBcUJJLE9BQU8sS0FBS0MsU0FBVSxFQUNuRDtNQUNBLElBQU1DLFNBQTBCLEdBQzlCLE9BQU9OLEtBQUssS0FBSyxVQUFVLEdBQ3RCQSxLQUFLLEVBQTRCLEdBQ2pDQSxLQUF5QjtNQUtoQyxJQUFJRCxFQUFFLENBQUNRLE1BQU0sS0FBS0QsU0FBUyxDQUFDRSxPQUFPLElBQUksQ0FBQ0YsU0FBUyxDQUFDRyxhQUFhLEVBQUU7UUFDL0RILFNBQVMsQ0FBQ0ksUUFBUSxJQUFJSixTQUFTLENBQUNJLFFBQVEsQ0FBQyxJQUFJLENBQUM7UUFDOUM7TUFDRjtNQUVBLElBQU1DLG1CQUFtQixHQUFJLFNBQXZCQSxtQkFBbUJBLENBQUlDLFNBQWlCLEVBQUs7UUFDakROLFNBQVMsQ0FBQ08sT0FBTyxDQUFDUCxTQUFTLEVBQUVQLEVBQUUsQ0FBQ0MsS0FBSyxFQUFFWSxTQUFTLEVBQUVYLGlCQUFpQixDQUFDO01BQ3RFLENBQUM7TUFDRCxJQUFNYSxnQkFBZ0IsR0FBR2xCLE1BQU0sQ0FBQ21CLGdCQUFnQixJQUFJQyxXQUFXLENBQUNDLEdBQUcsRUFBRTtNQUNyRU4sbUJBQW1CLENBQUNHLGdCQUFnQixDQUFDO01BQ3JDLElBQU1JLElBQUksR0FBSSxTQUFSQSxJQUFJQSxDQUFJTixTQUFpQixFQUFLO1FBQ2xDLElBQUlOLFNBQVMsQ0FBQ0gsU0FBUyxFQUFFO1VBQ3ZCRyxTQUFTLENBQUNJLFFBQVEsSUFBSUosU0FBUyxDQUFDSSxRQUFRLENBQUMsS0FBTSxDQUFlO1VBQzlEO1FBQ0Y7UUFDQSxJQUFNUyxRQUFRLEdBQUdiLFNBQVMsQ0FBQ0YsT0FBTyxDQUFDRSxTQUFTLEVBQUVNLFNBQVMsQ0FBQztRQUN4RE4sU0FBUyxDQUFDYSxRQUFRLEdBQUcsSUFBSTtRQUN6QmIsU0FBUyxDQUFDTSxTQUFTLEdBQUdBLFNBQVM7UUFDL0JiLEVBQUUsQ0FBQ1EsTUFBTSxHQUFHRCxTQUFTLENBQUNFLE9BQU87UUFDN0IsSUFBSVcsUUFBUSxFQUFFO1VBQ1piLFNBQVMsQ0FBQ0ksUUFBUSxJQUFJSixTQUFTLENBQUNJLFFBQVEsQ0FBQyxJQUFLLENBQWU7UUFDL0QsQ0FBQyxNQUFNO1VBQ0xVLHFCQUFxQixDQUFDRixJQUFJLENBQUM7UUFDN0I7TUFDRixDQUFDO01BRURuQixFQUFFLENBQUNHLFVBQVUsR0FBR0ksU0FBUztNQUV6QlksSUFBSSxDQUFDSixnQkFBZ0IsQ0FBQztJQUN4QixDQUFDLE1BQU07TUFHTCxJQUFJZixFQUFFLENBQUNRLE1BQU0sS0FBS1AsS0FBSyxFQUFFO1FBQ3ZCO01BQ0Y7TUFDQUQsRUFBRSxDQUFDUSxNQUFNLEdBQUdQLEtBQXFDO0lBQ25EO0VBQ0Y7RUFBQUYsRUFBQSxDQUFBdUIsUUFBQTtFQUFBdkIsRUFBQSxDQUFBd0IsVUFBQSxHQUFBaEMsaUNBQUE7RUFBQVEsRUFBQSxDQUFBeUIsYUFBQTtFQUFBekIsRUFBQSxDQUFBMEIsY0FBQSxHQUFBN0IsRUFBQTtFQUFBRyxFQUFBLENBQUEyQixTQUFBO0VBQUEsT0FBQTNCLEVBQUE7QUFBQTtBQUFBNEIsT0FBQSxDQUFBaEMsV0FBQSxHQUFBQSxXQUFBIn0=