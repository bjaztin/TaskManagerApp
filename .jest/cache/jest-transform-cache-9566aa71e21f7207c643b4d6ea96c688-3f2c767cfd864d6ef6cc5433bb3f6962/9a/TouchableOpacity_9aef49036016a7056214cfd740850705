f7d888380f280a68b16c400d9dbc661c
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty3 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _excluded = ["style"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty3.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _GenericTouchable = _interopRequireWildcard(require("./GenericTouchable"));
var React = _interopRequireWildcard(require("react"));
function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();
  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };
  return cache;
}
function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache();
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
var TouchableOpacity = function (_React$Component) {
  (0, _inherits2.default)(TouchableOpacity, _React$Component);
  var _super = _createSuper(TouchableOpacity);
  function TouchableOpacity() {
    var _this;
    (0, _classCallCheck2.default)(this, TouchableOpacity);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty((0, _assertThisInitialized2.default)(_this), "getChildStyleOpacityWithDefault", function () {
      var childStyle = _reactNative.StyleSheet.flatten(_this.props.style) || {};
      return childStyle.opacity == null ? 1 : childStyle.opacity.valueOf();
    });
    _defineProperty((0, _assertThisInitialized2.default)(_this), "opacity", new _reactNative.Animated.Value(_this.getChildStyleOpacityWithDefault()));
    _defineProperty((0, _assertThisInitialized2.default)(_this), "setOpacityTo", function (value, duration) {
      var _this$props$useNative;
      _reactNative.Animated.timing(_this.opacity, {
        toValue: value,
        duration: duration,
        easing: _reactNative.Easing.inOut(_reactNative.Easing.quad),
        useNativeDriver: (_this$props$useNative = _this.props.useNativeAnimations) !== null && _this$props$useNative !== void 0 ? _this$props$useNative : true
      }).start();
    });
    _defineProperty((0, _assertThisInitialized2.default)(_this), "onStateChange", function (_from, to) {
      if (to === _GenericTouchable.TOUCHABLE_STATE.BEGAN) {
        _this.setOpacityTo(_this.props.activeOpacity, 0);
      } else if (to === _GenericTouchable.TOUCHABLE_STATE.UNDETERMINED || to === _GenericTouchable.TOUCHABLE_STATE.MOVED_OUTSIDE) {
        _this.setOpacityTo(_this.getChildStyleOpacityWithDefault(), 150);
      }
    });
    return _this;
  }
  (0, _createClass2.default)(TouchableOpacity, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        _this$props$style = _this$props.style,
        style = _this$props$style === void 0 ? {} : _this$props$style,
        rest = (0, _objectWithoutProperties2.default)(_this$props, _excluded);
      return React.createElement(_GenericTouchable.default, _extends({}, rest, {
        style: [style, {
          opacity: this.opacity
        }],
        onStateChange: this.onStateChange
      }), this.props.children ? this.props.children : React.createElement(_reactNative.View, null));
    }
  }]);
  return TouchableOpacity;
}(React.Component);
exports.default = TouchableOpacity;
_defineProperty(TouchableOpacity, "defaultProps", _objectSpread(_objectSpread({}, _GenericTouchable.default.defaultProps), {}, {
  activeOpacity: 0.2
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX0dlbmVyaWNUb3VjaGFibGUiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsIlJlYWN0IiwiVG91Y2hhYmxlT3BhY2l0eSIsIl9SZWFjdCRDb21wb25lbnQiLCJfaW5oZXJpdHMyIiwiZGVmYXVsdCIsIl9zdXBlciIsIl9jcmVhdGVTdXBlciIsIl90aGlzIiwiX2NsYXNzQ2FsbENoZWNrMiIsIl9sZW4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJhcmdzIiwiQXJyYXkiLCJfa2V5IiwiY2FsbCIsImFwcGx5IiwiY29uY2F0IiwiX2RlZmluZVByb3BlcnR5IiwiX2Fzc2VydFRoaXNJbml0aWFsaXplZDIiLCJjaGlsZFN0eWxlIiwiU3R5bGVTaGVldCIsImZsYXR0ZW4iLCJwcm9wcyIsInN0eWxlIiwib3BhY2l0eSIsInZhbHVlT2YiLCJBbmltYXRlZCIsIlZhbHVlIiwiZ2V0Q2hpbGRTdHlsZU9wYWNpdHlXaXRoRGVmYXVsdCIsInZhbHVlIiwiZHVyYXRpb24iLCJfdGhpcyRwcm9wcyR1c2VOYXRpdmUiLCJ0aW1pbmciLCJ0b1ZhbHVlIiwiZWFzaW5nIiwiRWFzaW5nIiwiaW5PdXQiLCJxdWFkIiwidXNlTmF0aXZlRHJpdmVyIiwidXNlTmF0aXZlQW5pbWF0aW9ucyIsInN0YXJ0IiwiX2Zyb20iLCJ0byIsIlRPVUNIQUJMRV9TVEFURSIsIkJFR0FOIiwic2V0T3BhY2l0eVRvIiwiYWN0aXZlT3BhY2l0eSIsIlVOREVURVJNSU5FRCIsIk1PVkVEX09VVFNJREUiLCJfY3JlYXRlQ2xhc3MyIiwia2V5IiwicmVuZGVyIiwiX3RoaXMkcHJvcHMiLCJfdGhpcyRwcm9wcyRzdHlsZSIsInJlc3QiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMyIiwiX2V4Y2x1ZGVkIiwiY3JlYXRlRWxlbWVudCIsIl9leHRlbmRzIiwib25TdGF0ZUNoYW5nZSIsImNoaWxkcmVuIiwiVmlldyIsIkNvbXBvbmVudCIsImRlZmF1bHRQcm9wcyJdLCJzb3VyY2VzIjpbIlRvdWNoYWJsZU9wYWNpdHkudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFuaW1hdGVkLFxuICBFYXNpbmcsXG4gIFN0eWxlU2hlZXQsXG4gIFZpZXcsXG4gIFRvdWNoYWJsZU9wYWNpdHlQcm9wcyxcbn0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCBHZW5lcmljVG91Y2hhYmxlLCB7XG4gIFRPVUNIQUJMRV9TVEFURSxcbiAgR2VuZXJpY1RvdWNoYWJsZVByb3BzLFxufSBmcm9tICcuL0dlbmVyaWNUb3VjaGFibGUnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuXG5pbnRlcmZhY2UgR0hUb3VjaGFibGVPcGFjaXR5UHJvcHMge1xuICB1c2VOYXRpdmVBbmltYXRpb25zPzogYm9vbGVhbjtcbn1cblxuLyoqXG4gKiBUb3VjaGFibGVPcGFjaXR5IGJhc2VzIG9uIHRpbWluZyBhbmltYXRpb24gd2hpY2ggaGFzIGJlZW4gdXNlZCBpbiBSTidzIGNvcmVcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVG91Y2hhYmxlT3BhY2l0eSBleHRlbmRzIENvbXBvbmVudDxcbiAgVG91Y2hhYmxlT3BhY2l0eVByb3BzICYgR2VuZXJpY1RvdWNoYWJsZVByb3BzICYgR0hUb3VjaGFibGVPcGFjaXR5UHJvcHNcbj4ge1xuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIC4uLkdlbmVyaWNUb3VjaGFibGUuZGVmYXVsdFByb3BzLFxuICAgIGFjdGl2ZU9wYWNpdHk6IDAuMixcbiAgfTtcblxuICAvLyBvcGFjaXR5IGlzIDEgb25lIGJ5IGRlZmF1bHQgYnV0IGNvdWxkIGJlIG92ZXJ3cml0dGVuXG4gIGdldENoaWxkU3R5bGVPcGFjaXR5V2l0aERlZmF1bHQgPSAoKSA9PiB7XG4gICAgY29uc3QgY2hpbGRTdHlsZSA9IFN0eWxlU2hlZXQuZmxhdHRlbih0aGlzLnByb3BzLnN0eWxlKSB8fCB7fTtcbiAgICByZXR1cm4gY2hpbGRTdHlsZS5vcGFjaXR5ID09IG51bGxcbiAgICAgID8gMVxuICAgICAgOiAoY2hpbGRTdHlsZS5vcGFjaXR5LnZhbHVlT2YoKSBhcyBudW1iZXIpO1xuICB9O1xuXG4gIG9wYWNpdHkgPSBuZXcgQW5pbWF0ZWQuVmFsdWUodGhpcy5nZXRDaGlsZFN0eWxlT3BhY2l0eVdpdGhEZWZhdWx0KCkpO1xuXG4gIHNldE9wYWNpdHlUbyA9ICh2YWx1ZTogbnVtYmVyLCBkdXJhdGlvbjogbnVtYmVyKSA9PiB7XG4gICAgQW5pbWF0ZWQudGltaW5nKHRoaXMub3BhY2l0eSwge1xuICAgICAgdG9WYWx1ZTogdmFsdWUsXG4gICAgICBkdXJhdGlvbjogZHVyYXRpb24sXG4gICAgICBlYXNpbmc6IEVhc2luZy5pbk91dChFYXNpbmcucXVhZCksXG4gICAgICB1c2VOYXRpdmVEcml2ZXI6IHRoaXMucHJvcHMudXNlTmF0aXZlQW5pbWF0aW9ucyA/PyB0cnVlLFxuICAgIH0pLnN0YXJ0KCk7XG4gIH07XG5cbiAgb25TdGF0ZUNoYW5nZSA9IChfZnJvbTogbnVtYmVyLCB0bzogbnVtYmVyKSA9PiB7XG4gICAgaWYgKHRvID09PSBUT1VDSEFCTEVfU1RBVEUuQkVHQU4pIHtcbiAgICAgIHRoaXMuc2V0T3BhY2l0eVRvKHRoaXMucHJvcHMuYWN0aXZlT3BhY2l0eSEsIDApO1xuICAgIH0gZWxzZSBpZiAoXG4gICAgICB0byA9PT0gVE9VQ0hBQkxFX1NUQVRFLlVOREVURVJNSU5FRCB8fFxuICAgICAgdG8gPT09IFRPVUNIQUJMRV9TVEFURS5NT1ZFRF9PVVRTSURFXG4gICAgKSB7XG4gICAgICB0aGlzLnNldE9wYWNpdHlUbyh0aGlzLmdldENoaWxkU3R5bGVPcGFjaXR5V2l0aERlZmF1bHQoKSwgMTUwKTtcbiAgICB9XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgc3R5bGUgPSB7fSwgLi4ucmVzdCB9ID0gdGhpcy5wcm9wcztcbiAgICByZXR1cm4gKFxuICAgICAgPEdlbmVyaWNUb3VjaGFibGVcbiAgICAgICAgey4uLnJlc3R9XG4gICAgICAgIHN0eWxlPXtbXG4gICAgICAgICAgc3R5bGUsXG4gICAgICAgICAge1xuICAgICAgICAgICAgb3BhY2l0eTogdGhpcy5vcGFjaXR5IGFzIHVua25vd24gYXMgbnVtYmVyLCAvLyBUT0RPOiBmaXggdGhpc1xuICAgICAgICAgIH0sXG4gICAgICAgIF19XG4gICAgICAgIG9uU3RhdGVDaGFuZ2U9e3RoaXMub25TdGF0ZUNoYW5nZX0+XG4gICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVuID8gdGhpcy5wcm9wcy5jaGlsZHJlbiA6IDxWaWV3IC8+fVxuICAgICAgPC9HZW5lcmljVG91Y2hhYmxlPlxuICAgICk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFBQSxZQUFBLEdBQUFDLE9BQUE7QUFPQSxJQUFBQyxpQkFBQSxHQUFBQyx1QkFBQSxDQUFBRixPQUFBO0FBSUEsSUFBQUcsS0FBQSxHQUFBRCx1QkFBQSxDQUFBRixPQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBVXFCSSxnQkFBTixhQUFBQyxnQkFBQTtFQUFBLElBQUFDLFVBQUEsQ0FBQUMsT0FBQSxFQUFBSCxnQkFBQSxFQUFBQyxnQkFBQTtFQUFBLElBQUFHLE1BQUEsR0FBQUMsWUFBQSxDQUFBTCxnQkFBQTtFQUViLFNBQUFBLGlCQUFBO0lBQUEsSUFBQU0sS0FBQTtJQUFBLElBQUFDLGdCQUFBLENBQUFKLE9BQUEsUUFBQUgsZ0JBQUE7SUFBQSxTQUFBUSxJQUFBLEdBQUFDLFNBQUEsQ0FBQUMsTUFBQSxFQUFBQyxJQUFBLE9BQUFDLEtBQUEsQ0FBQUosSUFBQSxHQUFBSyxJQUFBLE1BQUFBLElBQUEsR0FBQUwsSUFBQSxFQUFBSyxJQUFBO01BQUFGLElBQUEsQ0FBQUUsSUFBQSxJQUFBSixTQUFBLENBQUFJLElBQUE7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