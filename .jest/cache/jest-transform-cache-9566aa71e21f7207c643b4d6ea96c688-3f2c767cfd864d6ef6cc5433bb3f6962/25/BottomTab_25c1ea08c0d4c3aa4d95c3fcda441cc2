40b5341a231239dc42108d22ee3d40ef
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _bottomTabs = require("@react-navigation/bottom-tabs");
var _vectorIcons = require("@expo/vector-icons");
var _TasksScreen = _interopRequireDefault(require("./TasksScreen"));
var _PomodoroScreen = _interopRequireDefault(require("./PomodoroScreen"));
var _MeditationScreen = _interopRequireDefault(require("./MeditationScreen"));
var _react = _interopRequireDefault(require("react"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_i9k99m0ex() {
  var path = "/Users/bjaztin/Desktop/taskManagerApp/src/screens/BottomTab.js";
  var hash = "dac3eff7c27632d7144b1645f0fb7af35b746f88";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/bjaztin/Desktop/taskManagerApp/src/screens/BottomTab.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 27
        },
        end: {
          line: 76,
          column: 1
        }
      },
      "1": {
        start: {
          line: 10,
          column: 14
        },
        end: {
          line: 10,
          column: 40
        }
      },
      "2": {
        start: {
          line: 12,
          column: 2
        },
        end: {
          line: 75,
          column: 4
        }
      },
      "3": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 66
        }
      },
      "4": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 60,
          column: 14
        }
      },
      "5": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 67
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 27
          },
          end: {
            line: 8,
            column: 28
          }
        },
        loc: {
          start: {
            line: 8,
            column: 33
          },
          end: {
            line: 76,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 43,
            column: 22
          },
          end: {
            line: 43,
            column: 23
          }
        },
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 44,
            column: 66
          }
        },
        line: 44
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 55,
            column: 22
          },
          end: {
            line: 55,
            column: 23
          }
        },
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 60,
            column: 14
          }
        },
        line: 56
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 69,
            column: 22
          },
          end: {
            line: 69,
            column: 23
          }
        },
        loc: {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 67
          }
        },
        line: 70
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dac3eff7c27632d7144b1645f0fb7af35b746f88"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_i9k99m0ex = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_i9k99m0ex();
cov_i9k99m0ex().s[0]++;
var BottomTabNavigator = function BottomTabNavigator() {
  cov_i9k99m0ex().f[0]++;
  var Tab = (cov_i9k99m0ex().s[1]++, (0, _bottomTabs.createBottomTabNavigator)());
  cov_i9k99m0ex().s[2]++;
  return (0, _jsxRuntime.jsxs)(Tab.Navigator, {
    screenOptions: {
      headerShown: false,
      tabBarStyle: {
        position: "absolute",
        bottom: 25,
        left: 40,
        right: 40,
        elevation: 1,
        borderRadius: 50,
        height: 65,
        width: "80%",
        backgroundColor: "#D58258"
      },
      tabBarActiveTintColor: "#fbfaf8",
      tabBarInactiveTintColor: "#d7d1b5",
      tabBarLabelStyle: {
        top: 12,
        color: "#F2F0E7"
      },
      tabBarIconStyle: {
        top: 10
      }
    },
    children: [(0, _jsxRuntime.jsx)(Tab.Screen, {
      name: "Tasks",
      component: _TasksScreen.default,
      options: {
        tabBarLabel: "Tasks",
        tabBarIcon: function tabBarIcon(_ref) {
          var color = _ref.color,
            size = _ref.size;
          cov_i9k99m0ex().f[1]++;
          cov_i9k99m0ex().s[3]++;
          return (0, _jsxRuntime.jsx)(_vectorIcons.Ionicons, {
            name: "ios-list",
            color: color,
            size: size
          });
        }
      },
      testID: "TasksTab"
    }), (0, _jsxRuntime.jsx)(Tab.Screen, {
      name: "MeditationScreen",
      component: _MeditationScreen.default,
      options: {
        tabBarLabel: "Meditation",
        tabBarIcon: function tabBarIcon(_ref2) {
          var color = _ref2.color,
            size = _ref2.size;
          cov_i9k99m0ex().f[2]++;
          cov_i9k99m0ex().s[4]++;
          return (0, _jsxRuntime.jsx)(_vectorIcons.MaterialCommunityIcons, {
            name: "meditation",
            color: color,
            size: size
          });
        }
      }
    }), (0, _jsxRuntime.jsx)(Tab.Screen, {
      name: "PomodoroScreen",
      component: _PomodoroScreen.default,
      options: {
        tabBarLabel: "Pomodoro",
        tabBarIcon: function tabBarIcon(_ref3) {
          var color = _ref3.color,
            size = _ref3.size;
          cov_i9k99m0ex().f[3]++;
          cov_i9k99m0ex().s[5]++;
          return (0, _jsxRuntime.jsx)(_vectorIcons.Ionicons, {
            name: "ios-timer",
            color: color,
            size: size
          });
        }
      }
    })]
  });
};
var _default = BottomTabNavigator;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,