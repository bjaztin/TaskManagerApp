{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_ModalTagPicker","_jsxRuntime","describe","test","_render","render","jsx","default","getByTestId","expect","toBeDefined","onTagSelected","jest","fn","changeTagPickerModal","_render2","getByText","fireEvent","press","toHaveBeenCalledWith","_render3","modal"],"sources":["ModalTagPicker.test.js"],"sourcesContent":["import React from \"react\";\nimport { render, fireEvent } from \"@testing-library/react-native\";\nimport ModalTagPicker from \"../../src/utilities/ModalTagPicker\";\n\ndescribe(\"ModalTagPicker\", () => {\n  test(\"Renders ModalTagPicker correctly\", () => {\n    const { getByTestId } = render(<ModalTagPicker />);\n\n    expect(getByTestId(\"modal\")).toBeDefined();\n\n    expect(getByTestId(\"labelTag_0\")).toBeDefined();\n    expect(getByTestId(\"labelTag_1\")).toBeDefined();\n    expect(getByTestId(\"labelTag_2\")).toBeDefined();\n    expect(getByTestId(\"labelTag_3\")).toBeDefined();\n  });\n\n  test(\"calls the appropriate callback when an option is selected\", () => {\n    const onTagSelected = jest.fn();\n    const changeTagPickerModal = jest.fn();\n\n    const { getByText, getByTestId } = render(\n      <ModalTagPicker\n        onTagSelected={onTagSelected}\n        changeTagPickerModal={changeTagPickerModal}\n      />\n    );\n\n    //Simulate the tags\n    fireEvent.press(getByTestId(\"labelTag_0\"));\n    fireEvent.press(getByTestId(\"labelTag_1\"));\n    fireEvent.press(getByTestId(\"labelTag_2\"));\n    fireEvent.press(getByTestId(\"labelTag_3\"));     \n\n    expect(onTagSelected).toHaveBeenCalledWith(\"Red Tag\");\n    expect(onTagSelected).toHaveBeenCalledWith(\"Orange Tag\");\n    expect(onTagSelected).toHaveBeenCalledWith(\"Green Tag\");\n    expect(onTagSelected).toHaveBeenCalledWith(\"label-outline\");\n\n    expect(changeTagPickerModal).toHaveBeenCalledWith(false);\n  });\n\n  test(\"modal becomes visible when component is rendered\", () => {\n    const { getByTestId } = render(<ModalTagPicker />);\n    const modal = getByTestId(\"modal\");\n    expect(modal).toBeDefined();\n  });\n});\n"],"mappings":";AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,eAAA,GAAAH,sBAAA,CAAAC,OAAA;AAAgE,IAAAG,WAAA,GAAAH,OAAA;AAEhEI,QAAQ,CAAC,gBAAgB,EAAE,YAAM;EAC/BC,IAAI,CAAC,kCAAkC,EAAE,YAAM;IAC7C,IAAAC,OAAA,GAAwB,IAAAC,mBAAM,EAAC,IAAAJ,WAAA,CAAAK,GAAA,EAACN,eAAA,CAAAO,OAAc,IAAE,CAAC,CAAC;MAA1CC,WAAW,GAAAJ,OAAA,CAAXI,WAAW;IAEnBC,MAAM,CAACD,WAAW,CAAC,OAAO,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC;IAE1CD,MAAM,CAACD,WAAW,CAAC,YAAY,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC;IAC/CD,MAAM,CAACD,WAAW,CAAC,YAAY,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC;IAC/CD,MAAM,CAACD,WAAW,CAAC,YAAY,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC;IAC/CD,MAAM,CAACD,WAAW,CAAC,YAAY,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC;EACjD,CAAC,CAAC;EAEFP,IAAI,CAAC,2DAA2D,EAAE,YAAM;IACtE,IAAMQ,aAAa,GAAGC,IAAI,CAACC,EAAE,CAAC,CAAC;IAC/B,IAAMC,oBAAoB,GAAGF,IAAI,CAACC,EAAE,CAAC,CAAC;IAEtC,IAAAE,QAAA,GAAmC,IAAAV,mBAAM,EACvC,IAAAJ,WAAA,CAAAK,GAAA,EAACN,eAAA,CAAAO,OAAc;QACbI,aAAa,EAAEA,aAAc;QAC7BG,oBAAoB,EAAEA;MAAqB,CAC5C,CACH,CAAC;MALOE,SAAS,GAAAD,QAAA,CAATC,SAAS;MAAER,WAAW,GAAAO,QAAA,CAAXP,WAAW;IAQ9BS,sBAAS,CAACC,KAAK,CAACV,WAAW,CAAC,YAAY,CAAC,CAAC;IAC1CS,sBAAS,CAACC,KAAK,CAACV,WAAW,CAAC,YAAY,CAAC,CAAC;IAC1CS,sBAAS,CAACC,KAAK,CAACV,WAAW,CAAC,YAAY,CAAC,CAAC;IAC1CS,sBAAS,CAACC,KAAK,CAACV,WAAW,CAAC,YAAY,CAAC,CAAC;IAE1CC,MAAM,CAACE,aAAa,CAAC,CAACQ,oBAAoB,CAAC,SAAS,CAAC;IACrDV,MAAM,CAACE,aAAa,CAAC,CAACQ,oBAAoB,CAAC,YAAY,CAAC;IACxDV,MAAM,CAACE,aAAa,CAAC,CAACQ,oBAAoB,CAAC,WAAW,CAAC;IACvDV,MAAM,CAACE,aAAa,CAAC,CAACQ,oBAAoB,CAAC,eAAe,CAAC;IAE3DV,MAAM,CAACK,oBAAoB,CAAC,CAACK,oBAAoB,CAAC,KAAK,CAAC;EAC1D,CAAC,CAAC;EAEFhB,IAAI,CAAC,kDAAkD,EAAE,YAAM;IAC7D,IAAAiB,QAAA,GAAwB,IAAAf,mBAAM,EAAC,IAAAJ,WAAA,CAAAK,GAAA,EAACN,eAAA,CAAAO,OAAc,IAAE,CAAC,CAAC;MAA1CC,WAAW,GAAAY,QAAA,CAAXZ,WAAW;IACnB,IAAMa,KAAK,GAAGb,WAAW,CAAC,OAAO,CAAC;IAClCC,MAAM,CAACY,KAAK,CAAC,CAACX,WAAW,CAAC,CAAC;EAC7B,CAAC,CAAC;AACJ,CAAC,CAAC"}