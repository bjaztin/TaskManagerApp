a73f9db920c8813f74030b6af52483e2
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.interpolateSharableColor = exports.interpolateColor = exports.Extrapolate = exports.ColorSpace = void 0;
exports.useInterpolateConfig = useInterpolateConfig;
var _Colors = require("./Colors");
var _core = require("./core");
var _interpolation = require("./interpolation");
var _useSharedValue = require("./hook/useSharedValue");
var Extrapolate = {
  EXTEND: 'extend',
  CLAMP: 'clamp',
  IDENTITY: 'identity'
};
exports.Extrapolate = Extrapolate;
var _worklet_6906798994928_init_data = {
  code: "function anonymous(value, inputRange, colors, options) {\n  const {\n    interpolate,\n    Extrapolate,\n    hsvToColor\n  } = this._closure;\n  let h = 0;\n  const {\n    useCorrectedHSVInterpolation = true\n  } = options;\n  if (useCorrectedHSVInterpolation) {\n    const correctedInputRange = [inputRange[0]];\n    const originalH = colors.h;\n    const correctedH = [originalH[0]];\n    for (let i = 1; i < originalH.length; ++i) {\n      const d = originalH[i] - originalH[i - 1];\n      if (originalH[i] > originalH[i - 1] && d > 0.5) {\n        correctedInputRange.push(inputRange[i]);\n        correctedInputRange.push(inputRange[i] + 0.00001);\n        correctedH.push(originalH[i] - 1);\n        correctedH.push(originalH[i]);\n      } else if (originalH[i] < originalH[i - 1] && d < -0.5) {\n        correctedInputRange.push(inputRange[i]);\n        correctedInputRange.push(inputRange[i] + 0.00001);\n        correctedH.push(originalH[i] + 1);\n        correctedH.push(originalH[i]);\n      } else {\n        correctedInputRange.push(inputRange[i]);\n        correctedH.push(originalH[i]);\n      }\n    }\n    h = (interpolate(value, correctedInputRange, correctedH, Extrapolate.CLAMP) + 1) % 1;\n  } else {\n    h = interpolate(value, inputRange, colors.h, Extrapolate.CLAMP);\n  }\n  const s = interpolate(value, inputRange, colors.s, Extrapolate.CLAMP);\n  const v = interpolate(value, inputRange, colors.v, Extrapolate.CLAMP);\n  const a = interpolate(value, inputRange, colors.a, Extrapolate.CLAMP);\n  return hsvToColor(h, s, v, a);\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"value\",\"inputRange\",\"colors\",\"options\",\"interpolate\",\"Extrapolate\",\"hsvToColor\",\"_closure\",\"h\",\"useCorrectedHSVInterpolation\",\"correctedInputRange\",\"originalH\",\"correctedH\",\"i\",\"length\",\"d\",\"push\",\"CLAMP\",\"s\",\"v\",\"a\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\"],\"mappings\":\"AAS6B,SAACA,SAAOA,CAAAC,KAAA,EAAAC,UAAkB,EAAEC,MAAA,EAAOC,OAAK;EAAA;IAAAC,WAAA;IAAAC,WAAA;IAAAC;EAAA,SAAAC,QAAA;EAGnE,IAAIC,CAAC,GAAG,CAAC;EACT,MAAM;IACJC,4BAA4B,GAAG;EACjC,CAAC,GAAGN,OAAO;EACX,IAAIM,4BAA4B,EAAE;IAKhC,MAAMC,mBAAmB,GAAG,CAACT,UAAU,CAAC,CAAC,CAAC,CAAC;IAC3C,MAAMU,SAAS,GAAGT,MAAM,CAACM,CAAC;IAC1B,MAAMI,UAAU,GAAG,CAACD,SAAS,CAAC,CAAC,CAAC,CAAC;IACjC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,CAACG,MAAM,EAAE,EAAED,CAAC,EAAE;MACzC,MAAME,CAAC,GAAGJ,SAAS,CAACE,CAAC,CAAC,GAAGF,SAAS,CAACE,CAAC,GAAG,CAAC,CAAC;MACzC,IAAIF,SAAS,CAACE,CAAC,CAAC,GAAGF,SAAS,CAACE,CAAC,GAAG,CAAC,CAAC,IAAIE,CAAC,GAAG,GAAG,EAAE;QAC9CL,mBAAmB,CAACM,IAAI,CAACf,UAAU,CAACY,CAAC,CAAC,CAAC;QACvCH,mBAAmB,CAACM,IAAI,CAACf,UAAU,CAACY,CAAC,CAAC,GAAG,OAAO,CAAC;QACjDD,UAAU,CAACI,IAAI,CAACL,SAAS,CAACE,CAAC,CAAC,GAAG,CAAC,CAAC;QACjCD,UAAU,CAACI,IAAI,CAACL,SAAS,CAACE,CAAC,CAAC,CAAC;MAC/B,CAAC,MAAM,IAAIF,SAAS,CAACE,CAAC,CAAC,GAAGF,SAAS,CAACE,CAAC,GAAG,CAAC,CAAC,IAAIE,CAAC,GAAG,CAAC,GAAG,EAAE;QACtDL,mBAAmB,CAACM,IAAI,CAACf,UAAU,CAACY,CAAC,CAAC,CAAC;QACvCH,mBAAmB,CAACM,IAAI,CAACf,UAAU,CAACY,CAAC,CAAC,GAAG,OAAO,CAAC;QACjDD,UAAU,CAACI,IAAI,CAACL,SAAS,CAACE,CAAC,CAAC,GAAG,CAAC,CAAC;QACjCD,UAAU,CAACI,IAAI,CAACL,SAAS,CAACE,CAAC,CAAC,CAAC;MAC/B,CAAC,MAAM;QACLH,mBAAmB,CAACM,IAAI,CAACf,UAAU,CAACY,CAAC,CAAC,CAAC;QACvCD,UAAU,CAACI,IAAI,CAACL,SAAS,CAACE,CAAC,CAAC,CAAC;MAC/B;IACF;IACAL,CAAC,GAAG,CAACJ,WAAW,CAACJ,KAAK,EAAEU,mBAAmB,EAAEE,UAAU,EAAEP,WAAW,CAACY,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC;EACtF,CAAC,MAAM;IACLT,CAAC,GAAGJ,WAAW,CAACJ,KAAK,EAAEC,UAAU,EAAEC,MAAM,CAACM,CAAC,EAAEH,WAAW,CAACY,KAAK,CAAC;EACjE;EACA,MAAMC,CAAC,GAAGd,WAAW,CAACJ,KAAK,EAAEC,UAAU,EAAEC,MAAM,CAACgB,CAAC,EAAEb,WAAW,CAACY,KAAK,CAAC;EACrE,MAAME,CAAC,GAAGf,WAAW,CAACJ,KAAK,EAAEC,UAAU,EAAEC,MAAM,CAACiB,CAAC,EAAEd,WAAW,CAACY,KAAK,CAAC;EACrE,MAAMG,CAAC,GAAGhB,WAAW,CAACJ,KAAK,EAAEC,UAAU,EAAEC,MAAM,CAACkB,CAAC,EAAEf,WAAW,CAACY,KAAK,CAAC;EACrE,OAAOX,UAAU,CAACE,CAAC,EAAEU,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;AAC/B\"}"
};
var interpolateColorsHSV = function () {
  var _e = [new global.Error(), -4, -27];
  var _f = function _f(value, inputRange, colors, options) {
    var h = 0;
    var _options$useCorrected = options.useCorrectedHSVInterpolation,
      useCorrectedHSVInterpolation = _options$useCorrected === void 0 ? true : _options$useCorrected;
    if (useCorrectedHSVInterpolation) {
      var correctedInputRange = [inputRange[0]];
      var originalH = colors.h;
      var correctedH = [originalH[0]];
      for (var i = 1; i < originalH.length; ++i) {
        var d = originalH[i] - originalH[i - 1];
        if (originalH[i] > originalH[i - 1] && d > 0.5) {
          correctedInputRange.push(inputRange[i]);
          correctedInputRange.push(inputRange[i] + 0.00001);
          correctedH.push(originalH[i] - 1);
          correctedH.push(originalH[i]);
        } else if (originalH[i] < originalH[i - 1] && d < -0.5) {
          correctedInputRange.push(inputRange[i]);
          correctedInputRange.push(inputRange[i] + 0.00001);
          correctedH.push(originalH[i] + 1);
          correctedH.push(originalH[i]);
        } else {
          correctedInputRange.push(inputRange[i]);
          correctedH.push(originalH[i]);
        }
      }
      h = ((0, _interpolation.interpolate)(value, correctedInputRange, correctedH, Extrapolate.CLAMP) + 1) % 1;
    } else {
      h = (0, _interpolation.interpolate)(value, inputRange, colors.h, Extrapolate.CLAMP);
    }
    var s = (0, _interpolation.interpolate)(value, inputRange, colors.s, Extrapolate.CLAMP);
    var v = (0, _interpolation.interpolate)(value, inputRange, colors.v, Extrapolate.CLAMP);
    var a = (0, _interpolation.interpolate)(value, inputRange, colors.a, Extrapolate.CLAMP);
    return (0, _Colors.hsvToColor)(h, s, v, a);
  };
  _f._closure = {
    interpolate: _interpolation.interpolate,
    Extrapolate: Extrapolate,
    hsvToColor: _Colors.hsvToColor
  };
  _f.__initData = _worklet_6906798994928_init_data;
  _f.__workletHash = 6906798994928;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
var _worklet_11271606745997_init_data = {
  code: "function anonymous(x, gamma) {\n  return x.map(function (v) {\n    return Math.pow(v / 255, gamma);\n  });\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"x\",\"gamma\",\"map\",\"v\",\"Math\",\"pow\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\"],\"mappings\":\"AAkDsB,SAACA,SAAGA,CAAKC,CAAA,EAAKC,KAAA;EAGlC,OAAOD,CAAC,CAACE,GAAG,CAAC,UAAAC,CAAC;IAAA,OAAIC,IAAI,CAACC,GAAG,CAACF,CAAC,GAAG,GAAG,EAAEF,KAAK,CAAC;EAAA,EAAC;AAC7C\"}"
};
var toLinearSpace = function () {
  var _e = [new global.Error(), 1, -27];
  var _f = function _f(x, gamma) {
    return x.map(function (v) {
      return Math.pow(v / 255, gamma);
    });
  };
  _f._closure = {};
  _f.__initData = _worklet_11271606745997_init_data;
  _f.__workletHash = 11271606745997;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
var _worklet_3404264460492_init_data = {
  code: "function anonymous(x, gamma) {\n  return Math.round(Math.pow(x, 1 / gamma) * 255);\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"x\",\"gamma\",\"Math\",\"round\",\"pow\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\"],\"mappings\":\"AAuDqB,SAACA,SAAGA,CAAKC,CAAA,EAAKC,KAAA;EAGjC,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACJ,CAAC,EAAE,CAAC,GAAGC,KAAK,CAAC,GAAG,GAAG,CAAC;AACjD\"}"
};
var toGammaSpace = function () {
  var _e = [new global.Error(), 1, -27];
  var _f = function _f(x, gamma) {
    return Math.round(Math.pow(x, 1 / gamma) * 255);
  };
  _f._closure = {};
  _f.__initData = _worklet_3404264460492_init_data;
  _f.__workletHash = 3404264460492;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
var _worklet_5547345126831_init_data = {
  code: "function anonymous(value, inputRange, colors, options) {\n  const {\n    toLinearSpace,\n    interpolate,\n    Extrapolate,\n    rgbaColor,\n    toGammaSpace\n  } = this._closure;\n  const {\n    gamma = 2.2\n  } = options;\n  let {\n    r: outputR,\n    g: outputG,\n    b: outputB\n  } = colors;\n  if (gamma !== 1) {\n    outputR = toLinearSpace(outputR, gamma);\n    outputG = toLinearSpace(outputG, gamma);\n    outputB = toLinearSpace(outputB, gamma);\n  }\n  const r = interpolate(value, inputRange, outputR, Extrapolate.CLAMP);\n  const g = interpolate(value, inputRange, outputG, Extrapolate.CLAMP);\n  const b = interpolate(value, inputRange, outputB, Extrapolate.CLAMP);\n  const a = interpolate(value, inputRange, colors.a, Extrapolate.CLAMP);\n  if (gamma === 1) {\n    return rgbaColor(r, g, b, a);\n  }\n  return rgbaColor(toGammaSpace(r, gamma), toGammaSpace(g, gamma), toGammaSpace(b, gamma), a);\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"value\",\"inputRange\",\"colors\",\"options\",\"toLinearSpace\",\"interpolate\",\"Extrapolate\",\"rgbaColor\",\"toGammaSpace\",\"_closure\",\"gamma\",\"r\",\"outputR\",\"g\",\"outputG\",\"b\",\"outputB\",\"CLAMP\",\"a\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\"],\"mappings\":\"AA4D6B,SAACA,SAAOA,CAAAC,KAAA,EAAAC,UAAkB,EAAEC,MAAA,EAAOC,OAAK;EAAA;IAAAC,aAAA;IAAAC,WAAA;IAAAC,WAAA;IAAAC,SAAA;IAAAC;EAAA,SAAAC,QAAA;EAGnE,MAAM;IACJC,KAAK,GAAG;EACV,CAAC,GAAGP,OAAO;EACX,IAAI;IACFQ,CAAC,EAAEC,OAAO;IACVC,CAAC,EAAEC,OAAO;IACVC,CAAC,EAAEC;EACL,CAAC,GAAGd,MAAM;EACV,IAAIQ,KAAK,KAAK,CAAC,EAAE;IACfE,OAAO,GAAGR,aAAa,CAACQ,OAAO,EAAEF,KAAK,CAAC;IACvCI,OAAO,GAAGV,aAAa,CAACU,OAAO,EAAEJ,KAAK,CAAC;IACvCM,OAAO,GAAGZ,aAAa,CAACY,OAAO,EAAEN,KAAK,CAAC;EACzC;EACA,MAAMC,CAAC,GAAGN,WAAW,CAACL,KAAK,EAAEC,UAAU,EAAEW,OAAO,EAAEN,WAAW,CAACW,KAAK,CAAC;EACpE,MAAMJ,CAAC,GAAGR,WAAW,CAACL,KAAK,EAAEC,UAAU,EAAEa,OAAO,EAAER,WAAW,CAACW,KAAK,CAAC;EACpE,MAAMF,CAAC,GAAGV,WAAW,CAACL,KAAK,EAAEC,UAAU,EAAEe,OAAO,EAAEV,WAAW,CAACW,KAAK,CAAC;EACpE,MAAMC,CAAC,GAAGb,WAAW,CAACL,KAAK,EAAEC,UAAU,EAAEC,MAAM,CAACgB,CAAC,EAAEZ,WAAW,CAACW,KAAK,CAAC;EACrE,IAAIP,KAAK,KAAK,CAAC,EAAE;IACf,OAAOH,SAAS,CAACI,CAAC,EAAEE,CAAC,EAAEE,CAAC,EAAEG,CAAC,CAAC;EAC9B;EACA,OAAOX,SAAS,CAACC,YAAY,CAACG,CAAC,EAAED,KAAK,CAAC,EAAEF,YAAY,CAACK,CAAC,EAAEH,KAAK,CAAC,EAAEF,YAAY,CAACO,CAAC,EAAEL,KAAK,CAAC,EAAEQ,CAAC,CAAC;AAC7F\"}"
};
var interpolateColorsRGB = function () {
  var _e = [new global.Error(), -6, -27];
  var _f = function _f(value, inputRange, colors, options) {
    var _options$gamma = options.gamma,
      gamma = _options$gamma === void 0 ? 2.2 : _options$gamma;
    var outputR = colors.r,
      outputG = colors.g,
      outputB = colors.b;
    if (gamma !== 1) {
      outputR = toLinearSpace(outputR, gamma);
      outputG = toLinearSpace(outputG, gamma);
      outputB = toLinearSpace(outputB, gamma);
    }
    var r = (0, _interpolation.interpolate)(value, inputRange, outputR, Extrapolate.CLAMP);
    var g = (0, _interpolation.interpolate)(value, inputRange, outputG, Extrapolate.CLAMP);
    var b = (0, _interpolation.interpolate)(value, inputRange, outputB, Extrapolate.CLAMP);
    var a = (0, _interpolation.interpolate)(value, inputRange, colors.a, Extrapolate.CLAMP);
    if (gamma === 1) {
      return (0, _Colors.rgbaColor)(r, g, b, a);
    }
    return (0, _Colors.rgbaColor)(toGammaSpace(r, gamma), toGammaSpace(g, gamma), toGammaSpace(b, gamma), a);
  };
  _f._closure = {
    toLinearSpace: toLinearSpace,
    interpolate: _interpolation.interpolate,
    Extrapolate: Extrapolate,
    rgbaColor: _Colors.rgbaColor,
    toGammaSpace: toGammaSpace
  };
  _f.__initData = _worklet_5547345126831_init_data;
  _f.__workletHash = 5547345126831;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
var _worklet_1256647937052_init_data = {
  code: "function anonymous(colors) {\n  const {\n    processColor,\n    red,\n    green,\n    blue,\n    opacity\n  } = this._closure;\n  const r = [];\n  const g = [];\n  const b = [];\n  const a = [];\n  for (let i = 0; i < colors.length; ++i) {\n    const color = colors[i];\n    const processedColor = processColor(color);\n    if (processedColor !== null && processedColor !== undefined) {\n      r.push(red(processedColor));\n      g.push(green(processedColor));\n      b.push(blue(processedColor));\n      a.push(opacity(processedColor));\n    }\n  }\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"colors\",\"processColor\",\"red\",\"green\",\"blue\",\"opacity\",\"_closure\",\"r\",\"g\",\"b\",\"a\",\"i\",\"length\",\"color\",\"processedColor\",\"undefined\",\"push\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\"],\"mappings\":\"AAqF0B,SAAAA,SAAMA,CAAIC,MAAA;EAAA;IAAAC,YAAA;IAAAC,GAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC;EAAA,SAAAC,QAAA;EAGlC,MAAMC,CAAC,GAAG,EAAE;EACZ,MAAMC,CAAC,GAAG,EAAE;EACZ,MAAMC,CAAC,GAAG,EAAE;EACZ,MAAMC,CAAC,GAAG,EAAE;EACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,MAAM,CAACY,MAAM,EAAE,EAAED,CAAC,EAAE;IACtC,MAAME,KAAK,GAAGb,MAAM,CAACW,CAAC,CAAC;IACvB,MAAMG,cAAc,GAAGb,YAAY,CAACY,KAAK,CAAC;IAE1C,IAAIC,cAAc,KAAK,IAAI,IAAIA,cAAc,KAAKC,SAAS,EAAE;MAC3DR,CAAC,CAACS,IAAI,CAACd,GAAG,CAACY,cAAc,CAAC,CAAC;MAC3BN,CAAC,CAACQ,IAAI,CAACb,KAAK,CAACW,cAAc,CAAC,CAAC;MAC7BL,CAAC,CAACO,IAAI,CAACZ,IAAI,CAACU,cAAc,CAAC,CAAC;MAC5BJ,CAAC,CAACM,IAAI,CAACX,OAAO,CAACS,cAAc,CAAC,CAAC;IACjC;EACF;EACA,OAAO;IACLP,CAAC,EAADA,CAAC;IACDC,CAAC,EAADA,CAAC;IACDC,CAAC,EAADA,CAAC;IACDC,CAAA,EAAAA;EACF,CAAC;AACH\"}"
};
var getInterpolateRGB = function () {
  var _e = [new global.Error(), -6, -27];
  var _f = function _f(colors) {
    var r = [];
    var g = [];
    var b = [];
    var a = [];
    for (var i = 0; i < colors.length; ++i) {
      var color = colors[i];
      var processedColor = (0, _Colors.processColor)(color);
      if (processedColor !== null && processedColor !== undefined) {
        r.push((0, _Colors.red)(processedColor));
        g.push((0, _Colors.green)(processedColor));
        b.push((0, _Colors.blue)(processedColor));
        a.push((0, _Colors.opacity)(processedColor));
      }
    }
    return {
      r: r,
      g: g,
      b: b,
      a: a
    };
  };
  _f._closure = {
    processColor: _Colors.processColor,
    red: _Colors.red,
    green: _Colors.green,
    blue: _Colors.blue,
    opacity: _Colors.opacity
  };
  _f.__initData = _worklet_1256647937052_init_data;
  _f.__workletHash = 1256647937052;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
var _worklet_4205888180392_init_data = {
  code: "function anonymous(colors) {\n  const {\n    processColor,\n    RGBtoHSV,\n    red,\n    green,\n    blue,\n    opacity\n  } = this._closure;\n  const h = [];\n  const s = [];\n  const v = [];\n  const a = [];\n  for (let i = 0; i < colors.length; ++i) {\n    const color = colors[i];\n    const processedColor = processColor(color);\n    if (typeof processedColor === 'number') {\n      const processedHSVColor = RGBtoHSV(red(processedColor), green(processedColor), blue(processedColor));\n      h.push(processedHSVColor.h);\n      s.push(processedHSVColor.s);\n      v.push(processedHSVColor.v);\n      a.push(opacity(processedColor));\n    }\n  }\n  return {\n    h: h,\n    s: s,\n    v: v,\n    a: a\n  };\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"colors\",\"processColor\",\"RGBtoHSV\",\"red\",\"green\",\"blue\",\"opacity\",\"_closure\",\"h\",\"s\",\"v\",\"a\",\"i\",\"length\",\"color\",\"processedColor\",\"processedHSVColor\",\"push\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\"],\"mappings\":\"AA8G0B,SAAAA,SAAMA,CAAIC,MAAA;EAAA;IAAAC,YAAA;IAAAC,QAAA;IAAAC,GAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC;EAAA,SAAAC,QAAA;EAGlC,MAAMC,CAAC,GAAG,EAAE;EACZ,MAAMC,CAAC,GAAG,EAAE;EACZ,MAAMC,CAAC,GAAG,EAAE;EACZ,MAAMC,CAAC,GAAG,EAAE;EACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,MAAM,CAACa,MAAM,EAAE,EAAED,CAAC,EAAE;IACtC,MAAME,KAAK,GAAGd,MAAM,CAACY,CAAC,CAAC;IACvB,MAAMG,cAAc,GAAGd,YAAY,CAACa,KAAK,CAAC;IAC1C,IAAI,OAAOC,cAAc,KAAK,QAAQ,EAAE;MACtC,MAAMC,iBAAiB,GAAGd,QAAQ,CAACC,GAAG,CAACY,cAAc,CAAC,EAAEX,KAAK,CAACW,cAAc,CAAC,EAAEV,IAAI,CAACU,cAAc,CAAC,CAAC;MACpGP,CAAC,CAACS,IAAI,CAACD,iBAAiB,CAACR,CAAC,CAAC;MAC3BC,CAAC,CAACQ,IAAI,CAACD,iBAAiB,CAACP,CAAC,CAAC;MAC3BC,CAAC,CAACO,IAAI,CAACD,iBAAiB,CAACN,CAAC,CAAC;MAC3BC,CAAC,CAACM,IAAI,CAACX,OAAO,CAACS,cAAc,CAAC,CAAC;IACjC;EACF;EACA,OAAO;IACLP,CAAC,EAADA,CAAC;IACDC,CAAC,EAADA,CAAC;IACDC,CAAC,EAADA,CAAC;IACDC,CAAA,EAAAA;EACF,CAAC;AACH\"}"
};
var getInterpolateHSV = function () {
  var _e = [new global.Error(), -7, -27];
  var _f = function _f(colors) {
    var h = [];
    var s = [];
    var v = [];
    var a = [];
    for (var i = 0; i < colors.length; ++i) {
      var color = colors[i];
      var processedColor = (0, _Colors.processColor)(color);
      if (typeof processedColor === 'number') {
        var processedHSVColor = (0, _Colors.RGBtoHSV)((0, _Colors.red)(processedColor), (0, _Colors.green)(processedColor), (0, _Colors.blue)(processedColor));
        h.push(processedHSVColor.h);
        s.push(processedHSVColor.s);
        v.push(processedHSVColor.v);
        a.push((0, _Colors.opacity)(processedColor));
      }
    }
    return {
      h: h,
      s: s,
      v: v,
      a: a
    };
  };
  _f._closure = {
    processColor: _Colors.processColor,
    RGBtoHSV: _Colors.RGBtoHSV,
    red: _Colors.red,
    green: _Colors.green,
    blue: _Colors.blue,
    opacity: _Colors.opacity
  };
  _f.__initData = _worklet_4205888180392_init_data;
  _f.__workletHash = 4205888180392;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
var _worklet_11438556143388_init_data = {
  code: "function anonymous(value, inputRange, outputRange) {\n  const {\n    interpolateColorsHSV,\n    getInterpolateHSV,\n    interpolateColorsRGB,\n    getInterpolateRGB\n  } = this._closure;\n  let colorSpace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'RGB';\n  let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  if (colorSpace === 'HSV') {\n    return interpolateColorsHSV(value, inputRange, getInterpolateHSV(outputRange), options);\n  } else if (colorSpace === 'RGB') {\n    return interpolateColorsRGB(value, inputRange, getInterpolateRGB(outputRange), options);\n  }\n  throw new Error(\"Invalid color space provided: \" + colorSpace + \". Supported values are: ['RGB', 'HSV']\");\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"value\",\"inputRange\",\"outputRange\",\"interpolateColorsHSV\",\"getInterpolateHSV\",\"interpolateColorsRGB\",\"getInterpolateRGB\",\"_closure\",\"colorSpace\",\"arguments\",\"length\",\"undefined\",\"options\",\"Error\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\"],\"mappings\":\"AAuIgC,SAAAA,SAAiBA,CAAAC,KAAA,EAAAC,UAAY,EAAAC,WAAa;EAAA;IAAAC,oBAAA;IAAAC,iBAAA;IAAAC,oBAAA;IAAAC;EAAA,SAAAC,QAAA;EAGxE,IAAIC,UAAU,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK;EAC1F,IAAIG,OAAO,GAAGH,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACpF,IAAID,UAAU,KAAK,KAAK,EAAE;IACxB,OAAOL,oBAAoB,CAACH,KAAK,EAAEC,UAAU,EAAEG,iBAAiB,CAACF,WAAW,CAAC,EAAEU,OAAO,CAAC;EACzF,CAAC,MAAM,IAAIJ,UAAU,KAAK,KAAK,EAAE;IAC/B,OAAOH,oBAAoB,CAACL,KAAK,EAAEC,UAAU,EAAEK,iBAAiB,CAACJ,WAAW,CAAC,EAAEU,OAAO,CAAC;EACzF;EACA,MAAM,IAAIC,KAAK,oCAAkCL,UAAW,2CAAuC,CAAC;AACtG\"}"
};
var interpolateColor = function () {
  var _e = [new global.Error(), -5, -27];
  var _f = function _f(value, inputRange, outputRange) {
    var colorSpace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'RGB';
    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    if (colorSpace === 'HSV') {
      return interpolateColorsHSV(value, inputRange, getInterpolateHSV(outputRange), options);
    } else if (colorSpace === 'RGB') {
      return interpolateColorsRGB(value, inputRange, getInterpolateRGB(outputRange), options);
    }
    throw new Error(`Invalid color space provided: ${colorSpace}. Supported values are: ['RGB', 'HSV']`);
  };
  _f._closure = {
    interpolateColorsHSV: interpolateColorsHSV,
    getInterpolateHSV: getInterpolateHSV,
    interpolateColorsRGB: interpolateColorsRGB,
    getInterpolateRGB: getInterpolateRGB
  };
  _f.__initData = _worklet_11438556143388_init_data;
  _f.__workletHash = 11438556143388;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
exports.interpolateColor = interpolateColor;
var ColorSpace = function (ColorSpace) {
  ColorSpace[ColorSpace["RGB"] = 0] = "RGB";
  ColorSpace[ColorSpace["HSV"] = 1] = "HSV";
  return ColorSpace;
}({});
exports.ColorSpace = ColorSpace;
function useInterpolateConfig(inputRange, outputRange) {
  var colorSpace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ColorSpace.RGB;
  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  return (0, _useSharedValue.useSharedValue)({
    inputRange: inputRange,
    outputRange: outputRange,
    colorSpace: colorSpace,
    cache: (0, _core.makeMutable)(null),
    options: options
  });
}
var _worklet_13643278367522_init_data = {
  code: "function anonymous(value, interpolateConfig) {\n  const {\n    ColorSpace,\n    getInterpolateRGB,\n    interpolateColorsRGB,\n    getInterpolateHSV,\n    interpolateColorsHSV\n  } = this._closure;\n  let colors = interpolateConfig.value.cache.value;\n  if (interpolateConfig.value.colorSpace === ColorSpace.RGB) {\n    if (!colors) {\n      colors = getInterpolateRGB(interpolateConfig.value.outputRange);\n      interpolateConfig.value.cache.value = colors;\n    }\n    return interpolateColorsRGB(value, interpolateConfig.value.inputRange, colors, interpolateConfig.value.options);\n  } else if (interpolateConfig.value.colorSpace === ColorSpace.HSV) {\n    if (!colors) {\n      colors = getInterpolateHSV(interpolateConfig.value.outputRange);\n      interpolateConfig.value.cache.value = colors;\n    }\n    return interpolateColorsHSV(value, interpolateConfig.value.inputRange, colors, interpolateConfig.value.options);\n  }\n  throw new Error(\"Invalid color space provided: \" + interpolateConfig.value.colorSpace + \". Supported values are: ['RGB', 'HSV']\");\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"value\",\"interpolateConfig\",\"ColorSpace\",\"getInterpolateRGB\",\"interpolateColorsRGB\",\"getInterpolateHSV\",\"interpolateColorsHSV\",\"_closure\",\"colors\",\"cache\",\"colorSpace\",\"RGB\",\"outputRange\",\"inputRange\",\"options\",\"HSV\",\"Error\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\"],\"mappings\":\"AAmKwC,SAACA,SAAOA,CAAAC,KAAA,EAAAC,iBAAsB;EAAA;IAAAC,UAAA;IAAAC,iBAAA;IAAAC,oBAAA;IAAAC,iBAAA;IAAAC;EAAA,SAAAC,QAAA;EAGpE,IAAIC,MAAM,GAAGP,iBAAiB,CAACD,KAAK,CAACS,KAAK,CAACT,KAAK;EAChD,IAAIC,iBAAiB,CAACD,KAAK,CAACU,UAAU,KAAKR,UAAU,CAACS,GAAG,EAAE;IACzD,IAAI,CAACH,MAAM,EAAE;MACXA,MAAM,GAAGL,iBAAiB,CAACF,iBAAiB,CAACD,KAAK,CAACY,WAAW,CAAC;MAC/DX,iBAAiB,CAACD,KAAK,CAACS,KAAK,CAACT,KAAK,GAAGQ,MAAM;IAC9C;IACA,OAAOJ,oBAAoB,CAACJ,KAAK,EAAEC,iBAAiB,CAACD,KAAK,CAACa,UAAU,EAAEL,MAAM,EAAEP,iBAAiB,CAACD,KAAK,CAACc,OAAO,CAAC;EACjH,CAAC,MAAM,IAAIb,iBAAiB,CAACD,KAAK,CAACU,UAAU,KAAKR,UAAU,CAACa,GAAG,EAAE;IAChE,IAAI,CAACP,MAAM,EAAE;MACXA,MAAM,GAAGH,iBAAiB,CAACJ,iBAAiB,CAACD,KAAK,CAACY,WAAW,CAAC;MAC/DX,iBAAiB,CAACD,KAAK,CAACS,KAAK,CAACT,KAAK,GAAGQ,MAAM;IAC9C;IACA,OAAOF,oBAAoB,CAACN,KAAK,EAAEC,iBAAiB,CAACD,KAAK,CAACa,UAAU,EAAEL,MAAM,EAAEP,iBAAiB,CAACD,KAAK,CAACc,OAAO,CAAC;EACjH;EACA,MAAM,IAAIE,KAAK,oCAAkCf,iBAAiB,CAACD,KAAK,CAACU,UAAW,2CAAuC,CAAC;AAC9H\"}"
};
var interpolateSharableColor = function () {
  var _e = [new global.Error(), -6, -27];
  var _f = function _f(value, interpolateConfig) {
    var colors = interpolateConfig.value.cache.value;
    if (interpolateConfig.value.colorSpace === ColorSpace.RGB) {
      if (!colors) {
        colors = getInterpolateRGB(interpolateConfig.value.outputRange);
        interpolateConfig.value.cache.value = colors;
      }
      return interpolateColorsRGB(value, interpolateConfig.value.inputRange, colors, interpolateConfig.value.options);
    } else if (interpolateConfig.value.colorSpace === ColorSpace.HSV) {
      if (!colors) {
        colors = getInterpolateHSV(interpolateConfig.value.outputRange);
        interpolateConfig.value.cache.value = colors;
      }
      return interpolateColorsHSV(value, interpolateConfig.value.inputRange, colors, interpolateConfig.value.options);
    }
    throw new Error(`Invalid color space provided: ${interpolateConfig.value.colorSpace}. Supported values are: ['RGB', 'HSV']`);
  };
  _f._closure = {
    ColorSpace: ColorSpace,
    getInterpolateRGB: getInterpolateRGB,
    interpolateColorsRGB: interpolateColorsRGB,
    getInterpolateHSV: getInterpolateHSV,
    interpolateColorsHSV: interpolateColorsHSV
  };
  _f.__initData = _worklet_13643278367522_init_data;
  _f.__workletHash = 13643278367522;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
exports.interpolateSharableColor = interpolateSharableColor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,