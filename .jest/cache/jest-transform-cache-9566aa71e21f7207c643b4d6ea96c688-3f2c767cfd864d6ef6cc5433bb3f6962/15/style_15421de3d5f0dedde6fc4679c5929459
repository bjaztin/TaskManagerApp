710657b3b2991b0ab41e01f0a3ea111e
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = styleConstructor;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _reactNative = require("react-native");
var defaultStyle = _interopRequireWildcard(require("../../../style"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function styleConstructor() {
  var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var appStyle = _objectSpread(_objectSpread({}, defaultStyle), theme);
  return _reactNative.StyleSheet.create(_objectSpread({
    dot: _objectSpread({
      width: 4,
      height: 4,
      marginTop: 1,
      marginHorizontal: 1,
      borderRadius: 2,
      opacity: 0
    }, appStyle.dotStyle),
    visibleDot: {
      opacity: 1,
      backgroundColor: appStyle.dotColor
    },
    selectedDot: {
      backgroundColor: appStyle.selectedDotColor
    },
    disabledDot: {
      backgroundColor: appStyle.disabledDotColor || appStyle.dotColor
    },
    inactiveDot: {
      backgroundColor: appStyle.inactiveDotColor || appStyle.dotColor
    },
    todayDot: {
      backgroundColor: appStyle.todayDotColor || appStyle.dotColor
    }
  }, theme['stylesheet.dot'] || {}));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiZGVmYXVsdFN0eWxlIiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJub2RlSW50ZXJvcCIsIldlYWtNYXAiLCJjYWNoZUJhYmVsSW50ZXJvcCIsImNhY2hlTm9kZUludGVyb3AiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJkZXNjIiwic2V0Iiwib3duS2V5cyIsImUiLCJyIiwidCIsImtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJvIiwiZmlsdGVyIiwiZW51bWVyYWJsZSIsInB1c2giLCJhcHBseSIsIl9vYmplY3RTcHJlYWQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJmb3JFYWNoIiwiX2RlZmluZVByb3BlcnR5MiIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwic3R5bGVDb25zdHJ1Y3RvciIsInRoZW1lIiwidW5kZWZpbmVkIiwiYXBwU3R5bGUiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiZG90Iiwid2lkdGgiLCJoZWlnaHQiLCJtYXJnaW5Ub3AiLCJtYXJnaW5Ib3Jpem9udGFsIiwiYm9yZGVyUmFkaXVzIiwib3BhY2l0eSIsImRvdFN0eWxlIiwidmlzaWJsZURvdCIsImJhY2tncm91bmRDb2xvciIsImRvdENvbG9yIiwic2VsZWN0ZWREb3QiLCJzZWxlY3RlZERvdENvbG9yIiwiZGlzYWJsZWREb3QiLCJkaXNhYmxlZERvdENvbG9yIiwiaW5hY3RpdmVEb3QiLCJpbmFjdGl2ZURvdENvbG9yIiwidG9kYXlEb3QiLCJ0b2RheURvdENvbG9yIl0sInNvdXJjZXMiOlsic3R5bGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3R5bGVTaGVldCB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgKiBhcyBkZWZhdWx0U3R5bGUgZnJvbSAnLi4vLi4vLi4vc3R5bGUnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3R5bGVDb25zdHJ1Y3Rvcih0aGVtZSA9IHt9KSB7XG4gICAgY29uc3QgYXBwU3R5bGUgPSB7IC4uLmRlZmF1bHRTdHlsZSwgLi4udGhlbWUgfTtcbiAgICByZXR1cm4gU3R5bGVTaGVldC5jcmVhdGUoe1xuICAgICAgICBkb3Q6IHtcbiAgICAgICAgICAgIHdpZHRoOiA0LFxuICAgICAgICAgICAgaGVpZ2h0OiA0LFxuICAgICAgICAgICAgbWFyZ2luVG9wOiAxLFxuICAgICAgICAgICAgbWFyZ2luSG9yaXpvbnRhbDogMSxcbiAgICAgICAgICAgIGJvcmRlclJhZGl1czogMixcbiAgICAgICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICAgICAgICAuLi5hcHBTdHlsZS5kb3RTdHlsZVxuICAgICAgICB9LFxuICAgICAgICB2aXNpYmxlRG90OiB7XG4gICAgICAgICAgICBvcGFjaXR5OiAxLFxuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBhcHBTdHlsZS5kb3RDb2xvclxuICAgICAgICB9LFxuICAgICAgICBzZWxlY3RlZERvdDoge1xuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBhcHBTdHlsZS5zZWxlY3RlZERvdENvbG9yXG4gICAgICAgIH0sXG4gICAgICAgIGRpc2FibGVkRG90OiB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGFwcFN0eWxlLmRpc2FibGVkRG90Q29sb3IgfHwgYXBwU3R5bGUuZG90Q29sb3JcbiAgICAgICAgfSxcbiAgICAgICAgaW5hY3RpdmVEb3Q6IHtcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogYXBwU3R5bGUuaW5hY3RpdmVEb3RDb2xvciB8fCBhcHBTdHlsZS5kb3RDb2xvclxuICAgICAgICB9LFxuICAgICAgICB0b2RheURvdDoge1xuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBhcHBTdHlsZS50b2RheURvdENvbG9yIHx8IGFwcFN0eWxlLmRvdENvbG9yXG4gICAgICAgIH0sXG4gICAgICAgIC4uLih0aGVtZVsnc3R5bGVzaGVldC5kb3QnXSB8fCB7fSlcbiAgICB9KTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBQUEsWUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBQyx1QkFBQSxDQUFBRixPQUFBO0FBQStDLFNBQUFHLHlCQUFBQyxXQUFBLGVBQUFDLE9BQUEsa0NBQUFDLGlCQUFBLE9BQUFELE9BQUEsUUFBQUUsZ0JBQUEsT0FBQUYsT0FBQSxZQUFBRix3QkFBQSxZQUFBQSx5QkFBQUMsV0FBQSxXQUFBQSxXQUFBLEdBQUFHLGdCQUFBLEdBQUFELGlCQUFBLEtBQUFGLFdBQUE7QUFBQSxTQUFBRix3QkFBQU0sR0FBQSxFQUFBSixXQUFBLFNBQUFBLFdBQUEsSUFBQUksR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsV0FBQUQsR0FBQSxRQUFBQSxHQUFBLG9CQUFBQSxHQUFBLHdCQUFBQSxHQUFBLDRCQUFBRSxPQUFBLEVBQUFGLEdBQUEsVUFBQUcsS0FBQSxHQUFBUix3QkFBQSxDQUFBQyxXQUFBLE9BQUFPLEtBQUEsSUFBQUEsS0FBQSxDQUFBQyxHQUFBLENBQUFKLEdBQUEsWUFBQUcsS0FBQSxDQUFBRSxHQUFBLENBQUFMLEdBQUEsU0FBQU0sTUFBQSxXQUFBQyxxQkFBQSxHQUFBQyxNQUFBLENBQUFDLGNBQUEsSUFBQUQsTUFBQSxDQUFBRSx3QkFBQSxXQUFBQyxHQUFBLElBQUFYLEdBQUEsUUFBQVcsR0FBQSxrQkFBQUgsTUFBQSxDQUFBSSxTQUFBLENBQUFDLGNBQUEsQ0FBQUMsSUFBQSxDQUFBZCxHQUFBLEVBQUFXLEdBQUEsU0FBQUksSUFBQSxHQUFBUixxQkFBQSxHQUFBQyxNQUFB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