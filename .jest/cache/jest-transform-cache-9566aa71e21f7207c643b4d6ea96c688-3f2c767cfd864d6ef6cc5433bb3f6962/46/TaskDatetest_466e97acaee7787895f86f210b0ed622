dbf7139d68ea35f1d1cd3c420fa7ed04
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _TaskDate = _interopRequireDefault(require("../../../src/components/TaskDetail/TaskDate"));
var _jsxRuntime = require("react/jsx-runtime");
describe("TaskDate component", function () {
  test("Renders the task date function correctly ", function () {
    var selectedDate = "2023-09-07";
    var isComplete = false;
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_TaskDate.default, {
        selectedDate: selectedDate,
        isComplete: isComplete
      })),
      getByText = _render.getByText;
    expect(getByText("9/7/2023")).toBeDefined();
  });
  test("When task is complete, change the selected date text to gray", function () {
    var selectedDate = "2023-09-07";
    var isComplete = true;
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_TaskDate.default, {
        selectedDate: selectedDate,
        isComplete: isComplete
      })),
      getByText = _render2.getByText;
    var text = getByText("9/7/2023");
    expect(text).toBeDefined();
    var textStyleComplete = text.props.style[1].color;
    expect(textStyleComplete).toBe("gray");
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9UYXNrRGF0ZSIsIl9qc3hSdW50aW1lIiwiZGVzY3JpYmUiLCJ0ZXN0Iiwic2VsZWN0ZWREYXRlIiwiaXNDb21wbGV0ZSIsIl9yZW5kZXIiLCJyZW5kZXIiLCJqc3giLCJkZWZhdWx0IiwiZ2V0QnlUZXh0IiwiZXhwZWN0IiwidG9CZURlZmluZWQiLCJfcmVuZGVyMiIsInRleHQiLCJ0ZXh0U3R5bGVDb21wbGV0ZSIsInByb3BzIiwic3R5bGUiLCJjb2xvciIsInRvQmUiXSwic291cmNlcyI6WyJUYXNrRGF0ZS50ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHJlbmRlciB9IGZyb20gXCJAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZVwiO1xuaW1wb3J0IFRhc2tEYXRlIGZyb20gXCIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9UYXNrRGV0YWlsL1Rhc2tEYXRlXCI7XG5cbmRlc2NyaWJlKFwiVGFza0RhdGUgY29tcG9uZW50XCIsICgpID0+IHtcbiAgdGVzdChcIlJlbmRlcnMgdGhlIHRhc2sgZGF0ZSBmdW5jdGlvbiBjb3JyZWN0bHkgXCIsICgpID0+IHtcbiAgICBjb25zdCBzZWxlY3RlZERhdGUgPSBcIjIwMjMtMDktMDdcIjtcbiAgICBjb25zdCBpc0NvbXBsZXRlID0gZmFsc2U7XG5cbiAgICBjb25zdCB7IGdldEJ5VGV4dCB9ID0gcmVuZGVyKFxuICAgICAgPFRhc2tEYXRlIHNlbGVjdGVkRGF0ZT17c2VsZWN0ZWREYXRlfSBpc0NvbXBsZXRlPXtpc0NvbXBsZXRlfSAvPlxuICAgICk7XG5cbiAgICBleHBlY3QoZ2V0QnlUZXh0KFwiOS83LzIwMjNcIikpLnRvQmVEZWZpbmVkKCk7XG4gIH0pO1xuXG4gIHRlc3QoXCJXaGVuIHRhc2sgaXMgY29tcGxldGUsIGNoYW5nZSB0aGUgc2VsZWN0ZWQgZGF0ZSB0ZXh0IHRvIGdyYXlcIiwgKCkgPT4ge1xuICAgIGNvbnN0IHNlbGVjdGVkRGF0ZSA9IFwiMjAyMy0wOS0wN1wiO1xuICAgIGNvbnN0IGlzQ29tcGxldGUgPSB0cnVlO1xuXG4gICAgY29uc3QgeyBnZXRCeVRleHQgfSA9IHJlbmRlcihcbiAgICAgIDxUYXNrRGF0ZSBzZWxlY3RlZERhdGU9e3NlbGVjdGVkRGF0ZX0gaXNDb21wbGV0ZT17aXNDb21wbGV0ZX0gLz5cbiAgICApO1xuXG4gICAgY29uc3QgdGV4dCA9IGdldEJ5VGV4dChcIjkvNy8yMDIzXCIpO1xuICAgIGV4cGVjdCh0ZXh0KS50b0JlRGVmaW5lZCgpO1xuICAgIGNvbnN0IHRleHRTdHlsZUNvbXBsZXRlID0gdGV4dC5wcm9wcy5zdHlsZVsxXS5jb2xvcjtcbiAgICBleHBlY3QodGV4dFN0eWxlQ29tcGxldGUpLnRvQmUoXCJncmF5XCIpO1xuICB9KTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsU0FBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQW1FLElBQUFHLFdBQUEsR0FBQUgsT0FBQTtBQUVuRUksUUFBUSxDQUFDLG9CQUFvQixFQUFFLFlBQU07RUFDbkNDLElBQUksQ0FBQywyQ0FBMkMsRUFBRSxZQUFNO0lBQ3RELElBQU1DLFlBQVksR0FBRyxZQUFZO0lBQ2pDLElBQU1DLFVBQVUsR0FBRyxLQUFLO0lBRXhCLElBQUFDLE9BQUEsR0FBc0IsSUFBQUMsbUJBQU0sRUFDMUIsSUFBQU4sV0FBQSxDQUFBTyxHQUFBLEVBQUNSLFNBQUEsQ0FBQVMsT0FBUTtRQUFDTCxZQUFZLEVBQUVBLFlBQWE7UUFBQ0MsVUFBVSxFQUFFQTtNQUFXLENBQUUsQ0FDakUsQ0FBQztNQUZPSyxTQUFTLEdBQUFKLE9BQUEsQ0FBVEksU0FBUztJQUlqQkMsTUFBTSxDQUFDRCxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQ0UsV0FBVyxDQUFDLENBQUM7RUFDN0MsQ0FBQyxDQUFDO0VBRUZULElBQUksQ0FBQyw4REFBOEQsRUFBRSxZQUFNO0lBQ3pFLElBQU1DLFlBQVksR0FBRyxZQUFZO0lBQ2pDLElBQU1DLFVBQVUsR0FBRyxJQUFJO0lBRXZCLElBQUFRLFFBQUEsR0FBc0IsSUFBQU4sbUJBQU0sRUFDMUIsSUFBQU4sV0FBQSxDQUFBTyxHQUFBLEVBQUNSLFNBQUEsQ0FBQVMsT0FBUTtRQUFDTCxZQUFZLEVBQUVBLFlBQWE7UUFBQ0MsVUFBVSxFQUFFQTtNQUFXLENBQUUsQ0FDakUsQ0FBQztNQUZPSyxTQUFTLEdBQUFHLFFBQUEsQ0FBVEgsU0FBUztJQUlqQixJQUFNSSxJQUFJLEdBQUdKLFNBQVMsQ0FBQyxVQUFVLENBQUM7SUFDbENDLE1BQU0sQ0FBQ0csSUFBSSxDQUFDLENBQUNGLFdBQVcsQ0FBQyxDQUFDO0lBQzFCLElBQU1HLGlCQUFpQixHQUFHRCxJQUFJLENBQUNFLEtBQUssQ0FBQ0MsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDQyxLQUFLO0lBQ25EUCxNQUFNLENBQUNJLGlCQUFpQixDQUFDLENBQUNJLElBQUksQ0FBQyxNQUFNLENBQUM7RUFDeEMsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDIn0=