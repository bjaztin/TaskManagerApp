{"version":3,"names":["_Easing","require","_util","_worklet_2939953182829_init_data","code","location","sourceMap","_worklet_14599272203650_init_data","withTiming","_e","global","Error","_f","toValue","userConfig","callback","defineAnimation","config","duration","easing","Easing","inOut","quad","Object","keys","forEach","key","timing","animation","now","startTime","startValue","runtime","current","progress","onStart","value","previousAnimation","type","factory","onFrame","_closure","__initData","__workletHash","__stackDetails","__version","exports"],"sources":["timing.ts"],"sourcesContent":["import { Easing, EasingFn, EasingFactoryFn } from '../Easing';\nimport { defineAnimation } from './util';\nimport {\n  Animation,\n  AnimationCallback,\n  Timestamp,\n  AnimatableValue,\n} from '../commonTypes';\n\ninterface TimingConfig {\n  duration?: number;\n  easing?: EasingFn | EasingFactoryFn;\n}\n\nexport interface TimingAnimation extends Animation<TimingAnimation> {\n  type: string;\n  easing: EasingFn;\n  startValue: AnimatableValue;\n  startTime: Timestamp;\n  progress: number;\n  toValue: AnimatableValue;\n  current: AnimatableValue;\n}\n\nexport interface InnerTimingAnimation\n  extends Omit<TimingAnimation, 'toValue' | 'current'> {\n  toValue: number;\n  current: number;\n}\n\nexport function withTiming(\n  toValue: AnimatableValue,\n  userConfig?: TimingConfig,\n  callback?: AnimationCallback\n): Animation<TimingAnimation> {\n  'worklet';\n\n  return defineAnimation<TimingAnimation>(toValue, () => {\n    'worklet';\n    const config: Required<TimingConfig> = {\n      duration: 300,\n      easing: Easing.inOut(Easing.quad),\n    };\n    if (userConfig) {\n      Object.keys(userConfig).forEach(\n        (key) =>\n          ((config as any)[key] = userConfig[key as keyof typeof userConfig])\n      );\n    }\n\n    function timing(animation: InnerTimingAnimation, now: Timestamp): boolean {\n      const { toValue, startTime, startValue } = animation;\n      const runtime = now - startTime;\n\n      if (runtime >= config.duration) {\n        // reset startTime to avoid reusing finished animation config in `start` method\n        animation.startTime = 0;\n        animation.current = toValue;\n        return true;\n      }\n      const progress = animation.easing(runtime / config.duration);\n      animation.current =\n        (startValue as number) + (toValue - (startValue as number)) * progress;\n      return false;\n    }\n\n    function onStart(\n      animation: TimingAnimation,\n      value: number,\n      now: Timestamp,\n      previousAnimation: Animation<TimingAnimation>\n    ): void {\n      if (\n        previousAnimation &&\n        (previousAnimation as TimingAnimation).type === 'timing' &&\n        (previousAnimation as TimingAnimation).toValue === toValue &&\n        (previousAnimation as TimingAnimation).startTime\n      ) {\n        // to maintain continuity of timing animations we check if we are starting\n        // new timing over the old one with the same parameters. If so, we want\n        // to copy animation timeline properties\n        animation.startTime = (previousAnimation as TimingAnimation).startTime;\n        animation.startValue = (\n          previousAnimation as TimingAnimation\n        ).startValue;\n      } else {\n        animation.startTime = now;\n        animation.startValue = value;\n      }\n      animation.current = value;\n      if (typeof config.easing === 'object') {\n        animation.easing = config.easing.factory();\n      } else {\n        animation.easing = config.easing;\n      }\n    }\n\n    return {\n      type: 'timing',\n      onFrame: timing,\n      onStart: onStart as (animation: TimingAnimation, now: number) => boolean,\n      progress: 0,\n      toValue,\n      startValue: 0,\n      startTime: 0,\n      easing: () => 0,\n      current: toValue,\n      callback,\n    } as TimingAnimation;\n  });\n}\n"],"mappings":"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"}