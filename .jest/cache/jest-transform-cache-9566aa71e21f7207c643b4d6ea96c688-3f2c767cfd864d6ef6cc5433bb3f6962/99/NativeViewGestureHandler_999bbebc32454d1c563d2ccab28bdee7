6a947c8ef163a9fa24d8107ab9dbd187
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _toConsumableArray2 = _interopRequireDefault2(require("@babel/runtime/helpers/toConsumableArray"));
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NativeViewGestureHandler = exports.nativeViewHandlerName = exports.nativeViewProps = exports.nativeViewGestureHandlerProps = void 0;
var _createHandler = _interopRequireDefault(require("./createHandler"));
var _gestureHandlerCommon = require("./gestureHandlerCommon");
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
var nativeViewGestureHandlerProps = ['shouldActivateOnStart', 'disallowInterruption'];
exports.nativeViewGestureHandlerProps = nativeViewGestureHandlerProps;
var nativeViewProps = [].concat((0, _toConsumableArray2.default)(_gestureHandlerCommon.baseGestureHandlerProps), nativeViewGestureHandlerProps);
exports.nativeViewProps = nativeViewProps;
var nativeViewHandlerName = 'NativeViewGestureHandler';
exports.nativeViewHandlerName = nativeViewHandlerName;
var NativeViewGestureHandler = (0, _createHandler.default)({
  name: nativeViewHandlerName,
  allowedProps: nativeViewProps,
  config: {}
});
exports.NativeViewGestureHandler = NativeViewGestureHandler;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY3JlYXRlSGFuZGxlciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2dlc3R1cmVIYW5kbGVyQ29tbW9uIiwibmF0aXZlVmlld0dlc3R1cmVIYW5kbGVyUHJvcHMiLCJuYXRpdmVWaWV3UHJvcHMiLCJjb25jYXQiLCJfdG9Db25zdW1hYmxlQXJyYXkyIiwiZGVmYXVsdCIsImJhc2VHZXN0dXJlSGFuZGxlclByb3BzIiwibmF0aXZlVmlld0hhbmRsZXJOYW1lIiwiTmF0aXZlVmlld0dlc3R1cmVIYW5kbGVyIiwibmFtZSIsImFsbG93ZWRQcm9wcyIsImNvbmZpZyJdLCJzb3VyY2VzIjpbIk5hdGl2ZVZpZXdHZXN0dXJlSGFuZGxlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3JlYXRlSGFuZGxlciBmcm9tICcuL2NyZWF0ZUhhbmRsZXInO1xuaW1wb3J0IHtcbiAgQmFzZUdlc3R1cmVIYW5kbGVyUHJvcHMsXG4gIGJhc2VHZXN0dXJlSGFuZGxlclByb3BzLFxufSBmcm9tICcuL2dlc3R1cmVIYW5kbGVyQ29tbW9uJztcblxuZXhwb3J0IGNvbnN0IG5hdGl2ZVZpZXdHZXN0dXJlSGFuZGxlclByb3BzID0gW1xuICAnc2hvdWxkQWN0aXZhdGVPblN0YXJ0JyxcbiAgJ2Rpc2FsbG93SW50ZXJydXB0aW9uJyxcbl0gYXMgY29uc3Q7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmF0aXZlVmlld0dlc3R1cmVDb25maWcge1xuICAvKipcbiAgICogQW5kcm9pZCBvbmx5LlxuICAgKlxuICAgKiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIGhhbmRsZXIgc2hvdWxkIGNoZWNrIGZvciBhbiBleGlzdGluZyB0b3VjaCBldmVudCBvblxuICAgKiBpbnN0YW50aWF0aW9uLlxuICAgKi9cbiAgc2hvdWxkQWN0aXZhdGVPblN0YXJ0PzogYm9vbGVhbjtcblxuICAvKipcbiAgICogV2hlbiBgdHJ1ZWAsIGNhbmNlbHMgYWxsIG90aGVyIGdlc3R1cmUgaGFuZGxlcnMgd2hlbiB0aGlzXG4gICAqIGBOYXRpdmVWaWV3R2VzdHVyZUhhbmRsZXJgIHJlY2VpdmVzIGFuIGBBQ1RJVkVgIHN0YXRlIGV2ZW50LlxuICAgKi9cbiAgZGlzYWxsb3dJbnRlcnJ1cHRpb24/OiBib29sZWFuO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE5hdGl2ZVZpZXdHZXN0dXJlSGFuZGxlclByb3BzXG4gIGV4dGVuZHMgQmFzZUdlc3R1cmVIYW5kbGVyUHJvcHM8TmF0aXZlVmlld0dlc3R1cmVIYW5kbGVyUGF5bG9hZD4sXG4gICAgTmF0aXZlVmlld0dlc3R1cmVDb25maWcge31cblxuZXhwb3J0IHR5cGUgTmF0aXZlVmlld0dlc3R1cmVIYW5kbGVyUGF5bG9hZCA9IHtcbiAgLyoqXG4gICAqIFRydWUgaWYgZ2VzdHVyZSB3YXMgcGVyZm9ybWVkIGluc2lkZSBvZiBjb250YWluaW5nIHZpZXcsIGZhbHNlIG90aGVyd2lzZS5cbiAgICovXG4gIHBvaW50ZXJJbnNpZGU6IGJvb2xlYW47XG59O1xuXG5leHBvcnQgY29uc3QgbmF0aXZlVmlld1Byb3BzID0gW1xuICAuLi5iYXNlR2VzdHVyZUhhbmRsZXJQcm9wcyxcbiAgLi4ubmF0aXZlVmlld0dlc3R1cmVIYW5kbGVyUHJvcHMsXG5dIGFzIGNvbnN0O1xuXG5leHBvcnQgY29uc3QgbmF0aXZlVmlld0hhbmRsZXJOYW1lID0gJ05hdGl2ZVZpZXdHZXN0dXJlSGFuZGxlcic7XG5cbmV4cG9ydCB0eXBlIE5hdGl2ZVZpZXdHZXN0dXJlSGFuZGxlciA9IHR5cGVvZiBOYXRpdmVWaWV3R2VzdHVyZUhhbmRsZXI7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXJlZGVjbGFyZSAtLSBiYWNrd2FyZCBjb21wYXRpYmlsaXR5OyBzZWUgZGVzY3JpcHRpb24gb24gdGhlIHRvcCBvZiBnZXN0dXJlSGFuZGxlckNvbW1vbi50cyBmaWxlXG5leHBvcnQgY29uc3QgTmF0aXZlVmlld0dlc3R1cmVIYW5kbGVyID0gY3JlYXRlSGFuZGxlcjxcbiAgTmF0aXZlVmlld0dlc3R1cmVIYW5kbGVyUHJvcHMsXG4gIE5hdGl2ZVZpZXdHZXN0dXJlSGFuZGxlclBheWxvYWRcbj4oe1xuICBuYW1lOiBuYXRpdmVWaWV3SGFuZGxlck5hbWUsXG4gIGFsbG93ZWRQcm9wczogbmF0aXZlVmlld1Byb3BzLFxuICBjb25maWc6IHt9LFxufSk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsSUFBQUEsY0FBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMscUJBQUEsR0FBQUQsT0FBQTs7Ozs7O0FBS08sSUFBTUUsNkJBQTZCLEdBQUcsQ0FDM0MsdUJBRDJDLEVBRTNDLHNCQUYyQyxDQUF0Qzs7QUFnQ0EsSUFBTUMsZUFBZSxNQUFBQyxNQUFBLEtBQUFDLG1CQUFBLENBQUFDLE9BQUEsRUFDdkJMLHFCQUFBLENBQUFNLHVCQUQwQixHQUUxQkwsNkJBRjBCLENBQXhCOztBQUtBLElBQU1NLHFCQUFxQixHQUFHLDBCQUE5Qjs7QUFJQSxJQUFNQyx3QkFBd0IsR0FBRyxJQUFBWCxjQUFBLENBQUFRLE9BQUEsRUFHdEM7RUFDQUksSUFBSSxFQUFFRixxQkFETjtFQUVBRyxZQUFZLEVBQUVSLGVBRmQ7RUFHQVMsTUFBTSxFQUFFO0FBSFIsQ0FIc0MsQ0FBakMifQ==