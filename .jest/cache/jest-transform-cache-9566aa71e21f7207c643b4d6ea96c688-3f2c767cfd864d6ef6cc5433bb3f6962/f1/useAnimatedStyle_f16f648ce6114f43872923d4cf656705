a0d4a7377b8c04d72d068c35eab8d949
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useAnimatedStyle = useAnimatedStyle;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _react = require("react");
var _core = require("../core");
var _UpdateProps = _interopRequireWildcard(require("../UpdateProps"));
var _animation = require("../animation");
var _NativeReanimated = _interopRequireDefault(require("../NativeReanimated"));
var _useSharedValue = require("./useSharedValue");
var _utils = require("./utils");
var _ViewDescriptorsSet = require("../ViewDescriptorsSet");
var _PlatformChecker = require("../PlatformChecker");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _worklet_13528848590945_init_data = {
  code: "function prepareAnimation(frameTimestamp, animatedProp, lastAnimation, lastValue) {\n  const prepareAnimation = this._recur;\n  if (Array.isArray(animatedProp)) {\n    animatedProp.forEach(function (prop, index) {\n      prepareAnimation(frameTimestamp, prop, lastAnimation && lastAnimation[index], lastValue && lastValue[index]);\n    });\n  }\n  if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n    const animation = animatedProp;\n    let value = animation.current;\n    if (lastValue !== undefined) {\n      if (typeof lastValue === 'object') {\n        if (lastValue.value !== undefined) {\n          value = lastValue.value;\n        } else if (lastValue.onFrame !== undefined) {\n          if ((lastAnimation === null || lastAnimation === void 0 ? void 0 : lastAnimation.current) !== undefined) {\n            value = lastAnimation.current;\n          } else if ((lastValue === null || lastValue === void 0 ? void 0 : lastValue.current) !== undefined) {\n            value = lastValue.current;\n          }\n        }\n      } else {\n        value = lastValue;\n      }\n    }\n    animation.callStart = function (timestamp) {\n      animation.onStart(animation, value, timestamp, lastAnimation);\n    };\n    animation.callStart(frameTimestamp);\n    animation.callStart = null;\n  } else if (typeof animatedProp === 'object') {\n    Object.keys(animatedProp).forEach(function (key) {\n      return prepareAnimation(frameTimestamp, animatedProp[key], lastAnimation && lastAnimation[key], lastValue && lastValue[key]);\n    });\n  }\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.js",
  sourceMap: "{\"version\":3,\"names\":[\"prepareAnimation\",\"frameTimestamp\",\"animatedProp\",\"lastAnimation\",\"lastValue\",\"_recur\",\"Array\",\"isArray\",\"forEach\",\"prop\",\"index\",\"onFrame\",\"animation\",\"value\",\"current\",\"undefined\",\"callStart\",\"timestamp\",\"onStart\",\"Object\",\"keys\",\"key\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.js\"],\"mappings\":\"AASA,SAAAA,gBAASA,CAAiBC,cAAA,EAAcC,YAAE,EAAYC,aAAE,EAAaC,SAAE,EAAS;EAAA,MAAAJ,gBAAA,QAAAK,MAAA;EAG9E,IAAIC,KAAK,CAACC,OAAO,CAACL,YAAY,CAAC,EAAE;IAC/BA,YAAY,CAACM,OAAO,CAAC,UAACC,IAAI,EAAEC,KAAK,EAAK;MACpCV,gBAAgB,CAACC,cAAc,EAAEQ,IAAI,EAAEN,aAAa,IAAIA,aAAa,CAACO,KAAK,CAAC,EAAEN,SAAS,IAAIA,SAAS,CAACM,KAAK,CAAC,CAAC;IAC9G,CAAC,CAAC;EAEJ;EAEA,IAAI,OAAOR,YAAY,KAAK,QAAQ,IAAIA,YAAY,CAACS,OAAO,EAAE;IAC5D,MAAMC,SAAS,GAAGV,YAAY;IAC9B,IAAIW,KAAK,GAAGD,SAAS,CAACE,OAAO;IAC7B,IAAIV,SAAS,KAAKW,SAAS,EAAE;MAC3B,IAAI,OAAOX,SAAS,KAAK,QAAQ,EAAE;QACjC,IAAIA,SAAS,CAACS,KAAK,KAAKE,SAAS,EAAE;UAEjCF,KAAK,GAAGT,SAAS,CAACS,KAAK;QACzB,CAAC,MAAM,IAAIT,SAAS,CAACO,OAAO,KAAKI,SAAS,EAAE;UAC1C,IAAI,CAACZ,aAAa,KAAK,IAAI,IAAIA,aAAa,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACW,OAAO,MAAMC,SAAS,EAAE;YAEvGF,KAAK,GAAGV,aAAa,CAACW,OAAO;UAC/B,CAAC,MAAM,IAAI,CAACV,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACU,OAAO,MAAMC,SAAS,EAAE;YAElGF,KAAK,GAAGT,SAAS,CAACU,OAAO;UAC3B;QACF;MACF,CAAC,MAAM;QAELD,KAAK,GAAGT,SAAS;MACnB;IACF;IACAQ,SAAS,CAACI,SAAS,GAAG,UAAAC,SAAS,EAAI;MACjCL,SAAS,CAACM,OAAO,CAACN,SAAS,EAAEC,KAAK,EAAEI,SAAS,EAAEd,aAAa,CAAC;IAC/D,CAAC;IACDS,SAAS,CAACI,SAAS,CAACf,cAAc,CAAC;IACnCW,SAAS,CAACI,SAAS,GAAG,IAAI;EAC5B,CAAC,MAAM,IAAI,OAAOd,YAAY,KAAK,QAAQ,EAAE;IAE3CiB,MAAM,CAACC,IAAI,CAAClB,YAAY,CAAC,CAACM,OAAO,CAAC,UAAAa,GAAG;MAAA,OAAIrB,gBAAgB,CAACC,cAAc,EAAEC,YAAY,CAACmB,GAAG,CAAC,EAAElB,aAAa,IAAIA,aAAa,CAACkB,GAAG,CAAC,EAAEjB,SAAS,IAAIA,SAAS,CAACiB,GAAG,CAAC,CAAC;IAAA,EAAC;EACjK;AACF\"}"
};
var prepareAnimation = function () {
  var _e = [new global.Error(), 1, -27];
  var _f = function _f(frameTimestamp, animatedProp, lastAnimation, lastValue) {
    if (Array.isArray(animatedProp)) {
      animatedProp.forEach(function (prop, index) {
        prepareAnimation(frameTimestamp, prop, lastAnimation && lastAnimation[index], lastValue && lastValue[index]);
      });
    }
    if (typeof animatedProp === 'object' && animatedProp.onFrame) {
      var animation = animatedProp;
      var value = animation.current;
      if (lastValue !== undefined) {
        if (typeof lastValue === 'object') {
          if (lastValue.value !== undefined) {
            value = lastValue.value;
          } else if (lastValue.onFrame !== undefined) {
            if ((lastAnimation === null || lastAnimation === void 0 ? void 0 : lastAnimation.current) !== undefined) {
              value = lastAnimation.current;
            } else if ((lastValue === null || lastValue === void 0 ? void 0 : lastValue.current) !== undefined) {
              value = lastValue.current;
            }
          }
        } else {
          value = lastValue;
        }
      }
      animation.callStart = function (timestamp) {
        animation.onStart(animation, value, timestamp, lastAnimation);
      };
      animation.callStart(frameTimestamp);
      animation.callStart = null;
    } else if (typeof animatedProp === 'object') {
      Object.keys(animatedProp).forEach(function (key) {
        return prepareAnimation(frameTimestamp, animatedProp[key], lastAnimation && lastAnimation[key], lastValue && lastValue[key]);
      });
    }
  };
  _f._closure = {};
  _f.__initData = _worklet_13528848590945_init_data;
  _f.__workletHash = 13528848590945;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
var _worklet_177551854574_init_data = {
  code: "function runAnimations(animation, timestamp, key, result, animationsActive) {\n  const runAnimations = this._recur;\n  if (!animationsActive.value) {\n    return true;\n  }\n  if (Array.isArray(animation)) {\n    result[key] = [];\n    let allFinished = true;\n    animation.forEach(function (entry, index) {\n      if (!runAnimations(entry, timestamp, index, result[key], animationsActive)) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else if (typeof animation === 'object' && animation.onFrame) {\n    let finished = true;\n    if (!animation.finished) {\n      if (animation.callStart) {\n        animation.callStart(timestamp);\n        animation.callStart = null;\n      }\n      finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n      if (finished) {\n        animation.finished = true;\n        animation.callback && animation.callback(true);\n      }\n    }\n    result[key] = animation.current;\n    return finished;\n  } else if (typeof animation === 'object') {\n    result[key] = {};\n    let allFinished = true;\n    Object.keys(animation).forEach(function (k) {\n      if (!runAnimations(animation[k], timestamp, k, result[key], animationsActive)) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else {\n    result[key] = animation;\n    return true;\n  }\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.js",
  sourceMap: "{\"version\":3,\"names\":[\"runAnimations\",\"animation\",\"timestamp\",\"key\",\"result\",\"animationsActive\",\"_recur\",\"value\",\"Array\",\"isArray\",\"allFinished\",\"forEach\",\"entry\",\"index\",\"onFrame\",\"finished\",\"callStart\",\"callback\",\"current\",\"Object\",\"keys\",\"k\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.js\"],\"mappings\":\"AAmDA,SAAAA,aAASA,CAAcC,SAAA,EAASC,SAAE,EAASC,GAAE,EAAGC,MAAE,EAAMC,gBAAE,EAAgB;EAAA,MAAAL,aAAA,QAAAM,MAAA;EAGxE,IAAI,CAACD,gBAAgB,CAACE,KAAK,EAAE;IAC3B,OAAO,IAAI;EACb;EACA,IAAIC,KAAK,CAACC,OAAO,CAACR,SAAS,CAAC,EAAE;IAC5BG,MAAM,CAACD,GAAG,CAAC,GAAG,EAAE;IAChB,IAAIO,WAAW,GAAG,IAAI;IACtBT,SAAS,CAACU,OAAO,CAAC,UAACC,KAAK,EAAEC,KAAK,EAAK;MAClC,IAAI,CAACb,aAAa,CAACY,KAAK,EAAEV,SAAS,EAAEW,KAAK,EAAET,MAAM,CAACD,GAAG,CAAC,EAAEE,gBAAgB,CAAC,EAAE;QAC1EK,WAAW,GAAG,KAAK;MACrB;IACF,CAAC,CAAC;IACF,OAAOA,WAAW;EACpB,CAAC,MAAM,IAAI,OAAOT,SAAS,KAAK,QAAQ,IAAIA,SAAS,CAACa,OAAO,EAAE;IAC7D,IAAIC,QAAQ,GAAG,IAAI;IACnB,IAAI,CAACd,SAAS,CAACc,QAAQ,EAAE;MACvB,IAAId,SAAS,CAACe,SAAS,EAAE;QACvBf,SAAS,CAACe,SAAS,CAACd,SAAS,CAAC;QAC9BD,SAAS,CAACe,SAAS,GAAG,IAAI;MAC5B;MACAD,QAAQ,GAAGd,SAAS,CAACa,OAAO,CAACb,SAAS,EAAEC,SAAS,CAAC;MAClDD,SAAS,CAACC,SAAS,GAAGA,SAAS;MAC/B,IAAIa,QAAQ,EAAE;QACZd,SAAS,CAACc,QAAQ,GAAG,IAAI;QACzBd,SAAS,CAACgB,QAAQ,IAAIhB,SAAS,CAACgB,QAAQ,CAAC,IAAmB,CAAC;MAC/D;IACF;IAEAb,MAAM,CAACD,GAAG,CAAC,GAAGF,SAAS,CAACiB,OAAO;IAC/B,OAAOH,QAAQ;EACjB,CAAC,MAAM,IAAI,OAAOd,SAAS,KAAK,QAAQ,EAAE;IACxCG,MAAM,CAACD,GAAG,CAAC,GAAG,CAAC,CAAC;IAChB,IAAIO,WAAW,GAAG,IAAI;IACtBS,MAAM,CAACC,IAAI,CAACnB,SAAS,CAAC,CAACU,OAAO,CAAC,UAAAU,CAAC,EAAI;MAClC,IAAI,CAACrB,aAAa,CAACC,SAAS,CAACoB,CAAC,CAAC,EAAEnB,SAAS,EAAEmB,CAAC,EAAEjB,MAAM,CAACD,GAAG,CAAC,EAAEE,gBAAgB,CAAC,EAAE;QAC7EK,WAAW,GAAG,KAAK;MACrB;IACF,CAAC,CAAC;IACF,OAAOA,WAAW;EACpB,CAAC,MAAM;IACLN,MAAM,CAACD,GAAG,CAAC,GAAGF,SAAS;IACvB,OAAO,IAAI;EACb;AACF\"}"
};
var runAnimations = function () {
  var _e = [new global.Error(), 1, -27];
  var _f = function _f(animation, timestamp, key, result, animationsActive) {
    if (!animationsActive.value) {
      return true;
    }
    if (Array.isArray(animation)) {
      result[key] = [];
      var allFinished = true;
      animation.forEach(function (entry, index) {
        if (!runAnimations(entry, timestamp, index, result[key], animationsActive)) {
          allFinished = false;
        }
      });
      return allFinished;
    } else if (typeof animation === 'object' && animation.onFrame) {
      var finished = true;
      if (!animation.finished) {
        if (animation.callStart) {
          animation.callStart(timestamp);
          animation.callStart = null;
        }
        finished = animation.onFrame(animation, timestamp);
        animation.timestamp = timestamp;
        if (finished) {
          animation.finished = true;
          animation.callback && animation.callback(true);
        }
      }
      result[key] = animation.current;
      return finished;
    } else if (typeof animation === 'object') {
      result[key] = {};
      var _allFinished = true;
      Object.keys(animation).forEach(function (k) {
        if (!runAnimations(animation[k], timestamp, k, result[key], animationsActive)) {
          _allFinished = false;
        }
      });
      return _allFinished;
    } else {
      result[key] = animation;
      return true;
    }
  };
  _f._closure = {};
  _f.__initData = _worklet_177551854574_init_data;
  _f.__workletHash = 177551854574;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
var _worklet_7858897158286_init_data = {
  code: "function styleUpdater(viewDescriptors, updater, state, maybeViewRef, animationsActive) {\n  const {\n    isAnimated,\n    prepareAnimation,\n    runAnimations,\n    updateProps,\n    shallowEqual\n  } = this._closure;\n  var _state$animations, _updater;\n  const animations = (_state$animations = state.animations) !== null && _state$animations !== void 0 ? _state$animations : {};\n  const newValues = (_updater = updater()) !== null && _updater !== void 0 ? _updater : {};\n  const oldValues = state.last;\n  const nonAnimatedNewValues = {};\n  let hasAnimations = false;\n  let frameTimestamp;\n  let hasNonAnimatedValues = false;\n  for (const key in newValues) {\n    const value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp = global.__frameTimestamp || performance.now();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    } else {\n      hasNonAnimatedValues = true;\n      nonAnimatedNewValues[key] = value;\n      delete animations[key];\n    }\n  }\n  if (hasAnimations) {\n    const frame = function (timestamp) {\n      const {\n        animations: animations,\n        last: last,\n        isAnimationCancelled: isAnimationCancelled\n      } = state;\n      if (isAnimationCancelled) {\n        state.isAnimationRunning = false;\n        return;\n      }\n      const updates = {};\n      let allFinished = true;\n      for (const propName in animations) {\n        const finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n        if (finished) {\n          last[propName] = updates[propName];\n          delete animations[propName];\n        } else {\n          allFinished = false;\n        }\n      }\n      if (updates) {\n        updateProps(viewDescriptors, updates, maybeViewRef);\n      }\n      if (!allFinished) {\n        requestAnimationFrame(frame);\n      } else {\n        state.isAnimationRunning = false;\n      }\n    };\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp);\n    }\n    if (hasNonAnimatedValues) {\n      updateProps(viewDescriptors, nonAnimatedNewValues, maybeViewRef);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n    if (!shallowEqual(oldValues, newValues)) {\n      updateProps(viewDescriptors, newValues, maybeViewRef);\n    }\n  }\n  state.last = newValues;\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.js",
  sourceMap: "{\"version\":3,\"names\":[\"styleUpdater\",\"viewDescriptors\",\"updater\",\"state\",\"maybeViewRef\",\"animationsActive\",\"isAnimated\",\"prepareAnimation\",\"runAnimations\",\"updateProps\",\"shallowEqual\",\"_closure\",\"_state$animations\",\"_updater\",\"animations\",\"newValues\",\"oldValues\",\"last\",\"nonAnimatedNewValues\",\"hasAnimations\",\"frameTimestamp\",\"hasNonAnimatedValues\",\"key\",\"value\",\"global\",\"__frameTimestamp\",\"performance\",\"now\",\"frame\",\"timestamp\",\"isAnimationCancelled\",\"isAnimationRunning\",\"updates\",\"allFinished\",\"propName\",\"finished\",\"requestAnimationFrame\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.js\"],\"mappings\":\"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\"}"
};
var styleUpdater = function () {
  var _e = [new global.Error(), -6, -27];
  var _f = function _f(viewDescriptors, updater, state, maybeViewRef, animationsActive) {
    var _state$animations, _updater;
    var animations = (_state$animations = state.animations) != null ? _state$animations : {};
    var newValues = (_updater = updater()) != null ? _updater : {};
    var oldValues = state.last;
    var nonAnimatedNewValues = {};
    var hasAnimations = false;
    var frameTimestamp;
    var hasNonAnimatedValues = false;
    for (var key in newValues) {
      var value = newValues[key];
      if ((0, _utils.isAnimated)(value)) {
        frameTimestamp = global.__frameTimestamp || performance.now();
        prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);
        animations[key] = value;
        hasAnimations = true;
      } else {
        hasNonAnimatedValues = true;
        nonAnimatedNewValues[key] = value;
        delete animations[key];
      }
    }
    if (hasAnimations) {
      var frame = function frame(timestamp) {
        var animations = state.animations,
          last = state.last,
          isAnimationCancelled = state.isAnimationCancelled;
        if (isAnimationCancelled) {
          state.isAnimationRunning = false;
          return;
        }
        var updates = {};
        var allFinished = true;
        for (var propName in animations) {
          var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);
          if (finished) {
            last[propName] = updates[propName];
            delete animations[propName];
          } else {
            allFinished = false;
          }
        }
        if (updates) {
          (0, _UpdateProps.default)(viewDescriptors, updates, maybeViewRef);
        }
        if (!allFinished) {
          requestAnimationFrame(frame);
        } else {
          state.isAnimationRunning = false;
        }
      };
      state.animations = animations;
      if (!state.isAnimationRunning) {
        state.isAnimationCancelled = false;
        state.isAnimationRunning = true;
        frame(frameTimestamp);
      }
      if (hasNonAnimatedValues) {
        (0, _UpdateProps.default)(viewDescriptors, nonAnimatedNewValues, maybeViewRef);
      }
    } else {
      state.isAnimationCancelled = true;
      state.animations = [];
      if (!(0, _utils.shallowEqual)(oldValues, newValues)) {
        (0, _UpdateProps.default)(viewDescriptors, newValues, maybeViewRef);
      }
    }
    state.last = newValues;
  };
  _f._closure = {
    isAnimated: _utils.isAnimated,
    prepareAnimation: prepareAnimation,
    runAnimations: runAnimations,
    updateProps: _UpdateProps.default,
    shallowEqual: _utils.shallowEqual
  };
  _f.__initData = _worklet_7858897158286_init_data;
  _f.__workletHash = 7858897158286;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
var _worklet_5191373520583_init_data = {
  code: "function jestStyleUpdater(viewDescriptors, updater, state, maybeViewRef, animationsActive, animatedStyle) {\n  const {\n    isAnimated,\n    prepareAnimation,\n    runAnimations,\n    updatePropsJestWrapper,\n    shallowEqual\n  } = this._closure;\n  var _state$animations, _updater;\n  let adapters = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];\n  const animations = (_state$animations = state.animations) !== null && _state$animations !== void 0 ? _state$animations : {};\n  const newValues = (_updater = updater()) !== null && _updater !== void 0 ? _updater : {};\n  const oldValues = state.last;\n  let hasAnimations = false;\n  let frameTimestamp;\n  Object.keys(animations).forEach(function (key) {\n    const value = newValues[key];\n    if (!isAnimated(value)) {\n      delete animations[key];\n    }\n  });\n  Object.keys(newValues).forEach(function (key) {\n    const value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp = global.__frameTimestamp || performance.now();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    }\n  });\n  function frame(timestamp) {\n    const {\n      animations: animations,\n      last: last,\n      isAnimationCancelled: isAnimationCancelled\n    } = state;\n    if (isAnimationCancelled) {\n      state.isAnimationRunning = false;\n      return;\n    }\n    const updates = {};\n    let allFinished = true;\n    Object.keys(animations).forEach(function (propName) {\n      const finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n      if (finished) {\n        last[propName] = updates[propName];\n        delete animations[propName];\n      } else {\n        allFinished = false;\n      }\n    });\n    if (Object.keys(updates).length) {\n      updatePropsJestWrapper(viewDescriptors, updates, maybeViewRef, animatedStyle, adapters);\n    }\n    if (!allFinished) {\n      requestAnimationFrame(frame);\n    } else {\n      state.isAnimationRunning = false;\n    }\n  }\n  if (hasAnimations) {\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n  }\n  state.last = newValues;\n  if (!shallowEqual(oldValues, newValues)) {\n    updatePropsJestWrapper(viewDescriptors, newValues, maybeViewRef, animatedStyle, adapters);\n  }\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.js",
  sourceMap: "{\"version\":3,\"names\":[\"jestStyleUpdater\",\"viewDescriptors\",\"updater\",\"state\",\"maybeViewRef\",\"animationsActive\",\"animatedStyle\",\"isAnimated\",\"prepareAnimation\",\"runAnimations\",\"updatePropsJestWrapper\",\"shallowEqual\",\"_closure\",\"_state$animations\",\"_updater\",\"adapters\",\"arguments\",\"length\",\"undefined\",\"animations\",\"newValues\",\"oldValues\",\"last\",\"hasAnimations\",\"frameTimestamp\",\"Object\",\"keys\",\"forEach\",\"key\",\"value\",\"global\",\"__frameTimestamp\",\"performance\",\"now\",\"frame\",\"timestamp\",\"isAnimationCancelled\",\"isAnimationRunning\",\"updates\",\"allFinished\",\"propName\",\"finished\",\"requestAnimationFrame\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.js\"],\"mappings\":\"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\"}"
};
var jestStyleUpdater = function () {
  var _e = [new global.Error(), -6, -27];
  var _f = function _f(viewDescriptors, updater, state, maybeViewRef, animationsActive, animatedStyle) {
    var _state$animations2, _updater2;
    var adapters = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];
    var animations = (_state$animations2 = state.animations) != null ? _state$animations2 : {};
    var newValues = (_updater2 = updater()) != null ? _updater2 : {};
    var oldValues = state.last;
    var hasAnimations = false;
    var frameTimestamp;
    Object.keys(animations).forEach(function (key) {
      var value = newValues[key];
      if (!(0, _utils.isAnimated)(value)) {
        delete animations[key];
      }
    });
    Object.keys(newValues).forEach(function (key) {
      var value = newValues[key];
      if ((0, _utils.isAnimated)(value)) {
        frameTimestamp = global.__frameTimestamp || performance.now();
        prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);
        animations[key] = value;
        hasAnimations = true;
      }
    });
    function frame(timestamp) {
      var animations = state.animations,
        last = state.last,
        isAnimationCancelled = state.isAnimationCancelled;
      if (isAnimationCancelled) {
        state.isAnimationRunning = false;
        return;
      }
      var updates = {};
      var allFinished = true;
      Object.keys(animations).forEach(function (propName) {
        var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);
        if (finished) {
          last[propName] = updates[propName];
          delete animations[propName];
        } else {
          allFinished = false;
        }
      });
      if (Object.keys(updates).length) {
        (0, _UpdateProps.updatePropsJestWrapper)(viewDescriptors, updates, maybeViewRef, animatedStyle, adapters);
      }
      if (!allFinished) {
        requestAnimationFrame(frame);
      } else {
        state.isAnimationRunning = false;
      }
    }
    if (hasAnimations) {
      state.animations = animations;
      if (!state.isAnimationRunning) {
        state.isAnimationCancelled = false;
        state.isAnimationRunning = true;
        frame(frameTimestamp);
      }
    } else {
      state.isAnimationCancelled = true;
      state.animations = [];
    }
    state.last = newValues;
    if (!(0, _utils.shallowEqual)(oldValues, newValues)) {
      (0, _UpdateProps.updatePropsJestWrapper)(viewDescriptors, newValues, maybeViewRef, animatedStyle, adapters);
    }
  };
  _f._closure = {
    isAnimated: _utils.isAnimated,
    prepareAnimation: prepareAnimation,
    runAnimations: runAnimations,
    updatePropsJestWrapper: _UpdateProps.updatePropsJestWrapper,
    shallowEqual: _utils.shallowEqual
  };
  _f.__initData = _worklet_5191373520583_init_data;
  _f.__workletHash = 5191373520583;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
function checkSharedValueUsage(prop, currentKey) {
  if (Array.isArray(prop)) {
    for (var element of prop) {
      checkSharedValueUsage(element, currentKey);
    }
  } else if (typeof prop === 'object' && prop.value === undefined) {
    for (var key of Object.keys(prop)) {
      checkSharedValueUsage(prop[key], key);
    }
  } else if (currentKey !== undefined && typeof prop === 'object' && prop.value !== undefined) {
    throw new Error(`invalid value passed to \`${currentKey}\`, maybe you forgot to use \`.value\`?`);
  }
}
var _worklet_12172964366838_init_data = {
  code: "function anonymous() {\n  const {\n    updater,\n    adaptersArray\n  } = this._closure;\n  const newValues = updater();\n  adaptersArray.forEach(function (adapter) {\n    adapter(newValues);\n  });\n  return newValues;\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"updater\",\"adaptersArray\",\"_closure\",\"newValues\",\"forEach\",\"adapter\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.js\"],\"mappings\":\"AAgUkB,SAAAA,SAAMA,CAAA;EAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EAGhB,MAAMC,SAAS,GAAGH,OAAO,CAAC,CAAC;EAC3BC,aAAa,CAACG,OAAO,CAAC,UAAAC,OAAO,EAAI;IAC/BA,OAAO,CAACF,SAAS,CAAC;EACpB,CAAC,CAAC;EACF,OAAOA,SAAS;AAClB\"}"
};
var _worklet_5990927885668_init_data = {
  code: "function anonymous() {\n  const {\n    jestStyleUpdater,\n    sharableViewDescriptors,\n    updater,\n    remoteState,\n    maybeViewRef,\n    animationsActive,\n    animatedStyle,\n    adaptersArray\n  } = this._closure;\n  jestStyleUpdater(sharableViewDescriptors, updater, remoteState, maybeViewRef, animationsActive, animatedStyle, adaptersArray);\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"jestStyleUpdater\",\"sharableViewDescriptors\",\"updater\",\"remoteState\",\"maybeViewRef\",\"animationsActive\",\"animatedStyle\",\"adaptersArray\",\"_closure\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.js\"],\"mappings\":\"AA2UY,SAAAA,SAAMA,CAAA;EAAA;IAAAC,gBAAA;IAAAC,uBAAA;IAAAC,OAAA;IAAAC,WAAA;IAAAC,YAAA;IAAAC,gBAAA;IAAAC,aAAA;IAAAC;EAAA,SAAAC,QAAA;EAGVR,gBAAgB,CAACC,uBAAuB,EAAEC,OAAO,EAAEC,WAAW,EAAEC,YAAY,EAAEC,gBAAgB,EAAEC,aAAa,EAAEC,aAAa,CAAC;AAC/H\"}"
};
var _worklet_3999210057764_init_data = {
  code: "function anonymous() {\n  const {\n    styleUpdater,\n    sharableViewDescriptors,\n    updaterFn,\n    remoteState,\n    maybeViewRef,\n    animationsActive\n  } = this._closure;\n  styleUpdater(sharableViewDescriptors, updaterFn, remoteState, maybeViewRef, animationsActive);\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"styleUpdater\",\"sharableViewDescriptors\",\"updaterFn\",\"remoteState\",\"maybeViewRef\",\"animationsActive\",\"_closure\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.js\"],\"mappings\":\"AAiVY,SAAAA,SAAMA,CAAA;EAAA;IAAAC,YAAA;IAAAC,uBAAA;IAAAC,SAAA;IAAAC,WAAA;IAAAC,YAAA;IAAAC;EAAA,SAAAC,QAAA;EAGVN,YAAY,CAACC,uBAAuB,EAAEC,SAAS,EAAEC,WAAW,EAAEC,YAAY,EAAEC,gBAAgB,CAAC;AAC/F\"}"
};
function useAnimatedStyle(updater, dependencies, adapters) {
  var _updater$_closure;
  var viewsRef = (0, _ViewDescriptorsSet.makeViewsRefSet)();
  var initRef = (0, _react.useRef)();
  var inputs = Object.values((_updater$_closure = updater._closure) != null ? _updater$_closure : {});
  if ((0, _PlatformChecker.shouldBeUseWeb)()) {
    var _dependencies;
    if (!inputs.length && (_dependencies = dependencies) !== null && _dependencies !== void 0 && _dependencies.length) {
      inputs = dependencies;
    }
    if (__DEV__ && !inputs.length && !dependencies && !updater.__workletHash) {
      throw new Error(`useAnimatedStyle was used without a dependency array or Babel plugin. Please explicitly pass a dependency array, or enable the Babel/SWC plugin.

For more, see the docs: https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/web-support#web-without-a-babel-plugin`);
    }
  }
  var adaptersArray = adapters ? Array.isArray(adapters) ? adapters : [adapters] : [];
  var adaptersHash = adapters ? (0, _utils.buildWorkletsHash)(adaptersArray) : null;
  var animationsActive = (0, _useSharedValue.useSharedValue)(true);
  var animatedStyle = (0, _react.useRef)({});
  if (!dependencies) {
    dependencies = [].concat((0, _toConsumableArray2.default)(inputs), [updater.__workletHash]);
  } else {
    dependencies.push(updater.__workletHash);
  }
  adaptersHash && dependencies.push(adaptersHash);
  if (!initRef.current) {
    var initialStyle = (0, _animation.initialUpdaterRun)(updater);
    (0, _utils.validateAnimatedStyles)(initialStyle);
    initRef.current = {
      initial: {
        value: initialStyle,
        updater: updater
      },
      remoteState: (0, _core.makeRemote)({
        last: initialStyle,
        animations: {},
        isAnimationCancelled: false,
        isAnimationRunning: false
      }),
      viewDescriptors: (0, _ViewDescriptorsSet.makeViewDescriptorsSet)()
    };
  }
  var _initRef$current = initRef.current,
    initial = _initRef$current.initial,
    remoteState = _initRef$current.remoteState,
    viewDescriptors = _initRef$current.viewDescriptors;
  var sharableViewDescriptors = viewDescriptors.sharableViewDescriptors;
  var maybeViewRef = _NativeReanimated.default.native ? undefined : viewsRef;
  dependencies.push(sharableViewDescriptors);
  (0, _react.useEffect)(function () {
    var fun;
    var updaterFn = updater;
    if (adapters) {
      updaterFn = function () {
        var _e = [new global.Error(), -3, -27];
        var _f = function _f() {
          var newValues = updater();
          adaptersArray.forEach(function (adapter) {
            adapter(newValues);
          });
          return newValues;
        };
        _f._closure = {
          updater: updater,
          adaptersArray: adaptersArray
        };
        _f.__initData = _worklet_12172964366838_init_data;
        _f.__workletHash = 12172964366838;
        _f.__stackDetails = _e;
        _f.__version = "3.3.0";
        return _f;
      }();
    }
    if ((0, _PlatformChecker.isJest)()) {
      fun = function () {
        var _e = [new global.Error(), -9, -27];
        var _f = function _f() {
          jestStyleUpdater(sharableViewDescriptors, updater, remoteState, maybeViewRef, animationsActive, animatedStyle, adaptersArray);
        };
        _f._closure = {
          jestStyleUpdater: jestStyleUpdater,
          sharableViewDescriptors: sharableViewDescriptors,
          updater: updater,
          remoteState: remoteState,
          maybeViewRef: maybeViewRef,
          animationsActive: animationsActive,
          animatedStyle: animatedStyle,
          adaptersArray: adaptersArray
        };
        _f.__initData = _worklet_5990927885668_init_data;
        _f.__workletHash = 5990927885668;
        _f.__stackDetails = _e;
        _f.__version = "3.3.0";
        return _f;
      }();
    } else {
      fun = function () {
        var _e = [new global.Error(), -7, -27];
        var _f = function _f() {
          styleUpdater(sharableViewDescriptors, updaterFn, remoteState, maybeViewRef, animationsActive);
        };
        _f._closure = {
          styleUpdater: styleUpdater,
          sharableViewDescriptors: sharableViewDescriptors,
          updaterFn: updaterFn,
          remoteState: remoteState,
          maybeViewRef: maybeViewRef,
          animationsActive: animationsActive
        };
        _f.__initData = _worklet_3999210057764_init_data;
        _f.__workletHash = 3999210057764;
        _f.__stackDetails = _e;
        _f.__version = "3.3.0";
        return _f;
      }();
    }
    var mapperId = (0, _core.startMapper)(fun, inputs);
    return function () {
      (0, _core.stopMapper)(mapperId);
    };
  }, dependencies);
  (0, _react.useEffect)(function () {
    animationsActive.value = true;
    return function () {
      animationsActive.value = false;
    };
  }, []);
  checkSharedValueUsage(initial.value);
  if (process.env.JEST_WORKER_ID) {
    return {
      viewDescriptors: viewDescriptors,
      initial: initial,
      viewsRef: viewsRef,
      animatedStyle: animatedStyle
    };
  } else {
    return {
      viewDescriptors: viewDescriptors,
      initial: initial,
      viewsRef: viewsRef
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,