c472a293fba9ab614e5f8a23098edc84
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.updatePropsJestWrapper = exports.updateProps = exports.default = exports.colorProps = exports.ColorProperties = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _Colors = require("./Colors");
var _core = require("./core");
var _jsReanimated = require("./js-reanimated");
var _PlatformChecker = require("./PlatformChecker");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var colorProps = ['backgroundColor', 'borderBottomColor', 'borderColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor', 'borderStartColor', 'borderEndColor', 'color', 'shadowColor', 'textDecorationColor', 'tintColor', 'textShadowColor', 'overlayColor'];
exports.colorProps = colorProps;
var ColorProperties = !(0, _core.isConfigured)() ? [] : (0, _core.makeShareable)(colorProps);
exports.ColorProperties = ColorProperties;
var updatePropsByPlatform;
var _worklet_11557893219017_init_data = {
  code: "function anonymous(_, updates, maybeViewRef) {\n  const {\n    _updatePropsJS\n  } = this._closure;\n  if (maybeViewRef) {\n    maybeViewRef.items.forEach(function (item, _) {\n      _updatePropsJS(updates, item);\n    });\n  }\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/UpdateProps.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"_\",\"updates\",\"maybeViewRef\",\"_updatePropsJS\",\"_closure\",\"items\",\"forEach\",\"item\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/UpdateProps.js\"],\"mappings\":\"AAW0B,SAACA,SAAGA,CAAAC,CAAA,EAAOC,OAAE,EAAAC,YAAiB;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGpD,IAAIF,YAAY,EAAE;IAChBA,YAAY,CAACG,KAAK,CAACC,OAAO,CAAC,UAACC,IAAI,EAAEP,CAAC,EAAK;MACtCG,cAAc,CAACF,OAAO,EAAEM,IAAI,CAAC;IAC/B,CAAC,CAAC;EACJ;AACF\"}"
};
var _worklet_6695634921709_init_data = {
  code: "function anonymous(viewDescriptors, updates, _) {\n  const {\n    ColorProperties,\n    processColor\n  } = this._closure;\n  for (const key in updates) {\n    if (ColorProperties.indexOf(key) !== -1) {\n      updates[key] = processColor(updates[key]);\n    }\n  }\n  viewDescriptors.value.forEach(function (viewDescriptor) {\n    _updatePropsFabric(viewDescriptor.shadowNodeWrapper, updates);\n  });\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/UpdateProps.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"viewDescriptors\",\"updates\",\"_\",\"ColorProperties\",\"processColor\",\"_closure\",\"key\",\"indexOf\",\"value\",\"forEach\",\"viewDescriptor\",\"_updatePropsFabric\",\"shadowNodeWrapper\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/UpdateProps.js\"],\"mappings\":\"AAsB4B,SAACA,UAAAC,eAAiB,EAAOC,OAAQ,EAAAC,CAAA;EAAA;IAAAC,eAAA;IAAAC;EAAA,SAAAC,QAAA;EAGvD,KAAK,MAAMC,GAAG,IAAIL,OAAO,EAAE;IACzB,IAAIE,eAAe,CAACI,OAAO,CAACD,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;MACvCL,OAAO,CAACK,GAAG,CAAC,GAAGF,YAAY,CAACH,OAAO,CAACK,GAAG,CAAC,CAAC;IAC3C;EACF;EACAN,eAAe,CAACQ,KAAK,CAACC,OAAO,CAAC,UAAAC,cAAc,EAAI;IAC9CC,kBAAkB,CAACD,cAAc,CAACE,iBAAiB,EAAEX,OAAO,CAAC;EAC/D,CAAC,CAAC;AACJ\"}"
};
var _worklet_10133092834546_init_data = {
  code: "function anonymous(viewDescriptors, updates, _) {\n  const {\n    ColorProperties,\n    processColor\n  } = this._closure;\n  for (const key in updates) {\n    if (ColorProperties.indexOf(key) !== -1) {\n      updates[key] = processColor(updates[key]);\n    }\n  }\n  viewDescriptors.value.forEach(function (viewDescriptor) {\n    _updatePropsPaper(viewDescriptor.tag, viewDescriptor.name || 'RCTView', updates);\n  });\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/UpdateProps.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"viewDescriptors\",\"updates\",\"_\",\"ColorProperties\",\"processColor\",\"_closure\",\"key\",\"indexOf\",\"value\",\"forEach\",\"viewDescriptor\",\"_updatePropsPaper\",\"tag\",\"name\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/UpdateProps.js\"],\"mappings\":\"AAmC4B,SAACA,UAAAC,eAAiB,EAAOC,OAAQ,EAAAC,CAAA;EAAA;IAAAC,eAAA;IAAAC;EAAA,SAAAC,QAAA;EAGvD,KAAK,MAAMC,GAAG,IAAIL,OAAO,EAAE;IACzB,IAAIE,eAAe,CAACI,OAAO,CAACD,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;MACvCL,OAAO,CAACK,GAAG,CAAC,GAAGF,YAAY,CAACH,OAAO,CAACK,GAAG,CAAC,CAAC;IAC3C;EACF;EACAN,eAAe,CAACQ,KAAK,CAACC,OAAO,CAAC,UAAAC,cAAc,EAAI;IAC9CC,iBAAiB,CAACD,cAAc,CAACE,GAAG,EAAEF,cAAc,CAACG,IAAI,IAAI,SAAS,EAAEZ,OAAO,CAAC;EAClF,CAAC,CAAC;AACJ\"}"
};
if ((0, _PlatformChecker.shouldBeUseWeb)()) {
  updatePropsByPlatform = function () {
    var _e = [new global.Error(), -2, -27];
    var _f = function _f(_, updates, maybeViewRef) {
      if (maybeViewRef) {
        maybeViewRef.items.forEach(function (item, _) {
          (0, _jsReanimated._updatePropsJS)(updates, item);
        });
      }
    };
    _f._closure = {
      _updatePropsJS: _jsReanimated._updatePropsJS
    };
    _f.__initData = _worklet_11557893219017_init_data;
    _f.__workletHash = 11557893219017;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }();
} else {
  if (global._IS_FABRIC) {
    updatePropsByPlatform = function () {
      var _e = [new global.Error(), -3, -27];
      var _f = function _f(viewDescriptors, updates, _) {
        for (var key in updates) {
          if (ColorProperties.indexOf(key) !== -1) {
            updates[key] = (0, _Colors.processColor)(updates[key]);
          }
        }
        viewDescriptors.value.forEach(function (viewDescriptor) {
          _updatePropsFabric(viewDescriptor.shadowNodeWrapper, updates);
        });
      };
      _f._closure = {
        ColorProperties: ColorProperties,
        processColor: _Colors.processColor
      };
      _f.__initData = _worklet_6695634921709_init_data;
      _f.__workletHash = 6695634921709;
      _f.__stackDetails = _e;
      _f.__version = "3.3.0";
      return _f;
    }();
  } else {
    updatePropsByPlatform = function () {
      var _e = [new global.Error(), -3, -27];
      var _f = function _f(viewDescriptors, updates, _) {
        for (var key in updates) {
          if (ColorProperties.indexOf(key) !== -1) {
            updates[key] = (0, _Colors.processColor)(updates[key]);
          }
        }
        viewDescriptors.value.forEach(function (viewDescriptor) {
          _updatePropsPaper(viewDescriptor.tag, viewDescriptor.name || 'RCTView', updates);
        });
      };
      _f._closure = {
        ColorProperties: ColorProperties,
        processColor: _Colors.processColor
      };
      _f.__initData = _worklet_10133092834546_init_data;
      _f.__workletHash = 10133092834546;
      _f.__stackDetails = _e;
      _f.__version = "3.3.0";
      return _f;
    }();
  }
}
var updateProps = updatePropsByPlatform;
exports.updateProps = updateProps;
var updatePropsJestWrapper = function updatePropsJestWrapper(viewDescriptors, updates, maybeViewRef, animatedStyle, adapters) {
  adapters.forEach(function (adapter) {
    adapter(updates);
  });
  animatedStyle.current.value = _objectSpread(_objectSpread({}, animatedStyle.current.value), updates);
  updateProps(viewDescriptors, updates, maybeViewRef);
};
exports.updatePropsJestWrapper = updatePropsJestWrapper;
var _default = updateProps;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,