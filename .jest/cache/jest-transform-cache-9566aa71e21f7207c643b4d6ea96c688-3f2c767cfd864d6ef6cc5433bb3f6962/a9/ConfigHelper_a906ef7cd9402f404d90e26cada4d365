07aebe1d26adf5bb2abf1e6c11161cae
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.adaptViewConfig = adaptViewConfig;
exports.addWhitelistedNativeProps = addWhitelistedNativeProps;
exports.addWhitelistedUIProps = addWhitelistedUIProps;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _core = require("./reanimated2/core");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var UI_THREAD_PROPS_WHITELIST = {
  opacity: true,
  transform: true,
  backgroundColor: true,
  borderRightColor: true,
  borderBottomColor: true,
  borderColor: true,
  borderEndColor: true,
  borderLeftColor: true,
  borderStartColor: true,
  borderTopColor: true,
  shadowOpacity: true,
  shadowRadius: true,
  scaleX: true,
  scaleY: true,
  translateX: true,
  translateY: true
};
var NATIVE_THREAD_PROPS_WHITELIST = {
  borderBottomWidth: true,
  borderEndWidth: true,
  borderLeftWidth: true,
  borderRightWidth: true,
  borderStartWidth: true,
  borderTopWidth: true,
  borderWidth: true,
  bottom: true,
  flex: true,
  flexGrow: true,
  flexShrink: true,
  height: true,
  left: true,
  margin: true,
  marginBottom: true,
  marginEnd: true,
  marginHorizontal: true,
  marginLeft: true,
  marginRight: true,
  marginStart: true,
  marginTop: true,
  marginVertical: true,
  maxHeight: true,
  maxWidth: true,
  minHeight: true,
  minWidth: true,
  padding: true,
  paddingBottom: true,
  paddingEnd: true,
  paddingHorizontal: true,
  paddingLeft: true,
  paddingRight: true,
  paddingStart: true,
  paddingTop: true,
  paddingVertical: true,
  right: true,
  start: true,
  top: true,
  width: true,
  zIndex: true,
  borderBottomEndRadius: true,
  borderBottomLeftRadius: true,
  borderBottomRightRadius: true,
  borderBottomStartRadius: true,
  borderRadius: true,
  borderTopEndRadius: true,
  borderTopLeftRadius: true,
  borderTopRightRadius: true,
  borderTopStartRadius: true,
  elevation: true,
  fontSize: true,
  lineHeight: true,
  textShadowRadius: true,
  letterSpacing: true,
  display: true,
  backfaceVisibility: true,
  overflow: true,
  resizeMode: true,
  fontStyle: true,
  fontWeight: true,
  textAlign: true,
  textDecorationLine: true,
  fontFamily: true,
  textAlignVertical: true,
  fontVariant: true,
  textDecorationStyle: true,
  textTransform: true,
  writingDirection: true,
  color: true,
  tintColor: true,
  shadowColor: true,
  placeholderTextColor: true
};
function configureProps() {
  (0, _core.configureProps)(Object.keys(UI_THREAD_PROPS_WHITELIST), Object.keys(NATIVE_THREAD_PROPS_WHITELIST));
}
function addWhitelistedNativeProps(props) {
  var oldSize = Object.keys(NATIVE_THREAD_PROPS_WHITELIST).length;
  NATIVE_THREAD_PROPS_WHITELIST = _objectSpread(_objectSpread({}, NATIVE_THREAD_PROPS_WHITELIST), props);
  if (oldSize !== Object.keys(NATIVE_THREAD_PROPS_WHITELIST).length) {
    configureProps();
  }
}
function addWhitelistedUIProps(props) {
  var oldSize = Object.keys(UI_THREAD_PROPS_WHITELIST).length;
  UI_THREAD_PROPS_WHITELIST = _objectSpread(_objectSpread({}, UI_THREAD_PROPS_WHITELIST), props);
  if (oldSize !== Object.keys(UI_THREAD_PROPS_WHITELIST).length) {
    configureProps();
  }
}
var PROCESSED_VIEW_NAMES = new Set();
function adaptViewConfig(viewConfig) {
  var viewName = viewConfig.uiViewClassName;
  var props = viewConfig.validAttributes;
  if (!PROCESSED_VIEW_NAMES.has(viewName)) {
    var propsToAdd = {};
    Object.keys(props).forEach(function (key) {
      if (!(key in NATIVE_THREAD_PROPS_WHITELIST) && !(key in UI_THREAD_PROPS_WHITELIST)) {
        propsToAdd[key] = true;
      }
    });
    addWhitelistedUIProps(propsToAdd);
    PROCESSED_VIEW_NAMES.add(viewName);
  }
}
configureProps();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY29yZSIsInJlcXVpcmUiLCJvd25LZXlzIiwiZSIsInIiLCJ0IiwiT2JqZWN0Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsIm8iLCJmaWx0ZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwicHVzaCIsImFwcGx5IiwiX29iamVjdFNwcmVhZCIsImFyZ3VtZW50cyIsImxlbmd0aCIsImZvckVhY2giLCJfZGVmaW5lUHJvcGVydHkyIiwiZGVmYXVsdCIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZGVmaW5lUHJvcGVydHkiLCJVSV9USFJFQURfUFJPUFNfV0hJVEVMSVNUIiwib3BhY2l0eSIsInRyYW5zZm9ybSIsImJhY2tncm91bmRDb2xvciIsImJvcmRlclJpZ2h0Q29sb3IiLCJib3JkZXJCb3R0b21Db2xvciIsImJvcmRlckNvbG9yIiwiYm9yZGVyRW5kQ29sb3IiLCJib3JkZXJMZWZ0Q29sb3IiLCJib3JkZXJTdGFydENvbG9yIiwiYm9yZGVyVG9wQ29sb3IiLCJzaGFkb3dPcGFjaXR5Iiwic2hhZG93UmFkaXVzIiwic2NhbGVYIiwic2NhbGVZIiwidHJhbnNsYXRlWCIsInRyYW5zbGF0ZVkiLCJOQVRJVkVfVEhSRUFEX1BST1BTX1dISVRFTElTVCIsImJvcmRlckJvdHRvbVdpZHRoIiwiYm9yZGVyRW5kV2lkdGgiLCJib3JkZXJMZWZ0V2lkdGgiLCJib3JkZXJSaWdodFdpZHRoIiwiYm9yZGVyU3RhcnRXaWR0aCIsImJvcmRlclRvcFdpZHRoIiwiYm9yZGVyV2lkdGgiLCJib3R0b20iLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4U2hyaW5rIiwiaGVpZ2h0IiwibGVmdCIsIm1hcmdpbiIsIm1hcmdpbkJvdHRvbSIsIm1hcmdpbkVuZCIsIm1hcmdpbkhvcml6b250YWwiLCJtYXJnaW5MZWZ0IiwibWFyZ2luUmlnaHQiLCJtYXJnaW5TdGFydCIsIm1hcmdpblRvcCIsIm1hcmdpblZlcnRpY2FsIiwibWF4SGVpZ2h0IiwibWF4V2lkdGgiLCJtaW5IZWlnaHQiLCJtaW5XaWR0aCIsInBhZGRpbmciLCJwYWRkaW5nQm90dG9tIiwicGFkZGluZ0VuZCIsInBhZGRpbmdIb3Jpem9udGFsIiwicGFkZGluZ0xlZnQiLCJwYWRkaW5nUmlnaHQiLCJwYWRkaW5nU3RhcnQiLCJwYWRkaW5nVG9wIiwicGFkZGluZ1ZlcnRpY2FsIiwicmlnaHQiLCJzdGFydCIsInRvcCIsIndpZHRoIiwiekluZGV4IiwiYm9yZGVyQm90dG9tRW5kUmFkaXVzIiwiYm9yZGVyQm90dG9tTGVmdFJhZGl1cyIsImJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzIiwiYm9yZGVyQm90dG9tU3RhcnRSYWRpdXMiLCJib3JkZXJSYWRpdXMiLCJib3JkZXJUb3BFbmRSYWRpdXMiLCJib3JkZXJUb3BMZWZ0UmFkaXVzIiwiYm9yZGVyVG9wUmlnaHRSYWRpdXMiLCJib3JkZXJUb3BTdGFydFJhZGl1cyIsImVsZXZhdGlvbiIsImZvbnRTaXplIiwibGluZUhlaWdodCIsInRleHRTaGFkb3dSYWRpdXMiLCJsZXR0ZXJTcGFjaW5nIiwiZGlzcGxheSIsImJhY2tmYWNlVmlzaWJpbGl0eSIsIm92ZXJmbG93IiwicmVzaXplTW9kZSIsImZvbnRTdHlsZSIsImZvbnRXZWlnaHQiLCJ0ZXh0QWxpZ24iLCJ0ZXh0RGVjb3JhdGlvbkxpbmUiLCJmb250RmFtaWx5IiwidGV4dEFsaWduVmVydGljYWwiLCJmb250VmFyaWFudCIsInRleHREZWNvcmF0aW9uU3R5bGUiLCJ0ZXh0VHJhbnNmb3JtIiwid3JpdGluZ0RpcmVjdGlvbiIsImNvbG9yIiwidGludENvbG9yIiwic2hhZG93Q29sb3IiLCJwbGFjZWhvbGRlclRleHRDb2xvciIsImNvbmZpZ3VyZVByb3BzIiwianNpQ29uZmlndXJlUHJvcHMiLCJhZGRXaGl0ZWxpc3RlZE5hdGl2ZVByb3BzIiwicHJvcHMiLCJvbGRTaXplIiwiYWRkV2hpdGVsaXN0ZWRVSVByb3BzIiwiUFJPQ0VTU0VEX1ZJRVdfTkFNRVMiLCJTZXQiLCJhZGFwdFZpZXdDb25maWciLCJ2aWV3Q29uZmlnIiwidmlld05hbWUiLCJ1aVZpZXdDbGFzc05hbWUiLCJ2YWxpZEF0dHJpYnV0ZXMiLCJoYXMiLCJwcm9wc1RvQWRkIiwia2V5IiwiYWRkIl0sInNvdXJjZXMiOlsiQ29uZmlnSGVscGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbmZpZ3VyZVByb3BzIGFzIGpzaUNvbmZpZ3VyZVByb3BzIH0gZnJvbSAnLi9yZWFuaW1hdGVkMi9jb3JlJztcblxuLyoqXG4gKiBTdHlsZXMgYWxsb3dlZCB0byBiZSBkaXJlY2x5IHVwZGF0ZWQgaW4gVUkgdGhyZWFkXG4gKi9cbmxldCBVSV9USFJFQURfUFJPUFNfV0hJVEVMSVNUOiBSZWNvcmQ8c3RyaW5nLCBib29sZWFuPiA9IHtcbiAgb3BhY2l0eTogdHJ1ZSxcbiAgdHJhbnNmb3JtOiB0cnVlLFxuICAvKiBjb2xvcnMgKi9cbiAgYmFja2dyb3VuZENvbG9yOiB0cnVlLFxuICBib3JkZXJSaWdodENvbG9yOiB0cnVlLFxuICBib3JkZXJCb3R0b21Db2xvcjogdHJ1ZSxcbiAgYm9yZGVyQ29sb3I6IHRydWUsXG4gIGJvcmRlckVuZENvbG9yOiB0cnVlLFxuICBib3JkZXJMZWZ0Q29sb3I6IHRydWUsXG4gIGJvcmRlclN0YXJ0Q29sb3I6IHRydWUsXG4gIGJvcmRlclRvcENvbG9yOiB0cnVlLFxuICAvKiBpb3Mgc3R5bGVzICovXG4gIHNoYWRvd09wYWNpdHk6IHRydWUsXG4gIHNoYWRvd1JhZGl1czogdHJ1ZSxcbiAgLyogbGVnYWN5IGFuZHJvaWQgdHJhbnNmb3JtIHByb3BlcnRpZXMgKi9cbiAgc2NhbGVYOiB0cnVlLFxuICBzY2FsZVk6IHRydWUsXG4gIHRyYW5zbGF0ZVg6IHRydWUsXG4gIHRyYW5zbGF0ZVk6IHRydWUsXG59O1xuXG4vKipcbiAqIFdoaXRlbGlzdCBvZiB2aWV3IHByb3BzIHRoYXQgY2FuIGJlIHVwZGF0ZWQgaW4gbmF0aXZlIHRocmVhZCB2aWEgVUlNYW5hZ2VyTW9kdWxlXG4gKi9cbmxldCBOQVRJVkVfVEhSRUFEX1BST1BTX1dISVRFTElTVDogUmVjb3JkPHN0cmluZywgYm9vbGVhbj4gPSB7XG4gIGJvcmRlckJvdHRvbVdpZHRoOiB0cnVlLFxuICBib3JkZXJFbmRXaWR0aDogdHJ1ZSxcbiAgYm9yZGVyTGVmdFdpZHRoOiB0cnVlLFxuICBib3JkZXJSaWdodFdpZHRoOiB0cnVlLFxuICBib3JkZXJTdGFydFdpZHRoOiB0cnVlLFxuICBib3JkZXJUb3BXaWR0aDogdHJ1ZSxcbiAgYm9yZGVyV2lkdGg6IHRydWUsXG4gIGJvdHRvbTogdHJ1ZSxcbiAgZmxleDogdHJ1ZSxcbiAgZmxleEdyb3c6IHRydWUsXG4gIGZsZXhTaHJpbms6IHRydWUsXG4gIGhlaWdodDogdHJ1ZSxcbiAgbGVmdDogdHJ1ZSxcbiAgbWFyZ2luOiB0cnVlLFxuICBtYXJnaW5Cb3R0b206IHRydWUsXG4gIG1hcmdpbkVuZDogdHJ1ZSxcbiAgbWFyZ2luSG9yaXpvbnRhbDogdHJ1ZSxcbiAgbWFyZ2luTGVmdDogdHJ1ZSxcbiAgbWFyZ2luUmlnaHQ6IHRydWUsXG4gIG1hcmdpblN0YXJ0OiB0cnVlLFxuICBtYXJnaW5Ub3A6IHRydWUsXG4gIG1hcmdpblZlcnRpY2FsOiB0cnVlLFxuICBtYXhIZWlnaHQ6IHRydWUsXG4gIG1heFdpZHRoOiB0cnVlLFxuICBtaW5IZWlnaHQ6IHRydWUsXG4gIG1pbldpZHRoOiB0cnVlLFxuICBwYWRkaW5nOiB0cnVlLFxuICBwYWRkaW5nQm90dG9tOiB0cnVlLFxuICBwYWRkaW5nRW5kOiB0cnVlLFxuICBwYWRkaW5nSG9yaXpvbnRhbDogdHJ1ZSxcbiAgcGFkZGluZ0xlZnQ6IHRydWUsXG4gIHBhZGRpbmdSaWdodDogdHJ1ZSxcbiAgcGFkZGluZ1N0YXJ0OiB0cnVlLFxuICBwYWRkaW5nVG9wOiB0cnVlLFxuICBwYWRkaW5nVmVydGljYWw6IHRydWUsXG4gIHJpZ2h0OiB0cnVlLFxuICBzdGFydDogdHJ1ZSxcbiAgdG9wOiB0cnVlLFxuICB3aWR0aDogdHJ1ZSxcbiAgekluZGV4OiB0cnVlLFxuICBib3JkZXJCb3R0b21FbmRSYWRpdXM6IHRydWUsXG4gIGJvcmRlckJvdHRvbUxlZnRSYWRpdXM6IHRydWUsXG4gIGJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzOiB0cnVlLFxuICBib3JkZXJCb3R0b21TdGFydFJhZGl1czogdHJ1ZSxcbiAgYm9yZGVyUmFkaXVzOiB0cnVlLFxuICBib3JkZXJUb3BFbmRSYWRpdXM6IHRydWUsXG4gIGJvcmRlclRvcExlZnRSYWRpdXM6IHRydWUsXG4gIGJvcmRlclRvcFJpZ2h0UmFkaXVzOiB0cnVlLFxuICBib3JkZXJUb3BTdGFydFJhZGl1czogdHJ1ZSxcbiAgZWxldmF0aW9uOiB0cnVlLFxuICBmb250U2l6ZTogdHJ1ZSxcbiAgbGluZUhlaWdodDogdHJ1ZSxcbiAgdGV4dFNoYWRvd1JhZGl1czogdHJ1ZSxcbiAgbGV0dGVyU3BhY2luZzogdHJ1ZSxcbiAgLyogc3RyaW5ncyAqL1xuICBkaXNwbGF5OiB0cnVlLFxuICBiYWNrZmFjZVZpc2liaWxpdHk6IHRydWUsXG4gIG92ZXJmbG93OiB0cnVlLFxuICByZXNpemVNb2RlOiB0cnVlLFxuICBmb250U3R5bGU6IHRydWUsXG4gIGZvbnRXZWlnaHQ6IHRydWUsXG4gIHRleHRBbGlnbjogdHJ1ZSxcbiAgdGV4dERlY29yYXRpb25MaW5lOiB0cnVlLFxuICBmb250RmFtaWx5OiB0cnVlLFxuICB0ZXh0QWxpZ25WZXJ0aWNhbDogdHJ1ZSxcbiAgZm9udFZhcmlhbnQ6IHRydWUsXG4gIHRleHREZWNvcmF0aW9uU3R5bGU6IHRydWUsXG4gIHRleHRUcmFuc2Zvcm06IHRydWUsXG4gIHdyaXRpbmdEaXJlY3Rpb246IHRydWUsXG4gIC8qIHRleHQgY29sb3IgKi9cbiAgY29sb3I6IHRydWUsXG4gIHRpbnRDb2xvcjogdHJ1ZSxcbiAgc2hhZG93Q29sb3I6IHRydWUsXG4gIHBsYWNlaG9sZGVyVGV4dENvbG9yOiB0cnVlLFxufTtcblxuZnVuY3Rpb24gY29uZmlndXJlUHJvcHMoKTogdm9pZCB7XG4gIGpzaUNvbmZpZ3VyZVByb3BzKFxuICAgIE9iamVjdC5rZXlzKFVJX1RIUkVBRF9QUk9QU19XSElURUxJU1QpLFxuICAgIE9iamVjdC5rZXlzKE5BVElWRV9USFJFQURfUFJPUFNfV0hJVEVMSVNUKVxuICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYWRkV2hpdGVsaXN0ZWROYXRpdmVQcm9wcyhcbiAgcHJvcHM6IFJlY29yZDxzdHJpbmcsIGJvb2xlYW4+XG4pOiB2b2lkIHtcbiAgY29uc3Qgb2xkU2l6ZSA9IE9iamVjdC5rZXlzKE5BVElWRV9USFJFQURfUFJPUFNfV0hJVEVMSVNUKS5sZW5ndGg7XG4gIE5BVElWRV9USFJFQURfUFJPUFNfV0hJVEVMSVNUID0ge1xuICAgIC4uLk5BVElWRV9USFJFQURfUFJPUFNfV0hJVEVMSVNULFxuICAgIC4uLnByb3BzLFxuICB9O1xuICBpZiAob2xkU2l6ZSAhPT0gT2JqZWN0LmtleXMoTkFUSVZFX1RIUkVBRF9QUk9QU19XSElURUxJU1QpLmxlbmd0aCkge1xuICAgIGNvbmZpZ3VyZVByb3BzKCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZFdoaXRlbGlzdGVkVUlQcm9wcyhwcm9wczogUmVjb3JkPHN0cmluZywgYm9vbGVhbj4pOiB2b2lkIHtcbiAgY29uc3Qgb2xkU2l6ZSA9IE9iamVjdC5rZXlzKFVJX1RIUkVBRF9QUk9QU19XSElURUxJU1QpLmxlbmd0aDtcbiAgVUlfVEhSRUFEX1BST1BTX1dISVRFTElTVCA9IHsgLi4uVUlfVEhSRUFEX1BST1BTX1dISVRFTElTVCwgLi4ucHJvcHMgfTtcbiAgaWYgKG9sZFNpemUgIT09IE9iamVjdC5rZXlzKFVJX1RIUkVBRF9QUk9QU19XSElURUxJU1QpLmxlbmd0aCkge1xuICAgIGNvbmZpZ3VyZVByb3BzKCk7XG4gIH1cbn1cblxuY29uc3QgUFJPQ0VTU0VEX1ZJRVdfTkFNRVMgPSBuZXcgU2V0KCk7XG5cbmludGVyZmFjZSBWaWV3Q29uZmlnIHtcbiAgdWlWaWV3Q2xhc3NOYW1lOiBzdHJpbmc7XG4gIHZhbGlkQXR0cmlidXRlczogUmVjb3JkPHN0cmluZywgdW5rbm93bj47XG59XG4vKipcbiAqIHVwZGF0ZXMgVUkgcHJvcHMgd2hpdGVsaXN0IGZvciBnaXZlbiB2aWV3IGhvc3QgaW5zdGFuY2VcbiAqIHRoaXMgd2lsbCB3b3JrIGp1c3Qgb25jZSBmb3IgZXZlcnkgdmlldyBuYW1lXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGFkYXB0Vmlld0NvbmZpZyh2aWV3Q29uZmlnOiBWaWV3Q29uZmlnKTogdm9pZCB7XG4gIGNvbnN0IHZpZXdOYW1lID0gdmlld0NvbmZpZy51aVZpZXdDbGFzc05hbWU7XG4gIGNvbnN0IHByb3BzID0gdmlld0NvbmZpZy52YWxpZEF0dHJpYnV0ZXM7XG5cbiAgLy8gdXBkYXRlIHdoaXRlbGlzdCBvZiBVSSBwcm9wcyBmb3IgdGhpcyB2aWV3IG5hbWUgb25seSBvbmNlXG4gIGlmICghUFJPQ0VTU0VEX1ZJRVdfTkFNRVMuaGFzKHZpZXdOYW1lKSkge1xuICAgIGNvbnN0IHByb3BzVG9BZGQ6IFJlY29yZDxzdHJpbmcsIGJvb2xlYW4+ID0ge307XG4gICAgT2JqZWN0LmtleXMocHJvcHMpLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgLy8gd2UgZG9uJ3Qgd2FudCB0byBhZGQgbmF0aXZlIHByb3BzIGFzIHRoZXkgYWZmZWN0IGxheW91dFxuICAgICAgLy8gd2UgYWxzbyBza2lwIHByb3BzIHdoaWNoIHJlcGVhdCBoZXJlXG4gICAgICBpZiAoXG4gICAgICAgICEoa2V5IGluIE5BVElWRV9USFJFQURfUFJPUFNfV0hJVEVMSVNUKSAmJlxuICAgICAgICAhKGtleSBpbiBVSV9USFJFQURfUFJPUFNfV0hJVEVMSVNUKVxuICAgICAgKSB7XG4gICAgICAgIHByb3BzVG9BZGRba2V5XSA9IHRydWU7XG4gICAgICB9XG4gICAgfSk7XG4gICAgYWRkV2hpdGVsaXN0ZWRVSVByb3BzKHByb3BzVG9BZGQpO1xuXG4gICAgUFJPQ0VTU0VEX1ZJ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