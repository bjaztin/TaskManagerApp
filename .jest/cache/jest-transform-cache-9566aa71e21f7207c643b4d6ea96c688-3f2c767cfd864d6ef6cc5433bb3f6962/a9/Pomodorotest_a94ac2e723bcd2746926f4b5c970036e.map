{"version":3,"names":["_getJestObj","mock","Audio","Sound","createAsync","jest","fn","vibrate","_interopRequireDefault","require","_react","_reactNative","_PomodoroScreen","_expoAv","_jsxRuntime","_require","describe","beforeEach","spyOn","mockResolvedValue","sound","test","_render","render","jsx","default","getByText","expect","toBeTruthy","_render2","getByTestId","toggleButton","fireEvent","press","timerValue","toBeDefined","_render3"],"sources":["Pomodoro.test.js"],"sourcesContent":["import React from \"react\";\nimport { render, fireEvent } from \"@testing-library/react-native\";\nimport PomodoroScreen from \"../../src/screens/PomodoroScreen\"; \nimport { Audio } from 'expo-av';\n\njest.mock(\"expo-av\", () => ({\n  Audio: {\n    Sound: {\n      createAsync: jest.fn(),\n    },\n  },\n}));\n\njest.mock(\"react-native/Libraries/Vibration/Vibration\", () => ({\n  vibrate: jest.fn(),\n}));\n\ndescribe(\"PomodoroScreen\", () => {\n  beforeEach(() => {\n    jest.spyOn(Audio.Sound, \"createAsync\").mockResolvedValue({ sound: {} });\n  });\n\n  test(\"renders the component correctly\", () => {\n    const { getByText } = render(<PomodoroScreen />);\n\n    expect(getByText(\"Focus\")).toBeTruthy();\n  });\n\n  test(\"toggles the timer when the play/pause button is pressed\", () => {\n    const { getByText, getByTestId } = render(<PomodoroScreen />);\n    const toggleButton = getByTestId(\"toggleButtons\");\n\n    fireEvent.press(toggleButton);\n\n    const timerValue = getByTestId(\"timerValue\");\n    expect(timerValue).toBeDefined();\n\n  });\n\n  test(\"resets the timer when the reset button is pressed\", () => {\n    const { getByTestId } = render(<PomodoroScreen />);\n\n    fireEvent.press(getByTestId(\"toggleButtons\")); \n\n    fireEvent.press(getByTestId(\"toggleButtons\")); \n\n   const timerValue = getByTestId(\"timerValue\");\n   expect(timerValue).toBeDefined();\n  });\n\n});\n"],"mappings":"AAKAA,WAAA,GAAKC,IAAI,CAAC,SAAS,EAAE;EAAA,OAAO;IAC1BC,KAAK,EAAE;MACLC,KAAK,EAAE;QACLC,WAAW,EAAEC,IAAI,CAACC,EAAE,CAAC;MACvB;IACF;EACF,CAAC;AAAA,CAAC,CAAC;AAEHN,WAAA,GAAKC,IAAI,CAAC,4CAA4C,EAAE;EAAA,OAAO;IAC7DM,OAAO,EAAEF,IAAI,CAACC,EAAE,CAAC;EACnB,CAAC;AAAA,CAAC,CAAC;AAAC,IAAAE,sBAAA,GAAAC,OAAA;AAfJ,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,eAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,OAAA,GAAAJ,OAAA;AAAgC,IAAAK,WAAA,GAAAL,OAAA;AAAA,SAAAT,YAAA;EAAA,IAAAe,QAAA,GAAAN,OAAA;IAAAJ,IAAA,GAAAU,QAAA,CAAAV,IAAA;EAAAL,WAAA,YAAAA,YAAA;IAAA,OAAAK,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAchCW,QAAQ,CAAC,gBAAgB,EAAE,YAAM;EAC/BC,UAAU,CAAC,YAAM;IACfZ,IAAI,CAACa,KAAK,CAAChB,aAAK,CAACC,KAAK,EAAE,aAAa,CAAC,CAACgB,iBAAiB,CAAC;MAAEC,KAAK,EAAE,CAAC;IAAE,CAAC,CAAC;EACzE,CAAC,CAAC;EAEFC,IAAI,CAAC,iCAAiC,EAAE,YAAM;IAC5C,IAAAC,OAAA,GAAsB,IAAAC,mBAAM,EAAC,IAAAT,WAAA,CAAAU,GAAA,EAACZ,eAAA,CAAAa,OAAc,IAAE,CAAC,CAAC;MAAxCC,SAAS,GAAAJ,OAAA,CAATI,SAAS;IAEjBC,MAAM,CAACD,SAAS,CAAC,OAAO,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;EACzC,CAAC,CAAC;EAEFP,IAAI,CAAC,yDAAyD,EAAE,YAAM;IACpE,IAAAQ,QAAA,GAAmC,IAAAN,mBAAM,EAAC,IAAAT,WAAA,CAAAU,GAAA,EAACZ,eAAA,CAAAa,OAAc,IAAE,CAAC,CAAC;MAArDC,SAAS,GAAAG,QAAA,CAATH,SAAS;MAAEI,WAAW,GAAAD,QAAA,CAAXC,WAAW;IAC9B,IAAMC,YAAY,GAAGD,WAAW,CAAC,eAAe,CAAC;IAEjDE,sBAAS,CAACC,KAAK,CAACF,YAAY,CAAC;IAE7B,IAAMG,UAAU,GAAGJ,WAAW,CAAC,YAAY,CAAC;IAC5CH,MAAM,CAACO,UAAU,CAAC,CAACC,WAAW,CAAC,CAAC;EAElC,CAAC,CAAC;EAEFd,IAAI,CAAC,mDAAmD,EAAE,YAAM;IAC9D,IAAAe,QAAA,GAAwB,IAAAb,mBAAM,EAAC,IAAAT,WAAA,CAAAU,GAAA,EAACZ,eAAA,CAAAa,OAAc,IAAE,CAAC,CAAC;MAA1CK,WAAW,GAAAM,QAAA,CAAXN,WAAW;IAEnBE,sBAAS,CAACC,KAAK,CAACH,WAAW,CAAC,eAAe,CAAC,CAAC;IAE7CE,sBAAS,CAACC,KAAK,CAACH,WAAW,CAAC,eAAe,CAAC,CAAC;IAE9C,IAAMI,UAAU,GAAGJ,WAAW,CAAC,YAAY,CAAC;IAC5CH,MAAM,CAACO,UAAU,CAAC,CAACC,WAAW,CAAC,CAAC;EACjC,CAAC,CAAC;AAEJ,CAAC,CAAC"}