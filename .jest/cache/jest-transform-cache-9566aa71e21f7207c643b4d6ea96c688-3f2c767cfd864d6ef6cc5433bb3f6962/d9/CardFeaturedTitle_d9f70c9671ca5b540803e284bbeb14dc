27bed5e03e291e338d1fe3fefb40eeb1
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _normalizeText = _interopRequireDefault(require("../helpers/normalizeText"));
var _config = require("../config");
var _Text = _interopRequireDefault(require("../text/Text"));
var _jsxRuntime = require("react/jsx-runtime");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var __rest = this && this.__rest || function (s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
var CardFeaturedTitle = function CardFeaturedTitle(_a) {
  var _b;
  var theme = _a.theme,
    style = _a.style,
    props = __rest(_a, ["theme", "style"]);
  return (0, _jsxRuntime.jsx)(_Text.default, _objectSpread({
    style: _reactNative.StyleSheet.flatten([Object.assign({
      fontSize: (0, _normalizeText.default)(18),
      marginBottom: 8,
      color: (_b = theme === null || theme === void 0 ? void 0 : theme.colors) === null || _b === void 0 ? void 0 : _b.white
    }, _reactNative.Platform.select({
      android: Object.assign({}, _config.fonts.android.black),
      default: {
        fontWeight: '800'
      }
    })), style])
  }, props));
};
var _default = (0, _config.withTheme)(CardFeaturedTitle, 'CardFeaturedTitle');
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9ub3JtYWxpemVUZXh0IiwiX2NvbmZpZyIsIl9UZXh0IiwiX2pzeFJ1bnRpbWUiLCJvd25LZXlzIiwiZSIsInIiLCJ0IiwiT2JqZWN0Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsIm8iLCJmaWx0ZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwicHVzaCIsImFwcGx5IiwiX29iamVjdFNwcmVhZCIsImFyZ3VtZW50cyIsImxlbmd0aCIsImZvckVhY2giLCJfZGVmaW5lUHJvcGVydHkyIiwiZGVmYXVsdCIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZGVmaW5lUHJvcGVydHkiLCJfX3Jlc3QiLCJzIiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImluZGV4T2YiLCJpIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJDYXJkRmVhdHVyZWRUaXRsZSIsIl9hIiwiX2IiLCJ0aGVtZSIsInN0eWxlIiwicHJvcHMiLCJqc3giLCJTdHlsZVNoZWV0IiwiZmxhdHRlbiIsImFzc2lnbiIsImZvbnRTaXplIiwibm9ybWFsaXplIiwibWFyZ2luQm90dG9tIiwiY29sb3IiLCJjb2xvcnMiLCJ3aGl0ZSIsIlBsYXRmb3JtIiwic2VsZWN0IiwiYW5kcm9pZCIsImZvbnRzIiwiYmxhY2siLCJmb250V2VpZ2h0IiwiX2RlZmF1bHQiLCJ3aXRoVGhlbWUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiQ2FyZEZlYXR1cmVkVGl0bGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fcmVzdCA9ICh0aGlzICYmIHRoaXMuX19yZXN0KSB8fCBmdW5jdGlvbiAocywgZSkge1xuICAgIHZhciB0ID0ge307XG4gICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApICYmIGUuaW5kZXhPZihwKSA8IDApXG4gICAgICAgIHRbcF0gPSBzW3BdO1xuICAgIGlmIChzICE9IG51bGwgJiYgdHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09IFwiZnVuY3Rpb25cIilcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIHAgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHMpOyBpIDwgcC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGUuaW5kZXhPZihwW2ldKSA8IDAgJiYgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHMsIHBbaV0pKVxuICAgICAgICAgICAgICAgIHRbcFtpXV0gPSBzW3BbaV1dO1xuICAgICAgICB9XG4gICAgcmV0dXJuIHQ7XG59O1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFBsYXRmb3JtLCBTdHlsZVNoZWV0IH0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCBub3JtYWxpemUgZnJvbSAnLi4vaGVscGVycy9ub3JtYWxpemVUZXh0JztcbmltcG9ydCB7IGZvbnRzLCB3aXRoVGhlbWUgfSBmcm9tICcuLi9jb25maWcnO1xuaW1wb3J0IFRleHQgZnJvbSAnLi4vdGV4dC9UZXh0JztcbmNvbnN0IENhcmRGZWF0dXJlZFRpdGxlID0gKF9hKSA9PiB7XG4gICAgdmFyIF9iO1xuICAgIHZhciB7IHRoZW1lLCBzdHlsZSB9ID0gX2EsIHByb3BzID0gX19yZXN0KF9hLCBbXCJ0aGVtZVwiLCBcInN0eWxlXCJdKTtcbiAgICByZXR1cm4gKDxUZXh0IHN0eWxlPXtTdHlsZVNoZWV0LmZsYXR0ZW4oW1xuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbih7IGZvbnRTaXplOiBub3JtYWxpemUoMTgpLCBtYXJnaW5Cb3R0b206IDgsIGNvbG9yOiAoX2IgPSB0aGVtZSA9PT0gbnVsbCB8fCB0aGVtZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogdGhlbWUuY29sb3JzKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Iud2hpdGUgfSwgUGxhdGZvcm0uc2VsZWN0KHtcbiAgICAgICAgICAgICAgICBhbmRyb2lkOiBPYmplY3QuYXNzaWduKHt9LCBmb250cy5hbmRyb2lkLmJsYWNrKSxcbiAgICAgICAgICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6ICc4MDAnLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9KSksXG4gICAgICAgICAgICBzdHlsZSxcbiAgICAgICAgXSl9IHsuLi5wcm9wc30vPik7XG59O1xuZXhwb3J0IGRlZmF1bHQgd2l0aFRoZW1lKENhcmRGZWF0dXJlZFRpdGxlLCAnQ2FyZEZlYXR1cmVkVGl0bGUnKTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBV0EsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsY0FBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUcsT0FBQSxHQUFBSCxPQUFBO0FBQ0EsSUFBQUksS0FBQSxHQUFBTCxzQkFBQSxDQUFBQyxPQUFBO0FBQWdDLElBQUFLLFdBQUEsR0FBQUwsT0FBQTtBQUFBLFNBQUFNLFFBQUFDLENBQUEsRUFBQUMsQ0FBQSxRQUFBQyxDQUFBLEdBQUFDLE1BQUEsQ0FBQUMsSUFBQSxDQUFBSixDQUFBLE9BQUFHLE1BQUEsQ0FBQUUscUJBQUEsUUFBQUMsQ0FBQSxHQUFBSCxNQUFBLENBQUFFLHFCQUFBLENBQUFMLENBQUEsR0FBQUMsQ0FBQSxLQUFBSyxDQUFBLEdBQUFBLENBQUEsQ0FBQUMsTUFBQSxXQUFBTixDQUFBLFdBQUFFLE1BQUEsQ0FBQUssd0JBQUEsQ0FBQVIsQ0FBQSxFQUFBQyxDQUFBLEVBQUFRLFVBQUEsT0FBQVAsQ0FBQSxDQUFBUSxJQUFBLENBQUFDLEtBQUEsQ0FBQVQs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