3b540f4e604a40f0e0b26e1a6537a7ca
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.PAGES_COUNT = exports.NEAR_EDGE_THRESHOLD = exports.INITIAL_PAGE = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _inRange = _interopRequireDefault(require("lodash/inRange"));
var _times = _interopRequireDefault(require("lodash/times"));
var _debounce = _interopRequireDefault(require("lodash/debounce"));
var _constants = _interopRequireDefault(require("../commons/constants"));
var _dateutils = require("../dateutils");
var PAGES_COUNT = 100;
exports.PAGES_COUNT = PAGES_COUNT;
var NEAR_EDGE_THRESHOLD = 10;
exports.NEAR_EDGE_THRESHOLD = NEAR_EDGE_THRESHOLD;
var INITIAL_PAGE = Math.floor(PAGES_COUNT / 2);
exports.INITIAL_PAGE = INITIAL_PAGE;
var UseTimelinePages = function UseTimelinePages(_ref) {
  var date = _ref.date,
    listRef = _ref.listRef,
    numberOfDays = _ref.numberOfDays;
  var pagesRef = (0, _react.useRef)((0, _times.default)(PAGES_COUNT, function (i) {
    return (0, _dateutils.generateDay)(date, numberOfDays * (i - Math.floor(PAGES_COUNT / 2)));
  }));
  var _useState = (0, _react.useState)(pagesRef.current),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    pages = _useState2[0],
    setPages = _useState2[1];
  var shouldResetPages = (0, _react.useRef)(false);
  (0, _react.useEffect)(function () {
    var updatedDays = (0, _times.default)(PAGES_COUNT, function (i) {
      return (0, _dateutils.generateDay)(date, numberOfDays * (i - Math.floor(PAGES_COUNT / 2)));
    });
    pagesRef.current = updatedDays;
    setPages(updatedDays);
  }, [numberOfDays]);
  var isOutOfRange = (0, _react.useCallback)(function (index) {
    return !(0, _inRange.default)(index, 0, PAGES_COUNT);
  }, []);
  var isNearEdges = (0, _react.useCallback)(function (index) {
    return !(0, _inRange.default)(index, NEAR_EDGE_THRESHOLD, PAGES_COUNT - NEAR_EDGE_THRESHOLD);
  }, []);
  var isOnEdgePages = (0, _react.useCallback)(function (index) {
    return !(0, _inRange.default)(index, 1, PAGES_COUNT - 1);
  }, []);
  var scrollToPage = function scrollToPage(pageIndex) {
    var _listRef$current;
    (_listRef$current = listRef.current) == null ? void 0 : _listRef$current.scrollToOffset(pageIndex * _constants.default.screenWidth, 0, false);
  };
  var resetPages = function resetPages(date) {
    pagesRef.current = (0, _times.default)(PAGES_COUNT, function (i) {
      return (0, _dateutils.generateDay)(date, numberOfDays * (i - Math.floor(PAGES_COUNT / 2)));
    });
    setPages(pagesRef.current);
    setTimeout(function () {
      scrollToPage(INITIAL_PAGE);
      shouldResetPages.current = false;
    }, 0);
  };
  return {
    resetPages: (0, _react.useCallback)(resetPages, []),
    resetPagesDebounce: (0, _react.useCallback)((0, _debounce.default)(resetPages, 500, {
      leading: false,
      trailing: true
    }), []),
    scrollToPage: (0, _react.useCallback)(scrollToPage, []),
    scrollToPageDebounce: (0, _react.useCallback)((0, _debounce.default)(scrollToPage, 250, {
      leading: false,
      trailing: true
    }), []),
    pagesRef: pagesRef,
    pages: pages,
    shouldResetPages: shouldResetPages,
    isOutOfRange: isOutOfRange,
    isNearEdges: isNearEdges,
    isOnEdgePages: isOnEdgePages
  };
};
var _default = UseTimelinePages;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiX2luUmFuZ2UiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX3RpbWVzIiwiX2RlYm91bmNlIiwiX2NvbnN0YW50cyIsIl9kYXRldXRpbHMiLCJQQUdFU19DT1VOVCIsImV4cG9ydHMiLCJORUFSX0VER0VfVEhSRVNIT0xEIiwiSU5JVElBTF9QQUdFIiwiTWF0aCIsImZsb29yIiwiVXNlVGltZWxpbmVQYWdlcyIsIl9yZWYiLCJkYXRlIiwibGlzdFJlZiIsIm51bWJlck9mRGF5cyIsInBhZ2VzUmVmIiwidXNlUmVmIiwidGltZXMiLCJpIiwiZ2VuZXJhdGVEYXkiLCJfdXNlU3RhdGUiLCJ1c2VTdGF0ZSIsImN1cnJlbnQiLCJfdXNlU3RhdGUyIiwiX3NsaWNlZFRvQXJyYXkyIiwiZGVmYXVsdCIsInBhZ2VzIiwic2V0UGFnZXMiLCJzaG91bGRSZXNldFBhZ2VzIiwidXNlRWZmZWN0IiwidXBkYXRlZERheXMiLCJpc091dE9mUmFuZ2UiLCJ1c2VDYWxsYmFjayIsImluZGV4IiwiaW5SYW5nZSIsImlzTmVhckVkZ2VzIiwiaXNPbkVkZ2VQYWdlcyIsInNjcm9sbFRvUGFnZSIsInBhZ2VJbmRleCIsIl9saXN0UmVmJGN1cnJlbnQiLCJzY3JvbGxUb09mZnNldCIsImNvbnN0YW50cyIsInNjcmVlbldpZHRoIiwicmVzZXRQYWdlcyIsInNldFRpbWVvdXQiLCJyZXNldFBhZ2VzRGVib3VuY2UiLCJkZWJvdW5jZSIsImxlYWRpbmciLCJ0cmFpbGluZyIsInNjcm9sbFRvUGFnZURlYm91bmNlIiwiX2RlZmF1bHQiXSwic291cmNlcyI6WyJ1c2VUaW1lbGluZVBhZ2VzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgaW5SYW5nZSBmcm9tICdsb2Rhc2gvaW5SYW5nZSc7XG5pbXBvcnQgdGltZXMgZnJvbSAnbG9kYXNoL3RpbWVzJztcbmltcG9ydCBkZWJvdW5jZSBmcm9tICdsb2Rhc2gvZGVib3VuY2UnO1xuaW1wb3J0IGNvbnN0YW50cyBmcm9tICcuLi9jb21tb25zL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBnZW5lcmF0ZURheSB9IGZyb20gJy4uL2RhdGV1dGlscyc7XG5leHBvcnQgY29uc3QgUEFHRVNfQ09VTlQgPSAxMDA7XG5leHBvcnQgY29uc3QgTkVBUl9FREdFX1RIUkVTSE9MRCA9IDEwO1xuZXhwb3J0IGNvbnN0IElOSVRJQUxfUEFHRSA9IE1hdGguZmxvb3IoUEFHRVNfQ09VTlQgLyAyKTtcbmNvbnN0IFVzZVRpbWVsaW5lUGFnZXMgPSAoeyBkYXRlLCBsaXN0UmVmLCBudW1iZXJPZkRheXMgfSkgPT4ge1xuICAgIGNvbnN0IHBhZ2VzUmVmID0gdXNlUmVmKHRpbWVzKFBBR0VTX0NPVU5ULCBpID0+IHtcbiAgICAgICAgcmV0dXJuIGdlbmVyYXRlRGF5KGRhdGUsIG51bWJlck9mRGF5cyAqIChpIC0gTWF0aC5mbG9vcihQQUdFU19DT1VOVCAvIDIpKSk7XG4gICAgfSkpO1xuICAgIGNvbnN0IFtwYWdlcywgc2V0UGFnZXNdID0gdXNlU3RhdGUocGFnZXNSZWYuY3VycmVudCk7XG4gICAgY29uc3Qgc2hvdWxkUmVzZXRQYWdlcyA9IHVzZVJlZihmYWxzZSk7XG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgY29uc3QgdXBkYXRlZERheXMgPSB0aW1lcyhQQUdFU19DT1VOVCwgaSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gZ2VuZXJhdGVEYXkoZGF0ZSwgbnVtYmVyT2ZEYXlzICogKGkgLSBNYXRoLmZsb29yKFBBR0VTX0NPVU5UIC8gMikpKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHBhZ2VzUmVmLmN1cnJlbnQgPSB1cGRhdGVkRGF5cztcbiAgICAgICAgc2V0UGFnZXModXBkYXRlZERheXMpO1xuICAgIH0sIFtudW1iZXJPZkRheXNdKTtcbiAgICBjb25zdCBpc091dE9mUmFuZ2UgPSB1c2VDYWxsYmFjaygoaW5kZXgpID0+IHtcbiAgICAgICAgcmV0dXJuICFpblJhbmdlKGluZGV4LCAwLCBQQUdFU19DT1VOVCk7XG4gICAgfSwgW10pO1xuICAgIGNvbnN0IGlzTmVhckVkZ2VzID0gdXNlQ2FsbGJhY2soaW5kZXggPT4ge1xuICAgICAgICByZXR1cm4gIWluUmFuZ2UoaW5kZXgsIE5FQVJfRURHRV9USFJFU0hPTEQsIFBBR0VTX0NPVU5UIC0gTkVBUl9FREdFX1RIUkVTSE9MRCk7XG4gICAgfSwgW10pO1xuICAgIGNvbnN0IGlzT25FZGdlUGFnZXMgPSB1c2VDYWxsYmFjayhpbmRleCA9PiB7XG4gICAgICAgIHJldHVybiAhaW5SYW5nZShpbmRleCwgMSwgUEFHRVNfQ09VTlQgLSAxKTtcbiAgICB9LCBbXSk7XG4gICAgY29uc3Qgc2Nyb2xsVG9QYWdlID0gKHBhZ2VJbmRleCkgPT4ge1xuICAgICAgICBsaXN0UmVmLmN1cnJlbnQ/LnNjcm9sbFRvT2Zmc2V0KHBhZ2VJbmRleCAqIGNvbnN0YW50cy5zY3JlZW5XaWR0aCwgMCwgZmFsc2UpO1xuICAgIH07XG4gICAgY29uc3QgcmVzZXRQYWdlcyA9IChkYXRlKSA9PiB7XG4gICAgICAgIHBhZ2VzUmVmLmN1cnJlbnQgPSB0aW1lcyhQQUdFU19DT1VOVCwgaSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gZ2VuZXJhdGVEYXkoZGF0ZSwgbnVtYmVyT2ZEYXlzICogKGkgLSBNYXRoLmZsb29yKFBBR0VTX0NPVU5UIC8gMikpKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHNldFBhZ2VzKHBhZ2VzUmVmLmN1cnJlbnQpO1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHNjcm9sbFRvUGFnZShJTklUSUFMX1BBR0UpO1xuICAgICAgICAgICAgc2hvdWxkUmVzZXRQYWdlcy5jdXJyZW50ID0gZmFsc2U7XG4gICAgICAgIH0sIDApO1xuICAgIH07XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcmVzZXRQYWdlczogdXNlQ2FsbGJhY2socmVzZXRQYWdlcywgW10pLFxuICAgICAgICByZXNldFBhZ2VzRGVib3VuY2U6IHVzZUNhbGxiYWNrKGRlYm91bmNlKHJlc2V0UGFnZXMsIDUwMCwgeyBsZWFkaW5nOiBmYWxzZSwgdHJhaWxpbmc6IHRydWUgfSksIFtdKSxcbiAgICAgICAgc2Nyb2xsVG9QYWdlOiB1c2VDYWxsYmFjayhzY3JvbGxUb1BhZ2UsIFtdKSxcbiAgICAgICAgc2Nyb2xsVG9QYWdlRGVib3VuY2U6IHVzZUNhbGxiYWNrKGRlYm91bmNlKHNjcm9sbFRvUGFnZSwgMjUwLCB7IGxlYWRpbmc6IGZhbHNlLCB0cmFpbGluZzogdHJ1ZSB9KSwgW10pLFxuICAgICAgICBwYWdlc1JlZixcbiAgICAgICAgcGFnZXMsXG4gICAgICAgIHNob3VsZFJlc2V0UGFnZXMsXG4gICAgICAgIGlzT3V0T2ZSYW5nZSxcbiAgICAgICAgaXNOZWFyRWRnZXMsXG4gICAgICAgIGlzT25FZGdlUGFnZXNcbiAgICB9O1xufTtcbmV4cG9ydCBkZWZhdWx0IFVzZVRpbWVsaW5lUGFnZXM7XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLFFBQUEsR0FBQUMsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFHLE1BQUEsR0FBQUQsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFJLFNBQUEsR0FBQUYsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFLLFVBQUEsR0FBQUgsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFNLFVBQUEsR0FBQU4sT0FBQTtBQUNPLElBQU1PLFdBQVcsR0FBRyxHQUFHO0FBQUNDLE9BQUEsQ0FBQUQsV0FBQSxHQUFBQSxXQUFBO0FBQ3hCLElBQU1FLG1CQUFtQixHQUFHLEVBQUU7QUFBQ0QsT0FBQSxDQUFBQyxtQkFBQSxHQUFBQSxtQkFBQTtBQUMvQixJQUFNQyxZQUFZLEdBQUdDLElBQUksQ0FBQ0MsS0FBSyxDQUFDTCxXQUFXLEdBQUcsQ0FBQyxDQUFDO0FB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