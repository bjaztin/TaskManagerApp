6606b5f43f77b08a3ffe0d225996bd05
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.areDependenciesEqual = areDependenciesEqual;
exports.buildDependencies = buildDependencies;
exports.buildWorkletsHash = buildWorkletsHash;
exports.hasColorProps = hasColorProps;
exports.shallowEqual = exports.parseColors = exports.isAnimated = void 0;
exports.useEvent = useEvent;
exports.useHandler = useHandler;
exports.validateAnimatedStyles = void 0;
var _react = require("react");
var _Colors = require("../Colors");
var _core = require("../core");
var _PlatformChecker = require("../PlatformChecker");
var _UpdateProps = require("../UpdateProps");
var _WorkletEventHandler = _interopRequireDefault(require("../WorkletEventHandler"));
function useEvent(handler) {
  var eventNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  var rebuild = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var initRef = (0, _react.useRef)(null);
  if (initRef.current === null) {
    initRef.current = new _WorkletEventHandler.default(handler, eventNames);
  } else if (rebuild) {
    initRef.current.updateWorklet(handler);
  }
  return initRef;
}
function useHandler(handlers, dependencies) {
  var initRef = (0, _react.useRef)(null);
  if (initRef.current === null) {
    initRef.current = {
      context: (0, _core.makeRemote)({}),
      savedDependencies: []
    };
  }
  (0, _react.useEffect)(function () {
    return function () {
      initRef.current = null;
    };
  }, []);
  var _initRef$current = initRef.current,
    context = _initRef$current.context,
    savedDependencies = _initRef$current.savedDependencies;
  dependencies = buildDependencies(dependencies, handlers);
  var doDependenciesDiffer = !areDependenciesEqual(dependencies, savedDependencies);
  initRef.current.savedDependencies = dependencies;
  var useWeb = (0, _PlatformChecker.isWeb)() || (0, _PlatformChecker.isJest)();
  return {
    context: context,
    doDependenciesDiffer: doDependenciesDiffer,
    useWeb: useWeb
  };
}
function buildWorkletsHash(handlers) {
  return Object.values(handlers).reduce(function (acc, worklet) {
    return acc + worklet.__workletHash.toString();
  }, '');
}
function buildDependencies(dependencies, handlers) {
  var handlersList = Object.values(handlers).filter(function (handler) {
    return handler !== undefined;
  });
  if (!dependencies) {
    dependencies = handlersList.map(function (handler) {
      return {
        workletHash: handler.__workletHash,
        closure: handler._closure
      };
    });
  } else {
    dependencies.push(buildWorkletsHash(handlersList));
  }
  return dependencies;
}
function areDependenciesEqual(nextDeps, prevDeps) {
  function is(x, y) {
    return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;
  }
  var objectIs = typeof Object.is === 'function' ? Object.is : is;
  function areHookInputsEqual(nextDeps, prevDeps) {
    if (!nextDeps || !prevDeps || prevDeps.length !== nextDeps.length) {
      return false;
    }
    for (var i = 0; i < prevDeps.length; ++i) {
      if (!objectIs(nextDeps[i], prevDeps[i])) {
        return false;
      }
    }
    return true;
  }
  return areHookInputsEqual(nextDeps, prevDeps);
}
function hasColorProps(updates) {
  var colorPropsSet = new Set(_UpdateProps.colorProps);
  for (var key in updates) {
    if (colorPropsSet.has(key)) {
      return true;
    }
  }
  return false;
}
var _worklet_8121541645519_init_data = {
  code: "function parseColors(updates) {\n  const {\n    colorProps,\n    processColor\n  } = this._closure;\n  for (const key in updates) {\n    if (colorProps.indexOf(key) !== -1) {\n      const processedColor = processColor(updates[key]);\n      if (processedColor !== undefined) {\n        updates[key] = processedColor;\n      }\n    }\n  }\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/utils.js",
  sourceMap: "{\"version\":3,\"names\":[\"parseColors\",\"updates\",\"colorProps\",\"processColor\",\"_closure\",\"key\",\"indexOf\",\"processedColor\",\"undefined\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/utils.js\"],\"mappings\":\"AAmGO,SAAAA,WAASA,CAAYC,OAAA,EAAO;EAAA;IAAAC,UAAA;IAAAC;EAAA,SAAAC,QAAA;EAGjC,KAAK,MAAMC,GAAG,IAAIJ,OAAO,EAAE;IACzB,IAAIC,UAAU,CAACI,OAAO,CAACD,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;MAGlC,MAAME,cAAc,GAAGJ,YAAY,CAACF,OAAO,CAACI,GAAG,CAAC,CAAC;MACjD,IAAIE,cAAc,KAAKC,SAAS,EAAE;QAChCP,OAAO,CAACI,GAAG,CAAC,GAAGE,cAAc;MAC/B;IACF;EACF;AACF\"}"
};
var parseColors = function () {
  var _e = [new global.Error(), -3, -27];
  var _f = function _f(updates) {
    for (var key in updates) {
      if (_UpdateProps.colorProps.indexOf(key) !== -1) {
        var processedColor = (0, _Colors.processColor)(updates[key]);
        if (processedColor !== undefined) {
          updates[key] = processedColor;
        }
      }
    }
  };
  _f._closure = {
    colorProps: _UpdateProps.colorProps,
    processColor: _Colors.processColor
  };
  _f.__initData = _worklet_8121541645519_init_data;
  _f.__workletHash = 8121541645519;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
exports.parseColors = parseColors;
var _worklet_12264987021575_init_data = {
  code: "function isAnimated(prop) {\n  const isAnimated = this._recur;\n  if (Array.isArray(prop)) {\n    return prop.some(isAnimated);\n  } else if (typeof prop === 'object') {\n    if (prop.onFrame !== undefined) {\n      return true;\n    } else {\n      return Object.values(prop).some(isAnimated);\n    }\n  }\n  return false;\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/utils.js",
  sourceMap: "{\"version\":3,\"names\":[\"isAnimated\",\"prop\",\"_recur\",\"Array\",\"isArray\",\"some\",\"onFrame\",\"undefined\",\"Object\",\"values\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/utils.js\"],\"mappings\":\"AAiHO,SAAAA,UAASA,CAAWC,IAAA,EAAI;EAAA,MAAAD,UAAA,QAAAE,MAAA;EAG7B,IAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;IACvB,OAAOA,IAAI,CAACI,IAAI,CAACL,UAAU,CAAC;EAC9B,CAAC,MAAM,IAAI,OAAOC,IAAI,KAAK,QAAQ,EAAE;IACnC,IAAIA,IAAI,CAACK,OAAO,KAAKC,SAAS,EAAE;MAC9B,OAAO,IAAI;IACb,CAAC,MAAM;MACL,OAAOC,MAAM,CAACC,MAAM,CAACR,IAAI,CAAC,CAACI,IAAI,CAACL,UAAU,CAAC;IAC7C;EACF;EACA,OAAO,KAAK;AACd\"}"
};
var isAnimated = function () {
  var _e = [new global.Error(), 1, -27];
  var _f = function _f(prop) {
    if (Array.isArray(prop)) {
      return prop.some(isAnimated);
    } else if (typeof prop === 'object') {
      if (prop.onFrame !== undefined) {
        return true;
      } else {
        return Object.values(prop).some(isAnimated);
      }
    }
    return false;
  };
  _f._closure = {};
  _f.__initData = _worklet_12264987021575_init_data;
  _f.__workletHash = 12264987021575;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
exports.isAnimated = isAnimated;
var _worklet_12514986757802_init_data = {
  code: "function shallowEqual(a, b) {\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n  for (let i = 0; i < aKeys.length; i++) {\n    if (a[aKeys[i]] !== b[aKeys[i]]) {\n      return false;\n    }\n  }\n  return true;\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/utils.js",
  sourceMap: "{\"version\":3,\"names\":[\"shallowEqual\",\"a\",\"b\",\"aKeys\",\"Object\",\"keys\",\"bKeys\",\"length\",\"i\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/utils.js\"],\"mappings\":\"AA+HO,SAAAA,YAASA,CAAaC,CAAC,EAAAC,CAAG;EAG/B,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACJ,CAAC,CAAC;EAC5B,MAAMK,KAAK,GAAGF,MAAM,CAACC,IAAI,CAACH,CAAC,CAAC;EAC5B,IAAIC,KAAK,CAACI,MAAM,KAAKD,KAAK,CAACC,MAAM,EAAE;IACjC,OAAO,KAAK;EACd;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,KAAK,CAACI,MAAM,EAAEC,CAAC,EAAE,EAAE;IACrC,IAAIP,CAAC,CAACE,KAAK,CAACK,CAAC,CAAC,CAAC,KAAKN,CAAC,CAACC,KAAK,CAACK,CAAC,CAAC,CAAC,EAAE;MAC/B,OAAO,KAAK;IACd;EACF;EACA,OAAO,IAAI;AACb\"}"
};
var shallowEqual = function () {
  var _e = [new global.Error(), 1, -27];
  var _f = function _f(a, b) {
    var aKeys = Object.keys(a);
    var bKeys = Object.keys(b);
    if (aKeys.length !== bKeys.length) {
      return false;
    }
    for (var i = 0; i < aKeys.length; i++) {
      if (a[aKeys[i]] !== b[aKeys[i]]) {
        return false;
      }
    }
    return true;
  };
  _f._closure = {};
  _f.__initData = _worklet_12514986757802_init_data;
  _f.__workletHash = 12514986757802;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
exports.shallowEqual = shallowEqual;
var _worklet_3218322548441_init_data = {
  code: "function anonymous(styles) {\n  if (typeof styles !== 'object') {\n    throw new Error(\"useAnimatedStyle has to return an object, found \" + typeof styles + \" instead\");\n  } else if (Array.isArray(styles)) {\n    throw new Error('useAnimatedStyle has to return an object and cannot return static styles combined with dynamic ones. Please do merging where a component receives props.');\n  }\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/utils.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"styles\",\"Error\",\"Array\",\"isArray\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/hook/utils.js\"],\"mappings\":\"AA8IsC,SAAAA,SAAMA,CAAIC,MAAA;EAG9C,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IAC9B,MAAM,IAAIC,KAAK,sDAAoD,OAAOD,MAAO,aAAS,CAAC;EAC7F,CAAC,MAAM,IAAIE,KAAK,CAACC,OAAO,CAACH,MAAM,CAAC,EAAE;IAChC,MAAM,IAAIC,KAAK,CAAC,0JAA0J,CAAC;EAC7K;AACF\"}"
};
var validateAnimatedStyles = function () {
  var _e = [new global.Error(), 1, -27];
  var _f = function _f(styles) {
    if (typeof styles !== 'object') {
      throw new Error(`useAnimatedStyle has to return an object, found ${typeof styles} instead`);
    } else if (Array.isArray(styles)) {
      throw new Error('useAnimatedStyle has to return an object and cannot return static styles combined with dynamic ones. Please do merging where a component receives props.');
    }
  };
  _f._closure = {};
  _f.__initData = _worklet_3218322548441_init_data;
  _f.__workletHash = 3218322548441;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
exports.validateAnimatedStyles = validateAnimatedStyles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,