{"version":3,"names":["_interopRequireDefault","require","_defineProperty2","_slicedToArray2","_classCallCheck2","_createClass2","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","default","getOwnPropertyDescriptors","defineProperties","defineProperty","invariant","ViewabilityHelper","config","undefined","viewAreaCoveragePercentThreshold","_hasInteracted","_timers","Set","_viewableIndices","_viewableItems","Map","_config","key","value","dispose","clearTimeout","computeViewableItems","props","scrollOffset","viewportHeight","getFrameMetrics","renderRange","itemCount","getItemCount","data","_this$_config","itemVisiblePercentThreshold","viewAreaMode","viewablePercentThreshold","viewableIndices","firstVisible","_ref","first","last","console","warn","JSON","stringify","idx","metrics","top","offset","bottom","_isViewable","onUpdate","createViewToken","onViewableItemsChanged","_this","waitForInteraction","every","v","ii","minimumViewTime","handle","setTimeout","delete","_onUpdateSync","add","resetViewableIndices","recordInteraction","viewableIndicesToCheck","_this2","includes","prevItems","nextItems","map","viewable","changed","_ref2","_ref3","has","_ref4","_ref5","isViewable","viewableItems","Array","from","values","viewabilityConfig","itemLength","_isEntirelyVisible","pixels","_getPixelsVisible","percent","visibleHeight","Math","min","max","module","exports"],"sources":["ViewabilityHelper.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {FrameMetricProps} from './VirtualizedListProps';\n\nconst invariant = require('invariant');\n\nexport type ViewToken = {\n  item: any,\n  key: string,\n  index: ?number,\n  isViewable: boolean,\n  section?: any,\n  ...\n};\n\nexport type ViewabilityConfigCallbackPair = {\n  viewabilityConfig: ViewabilityConfig,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  ...\n};\n\nexport type ViewabilityConfig = {|\n  /**\n   * Minimum amount of time (in milliseconds) that an item must be physically viewable before the\n   * viewability callback will be fired. A high number means that scrolling through content without\n   * stopping will not mark the content as viewable.\n   */\n  minimumViewTime?: number,\n\n  /**\n   * Percent of viewport that must be covered for a partially occluded item to count as\n   * \"viewable\", 0-100. Fully visible items are always considered viewable. A value of 0 means\n   * that a single pixel in the viewport makes the item viewable, and a value of 100 means that\n   * an item must be either entirely visible or cover the entire viewport to count as viewable.\n   */\n  viewAreaCoveragePercentThreshold?: number,\n\n  /**\n   * Similar to `viewAreaPercentThreshold`, but considers the percent of the item that is visible,\n   * rather than the fraction of the viewable area it covers.\n   */\n  itemVisiblePercentThreshold?: number,\n\n  /**\n   * Nothing is considered viewable until the user scrolls or `recordInteraction` is called after\n   * render.\n   */\n  waitForInteraction?: boolean,\n|};\n\n/**\n * A Utility class for calculating viewable items based on current metrics like scroll position and\n * layout.\n *\n * An item is said to be in a \"viewable\" state when any of the following\n * is true for longer than `minimumViewTime` milliseconds (after an interaction if `waitForInteraction`\n * is true):\n *\n * - Occupying >= `viewAreaCoveragePercentThreshold` of the view area XOR fraction of the item\n *   visible in the view area >= `itemVisiblePercentThreshold`.\n * - Entirely visible on screen\n */\nclass ViewabilityHelper {\n  _config: ViewabilityConfig;\n  _hasInteracted: boolean = false;\n  _timers: Set<number> = new Set();\n  _viewableIndices: Array<number> = [];\n  _viewableItems: Map<string, ViewToken> = new Map();\n\n  constructor(\n    config: ViewabilityConfig = {viewAreaCoveragePercentThreshold: 0},\n  ) {\n    this._config = config;\n  }\n\n  /**\n   * Cleanup, e.g. on unmount. Clears any pending timers.\n   */\n  dispose() {\n    /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n     * comment suppresses an error found when Flow v0.63 was deployed. To see\n     * the error delete this comment and run Flow. */\n    this._timers.forEach(clearTimeout);\n  }\n\n  /**\n   * Determines which items are viewable based on the current metrics and config.\n   */\n  computeViewableItems(\n    props: FrameMetricProps,\n    scrollOffset: number,\n    viewportHeight: number,\n    getFrameMetrics: (\n      index: number,\n      props: FrameMetricProps,\n    ) => ?{\n      length: number,\n      offset: number,\n      ...\n    },\n    // Optional optimization to reduce the scan size\n    renderRange?: {\n      first: number,\n      last: number,\n      ...\n    },\n  ): Array<number> {\n    const itemCount = props.getItemCount(props.data);\n    const {itemVisiblePercentThreshold, viewAreaCoveragePercentThreshold} =\n      this._config;\n    const viewAreaMode = viewAreaCoveragePercentThreshold != null;\n    const viewablePercentThreshold = viewAreaMode\n      ? viewAreaCoveragePercentThreshold\n      : itemVisiblePercentThreshold;\n    invariant(\n      viewablePercentThreshold != null &&\n        (itemVisiblePercentThreshold != null) !==\n          (viewAreaCoveragePercentThreshold != null),\n      'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold',\n    );\n    const viewableIndices = [];\n    if (itemCount === 0) {\n      return viewableIndices;\n    }\n    let firstVisible = -1;\n    const {first, last} = renderRange || {first: 0, last: itemCount - 1};\n    if (last >= itemCount) {\n      console.warn(\n        'Invalid render range computing viewability ' +\n          JSON.stringify({renderRange, itemCount}),\n      );\n      return [];\n    }\n    for (let idx = first; idx <= last; idx++) {\n      const metrics = getFrameMetrics(idx, props);\n      if (!metrics) {\n        continue;\n      }\n      const top = metrics.offset - scrollOffset;\n      const bottom = top + metrics.length;\n      if (top < viewportHeight && bottom > 0) {\n        firstVisible = idx;\n        if (\n          _isViewable(\n            viewAreaMode,\n            viewablePercentThreshold,\n            top,\n            bottom,\n            viewportHeight,\n            metrics.length,\n          )\n        ) {\n          viewableIndices.push(idx);\n        }\n      } else if (firstVisible >= 0) {\n        break;\n      }\n    }\n    return viewableIndices;\n  }\n\n  /**\n   * Figures out which items are viewable and how that has changed from before and calls\n   * `onViewableItemsChanged` as appropriate.\n   */\n  onUpdate(\n    props: FrameMetricProps,\n    scrollOffset: number,\n    viewportHeight: number,\n    getFrameMetrics: (\n      index: number,\n      props: FrameMetricProps,\n    ) => ?{\n      length: number,\n      offset: number,\n      ...\n    },\n    createViewToken: (\n      index: number,\n      isViewable: boolean,\n      props: FrameMetricProps,\n    ) => ViewToken,\n    onViewableItemsChanged: ({\n      viewableItems: Array<ViewToken>,\n      changed: Array<ViewToken>,\n      ...\n    }) => void,\n    // Optional optimization to reduce the scan size\n    renderRange?: {\n      first: number,\n      last: number,\n      ...\n    },\n  ): void {\n    const itemCount = props.getItemCount(props.data);\n    if (\n      (this._config.waitForInteraction && !this._hasInteracted) ||\n      itemCount === 0 ||\n      !getFrameMetrics(0, props)\n    ) {\n      return;\n    }\n    let viewableIndices: Array<number> = [];\n    if (itemCount) {\n      viewableIndices = this.computeViewableItems(\n        props,\n        scrollOffset,\n        viewportHeight,\n        getFrameMetrics,\n        renderRange,\n      );\n    }\n    if (\n      this._viewableIndices.length === viewableIndices.length &&\n      this._viewableIndices.every((v, ii) => v === viewableIndices[ii])\n    ) {\n      // We might get a lot of scroll events where visibility doesn't change and we don't want to do\n      // extra work in those cases.\n      return;\n    }\n    this._viewableIndices = viewableIndices;\n    if (this._config.minimumViewTime) {\n      const handle: TimeoutID = setTimeout(() => {\n        /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n         * comment suppresses an error found when Flow v0.63 was deployed. To\n         * see the error delete this comment and run Flow. */\n        this._timers.delete(handle);\n        this._onUpdateSync(\n          props,\n          viewableIndices,\n          onViewableItemsChanged,\n          createViewToken,\n        );\n      }, this._config.minimumViewTime);\n      /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n       * comment suppresses an error found when Flow v0.63 was deployed. To see\n       * the error delete this comment and run Flow. */\n      this._timers.add(handle);\n    } else {\n      this._onUpdateSync(\n        props,\n        viewableIndices,\n        onViewableItemsChanged,\n        createViewToken,\n      );\n    }\n  }\n\n  /**\n   * clean-up cached _viewableIndices to evaluate changed items on next update\n   */\n  resetViewableIndices() {\n    this._viewableIndices = [];\n  }\n\n  /**\n   * Records that an interaction has happened even if there has been no scroll.\n   */\n  recordInteraction() {\n    this._hasInteracted = true;\n  }\n\n  _onUpdateSync(\n    props: FrameMetricProps,\n    viewableIndicesToCheck: Array<number>,\n    onViewableItemsChanged: ({\n      changed: Array<ViewToken>,\n      viewableItems: Array<ViewToken>,\n      ...\n    }) => void,\n    createViewToken: (\n      index: number,\n      isViewable: boolean,\n      props: FrameMetricProps,\n    ) => ViewToken,\n  ) {\n    // Filter out indices that have gone out of view since this call was scheduled.\n    viewableIndicesToCheck = viewableIndicesToCheck.filter(ii =>\n      this._viewableIndices.includes(ii),\n    );\n    const prevItems = this._viewableItems;\n    const nextItems = new Map(\n      viewableIndicesToCheck.map(ii => {\n        const viewable = createViewToken(ii, true, props);\n        return [viewable.key, viewable];\n      }),\n    );\n\n    const changed = [];\n    for (const [key, viewable] of nextItems) {\n      if (!prevItems.has(key)) {\n        changed.push(viewable);\n      }\n    }\n    for (const [key, viewable] of prevItems) {\n      if (!nextItems.has(key)) {\n        changed.push({...viewable, isViewable: false});\n      }\n    }\n    if (changed.length > 0) {\n      this._viewableItems = nextItems;\n      onViewableItemsChanged({\n        viewableItems: Array.from(nextItems.values()),\n        changed,\n        viewabilityConfig: this._config,\n      });\n    }\n  }\n}\n\nfunction _isViewable(\n  viewAreaMode: boolean,\n  viewablePercentThreshold: number,\n  top: number,\n  bottom: number,\n  viewportHeight: number,\n  itemLength: number,\n): boolean {\n  if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n    return true;\n  } else {\n    const pixels = _getPixelsVisible(top, bottom, viewportHeight);\n    const percent =\n      100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n    return percent >= viewablePercentThreshold;\n  }\n}\n\nfunction _getPixelsVisible(\n  top: number,\n  bottom: number,\n  viewportHeight: number,\n): number {\n  const visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n  return Math.max(0, visibleHeight);\n}\n\nfunction _isEntirelyVisible(\n  top: number,\n  bottom: number,\n  viewportHeight: number,\n): boolean {\n  return top >= 0 && bottom <= viewportHeight && bottom > top;\n}\n\nmodule.exports = ViewabilityHelper;\n"],"mappings":"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"}