{"version":3,"names":["_reactNative","require","_State","_Directions","NOOP","PanGestureHandler","View","attachGestureHandler","createGestureHandler","dropGestureHandler","updateGestureHandler","flushOperations","NativeViewGestureHandler","TapGestureHandler","ForceTouchGestureHandler","LongPressGestureHandler","PinchGestureHandler","RotationGestureHandler","FlingGestureHandler","RawButton","TouchableNativeFeedback","BaseButton","RectButton","BorderlessButton","TouchableHighlight","TouchableOpacity","TouchableWithoutFeedback","ScrollView","FlatList","Switch","TextInput","DrawerLayoutAndroid","Directions","State"],"sources":["mocks.ts"],"sourcesContent":["import {\n  TouchableHighlight,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  ScrollView,\n  FlatList,\n  Switch,\n  TextInput,\n  DrawerLayoutAndroid,\n  View,\n} from 'react-native';\nimport { State } from './State';\nimport { Directions } from './Directions';\n\nconst NOOP = () => {\n  // do nothing\n};\nconst PanGestureHandler = View;\nconst attachGestureHandler = NOOP;\nconst createGestureHandler = NOOP;\nconst dropGestureHandler = NOOP;\nconst updateGestureHandler = NOOP;\nconst flushOperations = NOOP;\nconst NativeViewGestureHandler = View;\nconst TapGestureHandler = View;\nconst ForceTouchGestureHandler = View;\nconst LongPressGestureHandler = View;\nconst PinchGestureHandler = View;\nconst RotationGestureHandler = View;\nconst FlingGestureHandler = View;\nconst RawButton = TouchableNativeFeedback;\nconst BaseButton = TouchableNativeFeedback;\nconst RectButton = TouchableNativeFeedback;\nconst BorderlessButton = TouchableNativeFeedback;\n\nexport default {\n  TouchableHighlight,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  ScrollView,\n  FlatList,\n  Switch,\n  TextInput,\n  DrawerLayoutAndroid,\n  NativeViewGestureHandler,\n  TapGestureHandler,\n  ForceTouchGestureHandler,\n  LongPressGestureHandler,\n  PinchGestureHandler,\n  RotationGestureHandler,\n  FlingGestureHandler,\n  RawButton,\n  BaseButton,\n  RectButton,\n  BorderlessButton,\n  PanGestureHandler,\n  attachGestureHandler,\n  createGestureHandler,\n  dropGestureHandler,\n  updateGestureHandler,\n  flushOperations,\n  // probably can be removed\n  Directions,\n  State,\n} as const;\n"],"mappings":";;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAYA,IAAAC,MAAA,GAAAD,OAAA;AACA,IAAAE,WAAA,GAAAF,OAAA;AAEA,IAAMG,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS,CAElB,CAFD;AAGA,IAAMC,iBAAiB,GAAGL,YAAA,CAAAM,IAA1B;AACA,IAAMC,oBAAoB,GAAGH,IAA7B;AACA,IAAMI,oBAAoB,GAAGJ,IAA7B;AACA,IAAMK,kBAAkB,GAAGL,IAA3B;AACA,IAAMM,oBAAoB,GAAGN,IAA7B;AACA,IAAMO,eAAe,GAAGP,IAAxB;AACA,IAAMQ,wBAAwB,GAAGZ,YAAA,CAAAM,IAAjC;AACA,IAAMO,iBAAiB,GAAGb,YAAA,CAAAM,IAA1B;AACA,IAAMQ,wBAAwB,GAAGd,YAAA,CAAAM,IAAjC;AACA,IAAMS,uBAAuB,GAAGf,YAAA,CAAAM,IAAhC;AACA,IAAMU,mBAAmB,GAAGhB,YAAA,CAAAM,IAA5B;AACA,IAAMW,sBAAsB,GAAGjB,YAAA,CAAAM,IAA/B;AACA,IAAMY,mBAAmB,GAAGlB,YAAA,CAAAM,IAA5B;AACA,IAAMa,SAAS,GAAGnB,YAAA,CAAAoB,uBAAlB;AACA,IAAMC,UAAU,GAAGrB,YAAA,CAAAoB,uBAAnB;AACA,IAAME,UAAU,GAAGtB,YAAA,CAAAoB,uBAAnB;AACA,IAAMG,gBAAgB,GAAGvB,YAAA,CAAAoB,uBAAzB;eAEe;EACbI,kBAAkB,EAAlBxB,YAAA,CAAAwB,kBADa;EAEbJ,uBAAuB,EAAvBpB,YAAA,CAAAoB,uBAFa;EAGbK,gBAAgB,EAAhBzB,YAAA,CAAAyB,gBAHa;EAIbC,wBAAwB,EAAxB1B,YAAA,CAAA0B,wBAJa;EAKbC,UAAU,EAAV3B,YAAA,CAAA2B,UALa;EAMbC,QAAQ,EAAR5B,YAAA,CAAA4B,QANa;EAObC,MAAM,EAAN7B,YAAA,CAAA6B,MAPa;EAQbC,SAAS,EAAT9B,YAAA,CAAA8B,SARa;EASbC,mBAAmB,EAAnB/B,YAAA,CAAA+B,mBATa;EAUbnB,wBAVa,EAUbA,wBAVa;EAWbC,iBAXa,EAWbA,iBAXa;EAYbC,wBAZa,EAYbA,wBAZa;EAabC,uBAba,EAabA,uBAba;EAcbC,mBAda,EAcbA,mBAda;EAebC,sBAfa,EAebA,sBAfa;EAgBbC,mBAhBa,EAgBbA,mBAhBa;EAiBbC,SAjBa,EAiBbA,SAjBa;EAkBbE,UAlBa,EAkBbA,UAlBa;EAmBbC,UAnBa,EAmBbA,UAnBa;EAoBbC,gBApBa,EAoBbA,gBApBa;EAqBblB,iBArBa,EAqBbA,iBArBa;EAsBbE,oBAtBa,EAsBbA,oBAtBa;EAuBbC,oBAvBa,EAuBbA,oBAvBa;EAwBbC,kBAxBa,EAwBbA,kBAxBa;EAyBbC,oBAzBa,EAyBbA,oBAzBa;EA0BbC,eA1Ba,EA0BbA,eA1Ba;EA4BbqB,UAAU,EAAV7B,WAAA,CAAA6B,UA5Ba;EA6BbC,KAAK,EAAL/B,MAAA,CAAA+B;AA7Ba,C"}