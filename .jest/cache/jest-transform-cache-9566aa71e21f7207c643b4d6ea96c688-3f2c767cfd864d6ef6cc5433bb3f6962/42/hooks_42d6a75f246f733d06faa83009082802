168a26568d8f0956b5c51d368e9c5b5f
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useDidUpdate = exports.useCombinedRefs = void 0;
var _react = _interopRequireWildcard(require("react"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var useDidUpdate = function useDidUpdate(callback, dep) {
  var isMounted = (0, _react.useRef)(false);
  (0, _react.useEffect)(function () {
    if (isMounted.current) {
      callback();
    } else {
      isMounted.current = true;
    }
  }, dep);
};
exports.useDidUpdate = useDidUpdate;
var useCombinedRefs = function useCombinedRefs() {
  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {
    refs[_key] = arguments[_key];
  }
  var targetRef = _react.default.useRef();
  _react.default.useEffect(function () {
    refs.forEach(function (ref) {
      if (!ref) {
        return;
      }
      if (typeof ref === 'function') {
        ref(targetRef.current);
      } else {
        ref.current = targetRef.current;
      }
    });
  }, [refs]);
  return targetRef;
};
exports.useCombinedRefs = useCombinedRefs;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJub2RlSW50ZXJvcCIsIldlYWtNYXAiLCJjYWNoZUJhYmVsSW50ZXJvcCIsImNhY2hlTm9kZUludGVyb3AiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJkZXNjIiwic2V0IiwidXNlRGlkVXBkYXRlIiwiY2FsbGJhY2siLCJkZXAiLCJpc01vdW50ZWQiLCJ1c2VSZWYiLCJ1c2VFZmZlY3QiLCJjdXJyZW50IiwiZXhwb3J0cyIsInVzZUNvbWJpbmVkUmVmcyIsIl9sZW4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJyZWZzIiwiQXJyYXkiLCJfa2V5IiwidGFyZ2V0UmVmIiwiUmVhY3QiLCJmb3JFYWNoIiwicmVmIl0sInNvdXJjZXMiOlsiaG9va3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuLyoqXG4gKiBUaGlzIGhvb2sgYXZvaWQgY2FsbGluZyB1c2VFZmZlY3Qgb24gdGhlIGluaXRpYWwgdmFsdWUgb2YgaGlzIGRlcGVuZGVuY3kgYXJyYXlcbiAqL1xuZXhwb3J0IGNvbnN0IHVzZURpZFVwZGF0ZSA9IChjYWxsYmFjaywgZGVwKSA9PiB7XG4gICAgY29uc3QgaXNNb3VudGVkID0gdXNlUmVmKGZhbHNlKTtcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZiAoaXNNb3VudGVkLmN1cnJlbnQpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpc01vdW50ZWQuY3VycmVudCA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9LCBkZXApO1xufTtcbmV4cG9ydCBjb25zdCB1c2VDb21iaW5lZFJlZnMgPSAoLi4ucmVmcykgPT4ge1xuICAgIGNvbnN0IHRhcmdldFJlZiA9IFJlYWN0LnVzZVJlZigpO1xuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIHJlZnMuZm9yRWFjaChyZWYgPT4ge1xuICAgICAgICAgICAgaWYgKCFyZWYpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodHlwZW9mIHJlZiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIHJlZih0YXJnZXRSZWYuY3VycmVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yXG4gICAgICAgICAgICAgICAgcmVmLmN1cnJlbnQgPSB0YXJnZXRSZWYuY3VycmVudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSwgW3JlZnNdKTtcbiAgICByZXR1cm4gdGFyZ2V0UmVmO1xufTtcbiJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUFpRCxTQUFBQyx5QkFBQUMsV0FBQSxlQUFBQyxPQUFBLGtDQUFBQyxpQkFBQSxPQUFBRCxPQUFBLFFBQUFFLGdCQUFBLE9BQUFGLE9BQUEsWUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLFdBQUEsV0FBQUEsV0FBQSxHQUFBRyxnQkFBQSxHQUFBRCxpQkFBQSxLQUFBRixXQUFBO0FBQUEsU0FBQUgsd0JBQUFPLEdBQUEsRUFBQUosV0FBQSxTQUFBQSxXQUFBLElBQUFJLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLFdBQUFELEdBQUEsUUFBQUEsR0FBQSxvQkFB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