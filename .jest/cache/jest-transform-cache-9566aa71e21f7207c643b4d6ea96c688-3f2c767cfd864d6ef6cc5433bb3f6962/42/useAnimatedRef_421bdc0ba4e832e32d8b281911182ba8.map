{"version":3,"names":["_react","require","_useSharedValue","_NativeMethods","_fabricUtils","_shareables","getShareableShadowNodeFromComponent","component","getShadowNodeWrapperFromHostInstance","getComponentOrScrollableRef","global","_IS_FABRIC","getNativeScrollRef","getScrollableNode","getTagValueFunction","getTag","_worklet_13022177922424_init_data","code","location","sourceMap","useAnimatedRef","tag","useSharedValue","ref","useRef","current","fun","value","remoteRef","makeShareableCloneRecursive","__init","_e","Error","_f","_closure","__initData","__workletHash","__stackDetails","__version","registerShareableMapping"],"sources":["useAnimatedRef.ts"],"sourcesContent":["import { Component, useRef } from 'react';\nimport { useSharedValue } from './useSharedValue';\nimport { RefObjectFunction } from './commonTypes';\nimport { ShadowNodeWrapper } from '../commonTypes';\nimport { getTag } from '../NativeMethods';\nimport { getShadowNodeWrapperFromHostInstance } from '../fabricUtils';\nimport {\n  makeShareableCloneRecursive,\n  registerShareableMapping,\n} from '../shareables';\n\ninterface ComponentRef extends Component {\n  getNativeScrollRef?: () => ComponentRef;\n  getScrollableNode?: () => ComponentRef;\n}\n\nfunction getShareableShadowNodeFromComponent(\n  component: ComponentRef\n): ShadowNodeWrapper {\n  return getShadowNodeWrapperFromHostInstance(component);\n}\n\nfunction getComponentOrScrollableRef(component: ComponentRef): ComponentRef {\n  if (global._IS_FABRIC && component.getNativeScrollRef) {\n    return component.getNativeScrollRef();\n  } else if (!global._IS_FABRIC && component.getScrollableNode) {\n    return component.getScrollableNode();\n  }\n  return component;\n}\n\nconst getTagValueFunction = global._IS_FABRIC\n  ? getShareableShadowNodeFromComponent\n  : getTag;\n\nexport function useAnimatedRef<T extends ComponentRef>(): RefObjectFunction<T> {\n  const tag = useSharedValue<number | ShadowNodeWrapper | null>(-1);\n  const ref = useRef<RefObjectFunction<T>>();\n\n  if (!ref.current) {\n    const fun: RefObjectFunction<T> = <RefObjectFunction<T>>((component) => {\n      // enters when ref is set by attaching to a component\n      if (component) {\n        tag.value = getTagValueFunction(getComponentOrScrollableRef(component));\n        fun.current = component;\n      }\n      return tag.value;\n    });\n\n    fun.current = null;\n\n    const remoteRef = makeShareableCloneRecursive({\n      __init: () => {\n        'worklet';\n        return () => tag.value;\n      },\n    });\n    registerShareableMapping(fun, remoteRef);\n    ref.current = fun;\n  }\n\n  return ref.current;\n}\n"],"mappings":";;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,eAAA,GAAAD,OAAA;AAGA,IAAAE,cAAA,GAAAF,OAAA;AACA,IAAAG,YAAA,GAAAH,OAAA;AACA,IAAAI,WAAA,GAAAJ,OAAA;AAUA,SAASK,mCAAmCA,CAC1CC,SAAuB,EACJ;EACnB,OAAO,IAAAC,iDAAoC,EAACD,SAAS,CAAC;AACxD;AAEA,SAASE,2BAA2BA,CAACF,SAAuB,EAAgB;EAC1E,IAAIG,MAAM,CAACC,UAAU,IAAIJ,SAAS,CAACK,kBAAkB,EAAE;IACrD,OAAOL,SAAS,CAACK,kBAAkB,EAAE;EACvC,CAAC,MAAM,IAAI,CAACF,MAAM,CAACC,UAAU,IAAIJ,SAAS,CAACM,iBAAiB,EAAE;IAC5D,OAAON,SAAS,CAACM,iBAAiB,EAAE;EACtC;EACA,OAAON,SAAS;AAClB;AAEA,IAAMO,mBAAmB,GAAGJ,MAAM,CAACC,UAAU,GACzCL,mCAAmC,GACnCS,qBAAM;AAAA,IAAAC,iCAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;AAAA;AAEH,SAASC,cAAcA,CAAA,EAAiD;EAC7E,IAAMC,GAAG,GAAG,IAAAC,8BAAc,EAAoC,CAAC,CAAC,CAAC;EACjE,IAAMC,GAAG,GAAG,IAAAC,aAAM,GAAwB;EAE1C,IAAI,CAACD,GAAG,CAACE,OAAO,EAAE;IAChB,IAAMC,GAAyB,GAA2B,SAApDA,GAAyBA,CAA2BnB,SAAS,EAAK;MAEtE,IAAIA,SAAS,EAAE;QACbc,GAAG,CAACM,KAAK,GAAGb,mBAAmB,CAACL,2BAA2B,CAACF,SAAS,CAAC,CAAC;QACvEmB,GAAG,CAACD,OAAO,GAAGlB,SAAS;MACzB;MACA,OAAOc,GAAG,CAACM,KAAK;IAClB,CAAE;IAEFD,GAAG,CAACD,OAAO,GAAG,IAAI;IAElB,IAAMG,SAAS,GAAG,IAAAC,uCAA2B,EAAC;MAC5CC,MAAM;QAAA,IAAAC,EAAA,QAAArB,MAAA,CAAAsB,KAAA;QAAA,IAAAC,EAAA,YAAAA,GAAA,EAAQ;UAEZ,OAAO;YAAA,OAAMZ,GAAG,CAACM,KAAK;UAAA;QACxB;QAAAM,EAAA,CAAAC,QAAA;UAAAb,GAAA,EAtDGA;QAAA;QAAAY,EAAA,CAAAE,UAAA,GAAAnB,iCAAA;QAAAiB,EAAA,CAAAG,aAAA;QAAAH,EAAA,CAAAI,cAAA,GAAAN,EAAA;QAAAE,EAAA,CAAAK,SAAA;QAAA,OAAAL,EAAA;MAAA;IAuDL,CAAC,CAAC;IACF,IAAAM,oCAAwB,EAACb,GAAG,EAAEE,SAAS,CAAC;IACxCL,GAAG,CAACE,OAAO,GAAGC,GAAG;EACnB;EAEA,OAAOH,GAAG,CAACE,OAAO;AACpB"}