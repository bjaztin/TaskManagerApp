{"version":3,"names":["_inRange","_interopRequireDefault","require","_xdate","_constants","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","HOUR_BLOCK_HEIGHT","exports","OVERLAP_EVENTS_SPACINGS","RIGHT_EDGE_SPACING","buildEvent","event","left","width","_ref","_ref$dayStart","dayStart","_ref$hourBlockHeight","hourBlockHeight","startTime","XDate","start","endTime","end","addHours","dayStartTime","clearTime","top","diffHours","height","hasCollision","a","b","calcColumnSpan","columnIndex","columns","colSpan","i","column","foundCollision","find","ev","packOverlappingEventGroup","calculatedEvents","populateOptions","_populateOptions$scre","screenWidth","constants","_populateOptions$righ","rightEdgeSpacing","_populateOptions$over","overlapEventsSpacing","totalWidth","columnSpan","eventLeft","eventWidth","populateEvents","_events","lastEnd","events","map","index","sort","placed","col","buildUnavailableHoursBlocks","unavailableHours","undefined","options","_ref2","_ref2$hourBlockHeight","_ref2$dayStart","_ref2$dayEnd","dayEnd","totalDayHours","totalDayHeight","hours","inRange","console","error","startFixed","Math","max","endFixed","min","Boolean"],"sources":["Packer.js"],"sourcesContent":["import inRange from 'lodash/inRange';\nimport XDate from 'xdate';\nimport constants from '../commons/constants';\nexport const HOUR_BLOCK_HEIGHT = 100;\nconst OVERLAP_EVENTS_SPACINGS = 10;\nconst RIGHT_EDGE_SPACING = 10;\nfunction buildEvent(event, left, width, { dayStart = 0, hourBlockHeight = HOUR_BLOCK_HEIGHT }) {\n    const startTime = new XDate(event.start);\n    const endTime = event.end ? new XDate(event.end) : new XDate(startTime).addHours(1);\n    const dayStartTime = new XDate(startTime).clearTime();\n    return {\n        ...event,\n        top: (dayStartTime.diffHours(startTime) - dayStart) * hourBlockHeight,\n        height: startTime.diffHours(endTime) * hourBlockHeight,\n        width,\n        left\n    };\n}\nfunction hasCollision(a, b) {\n    return a.end > b.start && a.start < b.end;\n}\nfunction calcColumnSpan(event, columnIndex, columns) {\n    let colSpan = 1;\n    for (let i = columnIndex + 1; i < columns.length; i++) {\n        const column = columns[i];\n        const foundCollision = column.find(ev => hasCollision(event, ev));\n        if (foundCollision) {\n            return colSpan;\n        }\n        colSpan++;\n    }\n    return colSpan;\n}\nfunction packOverlappingEventGroup(columns, calculatedEvents, populateOptions) {\n    const { screenWidth = constants.screenWidth, rightEdgeSpacing = RIGHT_EDGE_SPACING, overlapEventsSpacing = OVERLAP_EVENTS_SPACINGS } = populateOptions;\n    columns.forEach((column, columnIndex) => {\n        column.forEach(event => {\n            const totalWidth = screenWidth - rightEdgeSpacing;\n            const columnSpan = calcColumnSpan(event, columnIndex, columns);\n            const eventLeft = (columnIndex / columns.length) * totalWidth;\n            let eventWidth = totalWidth * (columnSpan / columns.length);\n            if (columnIndex + columnSpan <= columns.length - 1) {\n                eventWidth -= overlapEventsSpacing;\n            }\n            calculatedEvents.push(buildEvent(event, eventLeft, eventWidth, populateOptions));\n        });\n    });\n}\nexport function populateEvents(_events, populateOptions) {\n    let lastEnd = null;\n    let columns = [];\n    const calculatedEvents = [];\n    const events = _events\n        .map((ev, index) => ({ ...ev, index: index }))\n        .sort(function (a, b) {\n        if (a.start < b.start)\n            return -1;\n        if (a.start > b.start)\n            return 1;\n        if (a.end < b.end)\n            return -1;\n        if (a.end > b.end)\n            return 1;\n        return 0;\n    });\n    events.forEach(function (ev) {\n        // Reset recent overlapping event group and start a new one\n        if (lastEnd !== null && ev.start >= lastEnd) {\n            packOverlappingEventGroup(columns, calculatedEvents, populateOptions);\n            columns = [];\n            lastEnd = null;\n        }\n        // Place current event in the right column where it doesn't overlap\n        let placed = false;\n        for (let i = 0; i < columns.length; i++) {\n            const col = columns[i];\n            if (!hasCollision(col[col.length - 1], ev)) {\n                col.push(ev);\n                placed = true;\n                break;\n            }\n        }\n        // If curr event wasn't placed in any of the columns, create a new column for it\n        if (!placed) {\n            columns.push([ev]);\n        }\n        if (lastEnd === null || ev.end > lastEnd) {\n            lastEnd = ev.end;\n        }\n    });\n    if (columns.length > 0) {\n        packOverlappingEventGroup(columns, calculatedEvents, populateOptions);\n    }\n    return calculatedEvents;\n}\nexport function buildUnavailableHoursBlocks(unavailableHours = [], options) {\n    const { hourBlockHeight = HOUR_BLOCK_HEIGHT, dayStart = 0, dayEnd = 24 } = options || {};\n    const totalDayHours = dayEnd - dayStart;\n    const totalDayHeight = (dayEnd - dayStart) * hourBlockHeight;\n    return (unavailableHours\n        .map(hours => {\n        if (!inRange(hours.start, 0, 25) || !inRange(hours.end, 0, 25)) {\n            console.error('Calendar Timeline unavailableHours is invalid. Hours should be between 0 and 24');\n            return undefined;\n        }\n        if (hours.start >= hours.end) {\n            console.error('Calendar Timeline availableHours is invalid. start hour should be earlier than end hour');\n            return undefined;\n        }\n        const startFixed = Math.max(hours.start, dayStart);\n        const endFixed = Math.min(hours.end, dayEnd);\n        return {\n            top: ((startFixed - dayStart) / totalDayHours) * totalDayHeight,\n            height: (endFixed - startFixed) * hourBlockHeight\n        };\n    })\n        // Note: this filter falsy values (undefined blocks)\n        .filter(Boolean));\n}\n"],"mappings":";;;;;;;;AAAA,IAAAA,QAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,UAAA,GAAAH,sBAAA,CAAAC,OAAA;AAA6C,SAAAG,QAAAC,CAAA,EAAAC,CAAA,QAAAC,CAAA,GAAAC,MAAA,CAAAC,IAAA,CAAAJ,CAAA,OAAAG,MAAA,CAAAE,qBAAA,QAAAC,CAAA,GAAAH,MAAA,CAAAE,qBAAA,CAAAL,CAAA,GAAAC,CAAA,KAAAK,CAAA,GAAAA,CAAA,CAAAC,MAAA,WAAAN,CAAA,WAAAE,MAAA,CAAAK,wBAAA,CAAAR,CAAA,EAAAC,CAAA,EAAAQ,UAAA,OAAAP,CAAA,CAAAQ,IAAA,CAAAC,KAAA,CAAAT,CAAA,EAAAI,CAAA,YAAAJ,CAAA;AAAA,SAAAU,cAAAZ,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAY,SAAA,CAAAC,MAAA,EAAAb,CAAA,UAAAC,CAAA,WAAAW,SAAA,CAAAZ,CAAA,IAAAY,SAAA,CAAAZ,CAAA,QAAAA,CAAA,OAAAF,OAAA,CAAAI,MAAA,CAAAD,CAAA,OAAAa,OAAA,WAAAd,CAAA,QAAAe,gBAAA,CAAAC,OAAA,EAAAjB,CAAA,EAAAC,CAAA,EAAAC,CAAA,CAAAD,CAAA,SAAAE,MAAA,CAAAe,yBAAA,GAAAf,MAAA,CAAAgB,gBAAA,CAAAnB,CAAA,EAAAG,MAAA,CAAAe,yBAAA,CAAAhB,CAAA,KAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,GAAAa,OAAA,WAAAd,CAAA,IAAAE,MAAA,CAAAiB,cAAA,CAAApB,CAAA,EAAAC,CAAA,EAAAE,MAAA,CAAAK,wBAAA,CAAAN,CAAA,EAAAD,CAAA,iBAAAD,CAAA;AACtC,IAAMqB,iBAAiB,GAAG,GAAG;AAACC,OAAA,CAAAD,iBAAA,GAAAA,iBAAA;AACrC,IAAME,uBAAuB,GAAG,EAAE;AAClC,IAAMC,kBAAkB,GAAG,EAAE;AAC7B,SAASC,UAAUA,CAACC,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAAC,IAAA,EAAyD;EAAA,IAAAC,aAAA,GAAAD,IAAA,CAArDE,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,CAAC,GAAAA,aAAA;IAAAE,oBAAA,GAAAH,IAAA,CAAEI,eAAe;IAAfA,eAAe,GAAAD,oBAAA,cAAGX,iBAAiB,GAAAW,oBAAA;EACvF,IAAME,SAAS,GAAG,IAAIC,cAAK,CAACT,KAAK,CAACU,KAAK,CAAC;EACxC,IAAMC,OAAO,GAAGX,KAAK,CAACY,GAAG,GAAG,IAAIH,cAAK,CAACT,KAAK,CAACY,GAAG,CAAC,GAAG,IAAIH,cAAK,CAACD,SAAS,CAAC,CAACK,QAAQ,CAAC,CAAC,CAAC;EACnF,IAAMC,YAAY,GAAG,IAAIL,cAAK,CAACD,SAAS,CAAC,CAACO,SAAS,CAAC,CAAC;EACrD,OAAA7B,aAAA,CAAAA,aAAA,KACOc,KAAK;IACRgB,GAAG,EAAE,CAACF,YAAY,CAACG,SAAS,CAACT,SAAS,CAAC,GAAGH,QAAQ,IAAIE,eAAe;IACrEW,MAAM,EAAEV,SAAS,CAACS,SAAS,CAACN,OAAO,CAAC,GAAGJ,eAAe;IACtDL,KAAK,EAALA,KAAK;IACLD,IAAI,EAAJA;EAAI;AAEZ;AACA,SAASkB,YAAYA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACxB,OAAOD,CAAC,CAACR,GAAG,GAAGS,CAAC,CAACX,KAAK,IAAIU,CAAC,CAACV,KAAK,GAAGW,CAAC,CAACT,GAAG;AAC7C;AACA,SAASU,cAAcA,CAACtB,KAAK,EAAEuB,WAAW,EAAEC,OAAO,EAAE;EACjD,IAAIC,OAAO,GAAG,CAAC;EACf,KAAK,IAAIC,CAAC,GAAGH,WAAW,GAAG,CAAC,EAAEG,CAAC,GAAGF,OAAO,CAACpC,MAAM,EAAEsC,CAAC,EAAE,EAAE;IACnD,IAAMC,MAAM,GAAGH,OAAO,CAACE,CAAC,CAAC;IACzB,IAAME,cAAc,GAAGD,MAAM,CAACE,IAAI,CAAC,UAAAC,EAAE;MAAA,OAAIX,YAAY,CAACnB,KAAK,EAAE8B,EAAE,CAAC;IAAA,EAAC;IACjE,IAAIF,cAAc,EAAE;MAChB,OAAOH,OAAO;IAClB;IACAA,OAAO,EAAE;EACb;EACA,OAAOA,OAAO;AAClB;AACA,SAASM,yBAAyBA,CAACP,OAAO,EAAEQ,gBAAgB,EAAEC,eAAe,EAAE;EAC3E,IAAAC,qBAAA,GAAuID,eAAe,CAA9IE,WAAW;IAAXA,WAAW,GAAAD,qBAAA,cAAGE,kBAAS,CAACD,WAAW,GAAAD,qBAAA;IAAAG,qBAAA,GAA4FJ,eAAe,CAAzGK,gBAAgB;IAAhBA,gBAAgB,GAAAD,qBAAA,cAAGvC,kBAAkB,GAAAuC,qBAAA;IAAAE,qBAAA,GAAqDN,eAAe,CAAlEO,oBAAoB;IAApBA,oBAAoB,GAAAD,qBAAA,cAAG1C,uBAAuB,GAAA0C,qBAAA;EAClIf,OAAO,CAACnC,OAAO,CAAC,UAACsC,MAAM,EAAEJ,WAAW,EAAK;IACrCI,MAAM,CAACtC,OAAO,CAAC,UAAAW,KAAK,EAAI;MACpB,IAAMyC,UAAU,GAAGN,WAAW,GAAGG,gBAAgB;MACjD,IAAMI,UAAU,GAAGpB,cAAc,CAACtB,KAAK,EAAEuB,WAAW,EAAEC,OAAO,CAAC;MAC9D,IAAMmB,SAAS,GAAIpB,WAAW,GAAGC,OAAO,CAACpC,MAAM,GAAIqD,UAAU;MAC7D,IAAIG,UAAU,GAAGH,UAAU,IAAIC,UAAU,GAAGlB,OAAO,CAACpC,MAAM,CAAC;MAC3D,IAAImC,WAAW,GAAGmB,UAAU,IAAIlB,OAAO,CAACpC,MAAM,GAAG,CAAC,EAAE;QAChDwD,UAAU,IAAIJ,oBAAoB;MACtC;MACAR,gBAAgB,CAAChD,IAAI,CAACe,UAAU,CAACC,KAAK,EAAE2C,SAAS,EAAEC,UAAU,EAAEX,eAAe,CAAC,CAAC;IACpF,CAAC,CAAC;EACN,CAAC,CAAC;AACN;AACO,SAASY,cAAcA,CAACC,OAAO,EAAEb,eAAe,EAAE;EACrD,IAAIc,OAAO,GAAG,IAAI;EAClB,IAAIvB,OAAO,GAAG,EAAE;EAChB,IAAMQ,gBAAgB,GAAG,EAAE;EAC3B,IAAMgB,MAAM,GAAGF,OAAO,CACjBG,GAAG,CAAC,UAACnB,EAAE,EAAEoB,KAAK;IAAA,OAAAhE,aAAA,CAAAA,aAAA,KAAW4C,EAAE;MAAEoB,KAAK,EAAEA;IAAK;EAAA,CAAG,CAAC,CAC7CC,IAAI,CAAC,UAAU/B,CAAC,EAAEC,CAAC,EAAE;IACtB,IAAID,CAAC,CAACV,KAAK,GAAGW,CAAC,CAACX,KAAK,EACjB,OAAO,CAAC,CAAC;IACb,IAAIU,CAAC,CAACV,KAAK,GAAGW,CAAC,CAACX,KAAK,EACjB,OAAO,CAAC;IACZ,IAAIU,CAAC,CAACR,GAAG,GAAGS,CAAC,CAACT,GAAG,EACb,OAAO,CAAC,CAAC;IACb,IAAIQ,CAAC,CAACR,GAAG,GAAGS,CAAC,CAACT,GAAG,EACb,OAAO,CAAC;IACZ,OAAO,CAAC;EACZ,CAAC,CAAC;EACFoC,MAAM,CAAC3D,OAAO,CAAC,UAAUyC,EAAE,EAAE;IAEzB,IAAIiB,OAAO,KAAK,IAAI,IAAIjB,EAAE,CAACpB,KAAK,IAAIqC,OAAO,EAAE;MACzChB,yBAAyB,CAACP,OAAO,EAAEQ,gBAAgB,EAAEC,eAAe,CAAC;MACrET,OAAO,GAAG,EAAE;MACZuB,OAAO,GAAG,IAAI;IAClB;IAEA,IAAIK,MAAM,GAAG,KAAK;IAClB,KAAK,IAAI1B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,OAAO,CAACpC,MAAM,EAAEsC,CAAC,EAAE,EAAE;MACrC,IAAM2B,GAAG,GAAG7B,OAAO,CAACE,CAAC,CAAC;MACtB,IAAI,CAACP,YAAY,CAACkC,GAAG,CAACA,GAAG,CAACjE,MAAM,GAAG,CAAC,CAAC,EAAE0C,EAAE,CAAC,EAAE;QACxCuB,GAAG,CAACrE,IAAI,CAAC8C,EAAE,CAAC;QACZsB,MAAM,GAAG,IAAI;QACb;MACJ;IACJ;IAEA,IAAI,CAACA,MAAM,EAAE;MACT5B,OAAO,CAACxC,IAAI,CAAC,CAAC8C,EAAE,CAAC,CAAC;IACtB;IACA,IAAIiB,OAAO,KAAK,IAAI,IAAIjB,EAAE,CAAClB,GAAG,GAAGmC,OAAO,EAAE;MACtCA,OAAO,GAAGjB,EAAE,CAAClB,GAAG;IACpB;EACJ,CAAC,CAAC;EACF,IAAIY,OAAO,CAACpC,MAAM,GAAG,CAAC,EAAE;IACpB2C,yBAAyB,CAACP,OAAO,EAAEQ,gBAAgB,EAAEC,eAAe,CAAC;EACzE;EACA,OAAOD,gBAAgB;AAC3B;AACO,SAASsB,2BAA2BA,CAAA,EAAiC;EAAA,IAAhCC,gBAAgB,GAAApE,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAqE,SAAA,GAAArE,SAAA,MAAG,EAAE;EAAA,IAAEsE,OAAO,GAAAtE,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAqE,SAAA;EACtE,IAAAE,KAAA,GAA2ED,OAAO,IAAI,CAAC,CAAC;IAAAE,qBAAA,GAAAD,KAAA,CAAhFnD,eAAe;IAAfA,eAAe,GAAAoD,qBAAA,cAAGhE,iBAAiB,GAAAgE,qBAAA;IAAAC,cAAA,GAAAF,KAAA,CAAErD,QAAQ;IAARA,QAAQ,GAAAuD,cAAA,cAAG,CAAC,GAAAA,cAAA;IAAAC,YAAA,GAAAH,KAAA,CAAEI,MAAM;IAANA,MAAM,GAAAD,YAAA,cAAG,EAAE,GAAAA,YAAA;EACtE,IAAME,aAAa,GAAGD,MAAM,GAAGzD,QAAQ;EACvC,IAAM2D,cAAc,GAAG,CAACF,MAAM,GAAGzD,QAAQ,IAAIE,eAAe;EAC5D,OAAQgD,gBAAgB,CACnBN,GAAG,CAAC,UAAAgB,KAAK,EAAI;IACd,IAAI,CAAC,IAAAC,gBAAO,EAACD,KAAK,CAACvD,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAAwD,gBAAO,EAACD,KAAK,CAACrD,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE;MAC5DuD,OAAO,CAACC,KAAK,CAAC,iFAAiF,CAAC;MAChG,OAAOZ,SAAS;IACpB;IACA,IAAIS,KAAK,CAACvD,KAAK,IAAIuD,KAAK,CAACrD,GAAG,EAAE;MAC1BuD,OAAO,CAACC,KAAK,CAAC,yFAAyF,CAAC;MACxG,OAAOZ,SAAS;IACpB;IACA,IAAMa,UAAU,GAAGC,IAAI,CAACC,GAAG,CAACN,KAAK,CAACvD,KAAK,EAAEL,QAAQ,CAAC;IAClD,IAAMmE,QAAQ,GAAGF,IAAI,CAACG,GAAG,CAACR,KAAK,CAACrD,GAAG,EAAEkD,MAAM,CAAC;IAC5C,OAAO;MACH9C,GAAG,EAAG,CAACqD,UAAU,GAAGhE,QAAQ,IAAI0D,aAAa,GAAIC,cAAc;MAC/D9C,MAAM,EAAE,CAACsD,QAAQ,GAAGH,UAAU,IAAI9D;IACtC,CAAC;EACL,CAAC,CAAC,CAEG1B,MAAM,CAAC6F,OAAO,CAAC;AACxB"}