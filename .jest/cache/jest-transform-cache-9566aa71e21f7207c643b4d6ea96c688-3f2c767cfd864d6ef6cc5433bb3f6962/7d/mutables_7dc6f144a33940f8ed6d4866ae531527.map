{"version":3,"names":["_NativeReanimated","_interopRequireDefault","require","_shareables","_threads","_valueSetter","_mappers","_worklet_4824026427666_init_data","code","location","sourceMap","makeUIMutable","_e","global","Error","_f","initial","syncDataHolder","listeners","Map","value","self","newValue","valueSetter","_value","_updateDataSynchronously","makeShareableCloneOnUIRecursive","forEach","listener","addListener","id","set","removeListener","delete","_animation","_isReanimatedSharedValue","_closure","__initData","__workletHash","__stackDetails","__version","exports","_worklet_10449958264388_init_data","_worklet_15438208032637_init_data","_worklet_12569920825823_init_data","makeMutable","oneWayReadsOnly","arguments","length","undefined","NativeReanimatedModule","native","makeSynchronizedDataHolder","makeShareableCloneRecursive","registerShareableMapping","handle","__init","mutable","runOnUI","getDataSynchronously","modify","modifier","_worklet_17100414353033_init_data","makeRemote"],"sources":["mutables.ts"],"sourcesContent":["import NativeReanimatedModule from './NativeReanimated';\nimport { SharedValue, ShareableSyncDataHolderRef } from './commonTypes';\nimport {\n  makeShareableCloneOnUIRecursive,\n  makeShareableCloneRecursive,\n  registerShareableMapping,\n} from './shareables';\nimport { runOnUI } from './threads';\nimport { valueSetter } from './valueSetter';\nexport { stopMapper } from './mappers';\n\nexport function makeUIMutable<T>(\n  initial: T,\n  syncDataHolder?: ShareableSyncDataHolderRef<T>\n) {\n  'worklet';\n\n  const listeners = new Map();\n  let value = initial;\n\n  const self = {\n    set value(newValue) {\n      valueSetter(self, newValue);\n    },\n    get value() {\n      return value;\n    },\n    /**\n     * _value prop should only be accessed by the valueSetter implementation\n     * which may make the decision about updating the mutable value depending\n     * on the provided new value. All other places should only attempt to modify\n     * the mutable by assigning to value prop directly.\n     */\n    set _value(newValue: T) {\n      value = newValue;\n      if (syncDataHolder) {\n        _updateDataSynchronously(\n          syncDataHolder,\n          makeShareableCloneOnUIRecursive(newValue)\n        );\n      }\n      listeners.forEach((listener) => {\n        listener(newValue);\n      });\n    },\n    get _value(): T {\n      return value;\n    },\n    addListener: (id: number, listener: (newValue: T) => void) => {\n      listeners.set(id, listener);\n    },\n    removeListener: (id: number) => {\n      listeners.delete(id);\n    },\n    _animation: null,\n    _isReanimatedSharedValue: true,\n  };\n  return self;\n}\n\nexport function makeMutable<T>(\n  initial: T,\n  oneWayReadsOnly = false\n): SharedValue<T> {\n  let value: T = initial;\n  let syncDataHolder: ShareableSyncDataHolderRef<T> | undefined;\n  if (!oneWayReadsOnly && NativeReanimatedModule.native) {\n    // updates are always synchronous when running on web or in Jest environment\n    syncDataHolder = NativeReanimatedModule.makeSynchronizedDataHolder(\n      makeShareableCloneRecursive(value)\n    );\n    registerShareableMapping(syncDataHolder);\n  }\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return makeUIMutable(initial, syncDataHolder);\n    },\n  });\n  // listeners can only work on JS thread on Web and jest environments\n  const listeners = NativeReanimatedModule.native ? undefined : new Map();\n  const mutable = {\n    set value(newValue) {\n      if (NativeReanimatedModule.native) {\n        runOnUI(() => {\n          mutable.value = newValue;\n        })();\n      } else {\n        valueSetter(mutable, newValue);\n      }\n    },\n    get value() {\n      if (syncDataHolder) {\n        return NativeReanimatedModule.getDataSynchronously(syncDataHolder);\n      }\n      return value;\n    },\n    set _value(newValue: T) {\n      if (NativeReanimatedModule.native) {\n        throw new Error(\n          'Setting `_value` directly is only possible on the UI runtime'\n        );\n      }\n      value = newValue;\n      listeners!.forEach((listener) => {\n        listener(newValue);\n      });\n    },\n    get _value(): T {\n      if (NativeReanimatedModule.native) {\n        throw new Error(\n          'Reading from `_value` directly is only possible on the UI runtime'\n        );\n      }\n      return value;\n    },\n    modify: (modifier: (value: T) => T) => {\n      runOnUI(() => {\n        mutable.value = modifier(mutable.value);\n      })();\n    },\n    addListener: (id: number, listener: (value: T) => void) => {\n      if (NativeReanimatedModule.native) {\n        throw new Error('adding listeners is only possible on the UI runtime');\n      }\n      listeners!.set(id, listener);\n    },\n    removeListener: (id: number) => {\n      if (NativeReanimatedModule.native) {\n        throw new Error(\n          'removing listeners is only possible on the UI runtime'\n        );\n      }\n      listeners!.delete(id);\n    },\n    _isReanimatedSharedValue: true,\n  };\n  registerShareableMapping(mutable, handle);\n  return mutable;\n}\n\nexport function makeRemote<T extends object>(initial: T = {} as T): T {\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return initial;\n    },\n  });\n  registerShareableMapping(initial, handle);\n  return initial;\n}\n"],"mappings":"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"}