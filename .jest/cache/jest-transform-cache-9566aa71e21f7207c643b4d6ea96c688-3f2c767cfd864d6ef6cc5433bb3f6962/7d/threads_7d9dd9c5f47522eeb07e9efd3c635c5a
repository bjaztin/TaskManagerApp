f900f983a414d8d473cb31fbc5f5f5d9
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setupMicrotasks = exports.runOnUIImmediately = exports.runOnUI = exports.runOnJS = exports.callMicrotasks = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _NativeReanimated = _interopRequireDefault(require("./NativeReanimated"));
var _PlatformChecker = require("./PlatformChecker");
var _shareables = require("./shareables");
var IS_JEST = (0, _PlatformChecker.isJest)();
var IS_WEB = (0, _PlatformChecker.shouldBeUseWeb)();
var _runOnUIQueue = [];
var _worklet_15487039925692_init_data = {
  code: "function setupMicrotasks() {\n  let microtasksQueue = [];\n  let isExecutingMicrotasksQueue = false;\n  global.queueMicrotask = function (callback) {\n    microtasksQueue.push(callback);\n    return -1;\n  };\n  global.__callMicrotasks = function () {\n    if (isExecutingMicrotasksQueue) {\n      return;\n    }\n    try {\n      isExecutingMicrotasksQueue = true;\n      for (let index = 0; index < microtasksQueue.length; index += 1) {\n        microtasksQueue[index]();\n      }\n      microtasksQueue = [];\n      global._maybeFlushUIUpdatesQueue();\n    } finally {\n      isExecutingMicrotasksQueue = false;\n    }\n  };\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js",
  sourceMap: "{\"version\":3,\"names\":[\"setupMicrotasks\",\"microtasksQueue\",\"isExecutingMicrotasksQueue\",\"global\",\"queueMicrotask\",\"callback\",\"push\",\"__callMicrotasks\",\"index\",\"length\",\"_maybeFlushUIUpdatesQueue\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\"],\"mappings\":\"AAMO,SAAAA,eAASA,CAAA,EAAe;EAG7B,IAAIC,eAAe,GAAG,EAAE;EACxB,IAAIC,0BAA0B,GAAG,KAAK;EAGtCC,MAAM,CAACC,cAAc,GAAG,UAAAC,QAAQ,EAAI;IAClCJ,eAAe,CAACK,IAAI,CAACD,QAAQ,CAAC;IAC9B,OAAO,CAAC,CAAC;EACX,CAAC;EACDF,MAAM,CAACI,gBAAgB,GAAG,YAAM;IAC9B,IAAIL,0BAA0B,EAAE;MAC9B;IACF;IACA,IAAI;MACFA,0BAA0B,GAAG,IAAI;MACjC,KAAK,IAAIM,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGP,eAAe,CAACQ,MAAM,EAAED,KAAK,IAAI,CAAC,EAAE;QAE9DP,eAAe,CAACO,KAAK,CAAC,CAAC,CAAC;MAC1B;MACAP,eAAe,GAAG,EAAE;MACpBE,MAAM,CAACO,yBAAyB,CAAC,CAAC;IACpC,CAAC,SAAS;MACRR,0BAA0B,GAAG,KAAK;IACpC;EACF,CAAC;AACH\"}"
};
var setupMicrotasks = function () {
  var _e = [new global.Error(), 1, -27];
  var _f = function _f() {
    var microtasksQueue = [];
    var isExecutingMicrotasksQueue = false;
    global.queueMicrotask = function (callback) {
      microtasksQueue.push(callback);
      return -1;
    };
    global.__callMicrotasks = function () {
      if (isExecutingMicrotasksQueue) {
        return;
      }
      try {
        isExecutingMicrotasksQueue = true;
        for (var index = 0; index < microtasksQueue.length; index += 1) {
          microtasksQueue[index]();
        }
        microtasksQueue = [];
        global._maybeFlushUIUpdatesQueue();
      } finally {
        isExecutingMicrotasksQueue = false;
      }
    };
  };
  _f._closure = {};
  _f.__initData = _worklet_15487039925692_init_data;
  _f.__workletHash = 15487039925692;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
exports.setupMicrotasks = setupMicrotasks;
var _worklet_9338539058190_init_data = {
  code: "function callMicrotasksOnUIThread() {\n  global.__callMicrotasks();\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js",
  sourceMap: "{\"version\":3,\"names\":[\"callMicrotasksOnUIThread\",\"global\",\"__callMicrotasks\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\"],\"mappings\":\"AAkCA,SAAAA,wBAASA,CAAA,EAAwB;EAG/BC,MAAM,CAACC,gBAAgB,CAAC,CAAC;AAC3B\"}"
};
var callMicrotasksOnUIThread = function () {
  var _e = [new global.Error(), 1, -27];
  var _f = function _f() {
    global.__callMicrotasks();
  };
  _f._closure = {};
  _f.__initData = _worklet_9338539058190_init_data;
  _f.__workletHash = 9338539058190;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
var callMicrotasks = (0, _PlatformChecker.shouldBeUseWeb)() ? function () {} : callMicrotasksOnUIThread;
exports.callMicrotasks = callMicrotasks;
var _worklet_6075541312704_init_data = {
  code: "function runOnUI(worklet) {\n  const {\n    __DEV__,\n    IS_WEB,\n    IS_JEST,\n    NativeReanimatedModule,\n    makeShareableCloneRecursive,\n    callMicrotasks\n  } = this._closure;\n  if (__DEV__ && !IS_WEB && _WORKLET) {\n    throw new Error('runOnUI() cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.');\n  }\n  if (__DEV__ && !IS_WEB && worklet.__workletHash === undefined) {\n    throw new Error('runOnUI() can only be used on worklets');\n  }\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (IS_JEST) {\n      NativeReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function () {\n        'worklet';\n\n        worklet(...args);\n      }));\n      return;\n    }\n    if (__DEV__) {\n      makeShareableCloneRecursive(worklet);\n      makeShareableCloneRecursive(args);\n    }\n    _runOnUIQueue.push([worklet, args]);\n    if (_runOnUIQueue.length === 1) {\n      queueMicrotask(function () {\n        const queue = _runOnUIQueue;\n        _runOnUIQueue = [];\n        NativeReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function () {\n          'worklet';\n\n          queue.forEach(function (_ref) {\n            let [worklet, args] = _ref;\n            worklet(...args);\n          });\n          callMicrotasks();\n        }));\n      });\n    }\n  };\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js",
  sourceMap: "{\"version\":3,\"names\":[\"runOnUI\",\"worklet\",\"__DEV__\",\"IS_WEB\",\"IS_JEST\",\"NativeReanimatedModule\",\"makeShareableCloneRecursive\",\"callMicrotasks\",\"_closure\",\"_WORKLET\",\"Error\",\"__workletHash\",\"undefined\",\"_len\",\"arguments\",\"length\",\"args\",\"Array\",\"_key\",\"scheduleOnUI\",\"_runOnUIQueue\",\"push\",\"queueMicrotask\",\"queue\",\"forEach\",\"_ref\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\"],\"mappings\":\"AAgDO,SAAAA,OAASA,CAAQC,OAAA,EAAO;EAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,OAAA;IAAAC,sBAAA;IAAAC,2BAAA;IAAAC;EAAA,SAAAC,QAAA;EAG7B,IAAIN,OAAO,IAAI,CAACC,MAAM,IAAIM,QAAQ,EAAE;IAClC,MAAM,IAAIC,KAAK,CAAC,kJAAkJ,CAAC;EACrK;EACA,IAAIR,OAAO,IAAI,CAACC,MAAM,IAAIF,OAAO,CAACU,aAAa,KAAKC,SAAS,EAAE;IAC7D,MAAM,IAAIF,KAAK,CAAC,wCAAwC,CAAC;EAC3D;EACA,OAAO,YAAY;IACjB,KAAK,IAAIG,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,IAAI,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;MACvFF,IAAI,CAACE,IAAI,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;IAC9B;IACA,IAAId,OAAO,EAAE;MAUXC,sBAAsB,CAACc,YAAY,CAACb,2BAA2B,CAAC,YAAM;QACpE,SAAS;;QAETL,OAAO,CAAC,GAAGe,IAAI,CAAC;MAClB,CAAC,CAAC,CAAC;MACH;IACF;IACA,IAAId,OAAO,EAAE;MAMXI,2BAA2B,CAACL,OAAO,CAAC;MACpCK,2BAA2B,CAACU,IAAI,CAAC;IACnC;IACAI,aAAa,CAACC,IAAI,CAAC,CAACpB,OAAO,EAAEe,IAAI,CAAC,CAAC;IACnC,IAAII,aAAa,CAACL,MAAM,KAAK,CAAC,EAAE;MAC9BO,cAAc,CAAC,YAAM;QACnB,MAAMC,KAAK,GAAGH,aAAa;QAC3BA,aAAa,GAAG,EAAE;QAClBf,sBAAsB,CAACc,YAAY,CAACb,2BAA2B,CAAC,YAAM;UACpE,SAAS;;UAETiB,KAAK,CAACC,OAAO,CAAC,UAAAC,IAAI,EAAI;YACpB,IAAI,CAACxB,OAAO,EAAEe,IAAI,CAAC,GAAGS,IAAI;YAC1BxB,OAAO,CAAC,GAAGe,IAAI,CAAC;UAClB,CAAC,CAAC;UACFT,cAAc,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;MACL,CAAC,CAAC;IACJ;EACF,CAAC;AACH\"}"
};
var _worklet_9052027840618_init_data = {
  code: "function anonymous() {\n  const {\n    worklet,\n    args\n  } = this._closure;\n  worklet(...args);\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"worklet\",\"args\",\"_closure\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\"],\"mappings\":\"AAuEsE,SAAAA,SAAMA,CAAA;EAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EAGpEF,OAAO,CAAC,GAAGC,IAAI,CAAC;AAClB\"}"
};
var _worklet_15920347530628_init_data = {
  code: "function anonymous() {\n  const {\n    queue,\n    callMicrotasks\n  } = this._closure;\n  queue.forEach(function (_ref) {\n    let [worklet, args] = _ref;\n    worklet(...args);\n  });\n  callMicrotasks();\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"queue\",\"callMicrotasks\",\"_closure\",\"forEach\",\"_ref\",\"worklet\",\"args\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\"],\"mappings\":\"AA4FwE,SAAAA,SAAMA,CAAA;EAAA;IAAAC,KAAA;IAAAC;EAAA,SAAAC,QAAA;EAGpEF,KAAK,CAACG,OAAO,CAAC,UAAAC,IAAI,EAAI;IACpB,IAAI,CAACC,OAAO,EAAEC,IAAI,CAAC,GAAGF,IAAI;IAC1BC,OAAO,CAAC,GAAGC,IAAI,CAAC;EAClB,CAAC,CAAC;EACFL,cAAc,CAAC,CAAC;AAClB\"}"
};
var runOnUI = function () {
  var _e = [new global.Error(), -7, -27];
  var _f = function _f(worklet) {
    if (__DEV__ && !IS_WEB && _WORKLET) {
      throw new Error('runOnUI() cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.');
    }
    if (__DEV__ && !IS_WEB && worklet.__workletHash === undefined) {
      throw new Error('runOnUI() can only be used on worklets');
    }
    return function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      if (IS_JEST) {
        _NativeReanimated.default.scheduleOnUI((0, _shareables.makeShareableCloneRecursive)(function () {
          var _e = [new global.Error(), -3, -27];
          var _f = function _f() {
            worklet.apply(void 0, args);
          };
          _f._closure = {
            worklet: worklet,
            args: args
          };
          _f.__initData = _worklet_9052027840618_init_data;
          _f.__workletHash = 9052027840618;
          _f.__stackDetails = _e;
          _f.__version = "3.3.0";
          return _f;
        }()));
        return;
      }
      if (__DEV__) {
        (0, _shareables.makeShareableCloneRecursive)(worklet);
        (0, _shareables.makeShareableCloneRecursive)(args);
      }
      _runOnUIQueue.push([worklet, args]);
      if (_runOnUIQueue.length === 1) {
        queueMicrotask(function () {
          var queue = _runOnUIQueue;
          _runOnUIQueue = [];
          _NativeReanimated.default.scheduleOnUI((0, _shareables.makeShareableCloneRecursive)(function () {
            var _e = [new global.Error(), -3, -27];
            var _f = function _f() {
              queue.forEach(function (_ref) {
                var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
                  worklet = _ref2[0],
                  args = _ref2[1];
                worklet.apply(void 0, (0, _toConsumableArray2.default)(args));
              });
              callMicrotasks();
            };
            _f._closure = {
              queue: queue,
              callMicrotasks: callMicrotasks
            };
            _f.__initData = _worklet_15920347530628_init_data;
            _f.__workletHash = 15920347530628;
            _f.__stackDetails = _e;
            _f.__version = "3.3.0";
            return _f;
          }()));
        });
      }
    };
  };
  _f._closure = {
    __DEV__: __DEV__,
    IS_WEB: IS_WEB,
    IS_JEST: IS_JEST,
    NativeReanimatedModule: _NativeReanimated.default,
    makeShareableCloneRecursive: _shareables.makeShareableCloneRecursive,
    callMicrotasks: callMicrotasks
  };
  _f.__initData = _worklet_6075541312704_init_data;
  _f.__workletHash = 6075541312704;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
exports.runOnUI = runOnUI;
var _worklet_5355002833846_init_data = {
  code: "function runOnUIImmediately(worklet) {\n  const {\n    __DEV__,\n    IS_WEB,\n    NativeReanimatedModule,\n    makeShareableCloneRecursive\n  } = this._closure;\n  if (__DEV__ && !IS_WEB && _WORKLET) {\n    throw new Error('runOnUIImmediately() cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.');\n  }\n  if (__DEV__ && !IS_WEB && worklet.__workletHash === undefined) {\n    throw new Error('runOnUIImmediately() can only be used on worklets');\n  }\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    NativeReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function () {\n      'worklet';\n\n      worklet(...args);\n    }));\n  };\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js",
  sourceMap: "{\"version\":3,\"names\":[\"runOnUIImmediately\",\"worklet\",\"__DEV__\",\"IS_WEB\",\"NativeReanimatedModule\",\"makeShareableCloneRecursive\",\"_closure\",\"_WORKLET\",\"Error\",\"__workletHash\",\"undefined\",\"_len2\",\"arguments\",\"length\",\"args\",\"Array\",\"_key2\",\"scheduleOnUI\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\"],\"mappings\":\"AA6GO,SAAAA,kBAASA,CAAmBC,OAAA,EAAO;EAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,sBAAA;IAAAC;EAAA,SAAAC,QAAA;EAGxC,IAAIJ,OAAO,IAAI,CAACC,MAAM,IAAII,QAAQ,EAAE;IAClC,MAAM,IAAIC,KAAK,CAAC,6JAA6J,CAAC;EAChL;EACA,IAAIN,OAAO,IAAI,CAACC,MAAM,IAAIF,OAAO,CAACQ,aAAa,KAAKC,SAAS,EAAE;IAC7D,MAAM,IAAIF,KAAK,CAAC,mDAAmD,CAAC;EACtE;EACA,OAAO,YAAY;IACjB,KAAK,IAAIG,KAAK,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,KAAK,CAAC,EAAEK,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGL,KAAK,EAAEK,KAAK,EAAE,EAAE;MAC7FF,IAAI,CAACE,KAAK,CAAC,GAAGJ,SAAS,CAACI,KAAK,CAAC;IAChC;IACAZ,sBAAsB,CAACa,YAAY,CAACZ,2BAA2B,CAAC,YAAM;MACpE,SAAS;;MAETJ,OAAO,CAAC,GAAGa,IAAI,CAAC;IAClB,CAAC,CAAC,CAAC;EACL,CAAC;AACH\"}"
};
var _worklet_9052027840618_init_data2 = {
  code: "function anonymous() {\n  const {\n    worklet,\n    args\n  } = this._closure;\n  worklet(...args);\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"worklet\",\"args\",\"_closure\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\"],\"mappings\":\"AA0HoE,SAAAA,SAAMA,CAAA;EAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EAGpEF,OAAO,CAAC,GAAGC,IAAI,CAAC;AAClB\"}"
};
var runOnUIImmediately = function () {
  var _e = [new global.Error(), -5, -27];
  var _f = function _f(worklet) {
    if (__DEV__ && !IS_WEB && _WORKLET) {
      throw new Error('runOnUIImmediately() cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.');
    }
    if (__DEV__ && !IS_WEB && worklet.__workletHash === undefined) {
      throw new Error('runOnUIImmediately() can only be used on worklets');
    }
    return function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      _NativeReanimated.default.scheduleOnUI((0, _shareables.makeShareableCloneRecursive)(function () {
        var _e = [new global.Error(), -3, -27];
        var _f = function _f() {
          worklet.apply(void 0, args);
        };
        _f._closure = {
          worklet: worklet,
          args: args
        };
        _f.__initData = _worklet_9052027840618_init_data2;
        _f.__workletHash = 9052027840618;
        _f.__stackDetails = _e;
        _f.__version = "3.3.0";
        return _f;
      }()));
    };
  };
  _f._closure = {
    __DEV__: __DEV__,
    IS_WEB: IS_WEB,
    NativeReanimatedModule: _NativeReanimated.default,
    makeShareableCloneRecursive: _shareables.makeShareableCloneRecursive
  };
  _f.__initData = _worklet_5355002833846_init_data;
  _f.__workletHash = 5355002833846;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
exports.runOnUIImmediately = runOnUIImmediately;
var _worklet_16556756009009_init_data = {
  code: "function anonymous() {}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\"],\"mappings\":\"AAkIY,SAAAA,SAEVA,CAAA\"}"
};
if (__DEV__ && !IS_WEB) {
  var f = function () {
    var _e = [new global.Error(), 1, -27];
    var _f = function _f() {};
    _f._closure = {};
    _f.__initData = _worklet_16556756009009_init_data;
    _f.__workletHash = 16556756009009;
    _f.__stackDetails = _e;
    _f.__version = "3.3.0";
    return _f;
  }();
  if (f.__workletHash === undefined) {
    throw new Error('Failed to create a worklet. Did you forget to add Reanimated Babel plugin in babel.config.js? See installation docs at https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/installation#babel-plugin.');
  }
}
var _worklet_7336242302191_init_data = {
  code: "function runOnJS(fun) {\n  const {\n    makeShareableCloneOnUIRecursive\n  } = this._closure;\n  if (fun.__remoteFunction) {\n    fun = fun.__remoteFunction;\n  }\n  if (!_WORKLET) {\n    return fun;\n  }\n  return function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    _scheduleOnJS(fun, args.length > 0 ? makeShareableCloneOnUIRecursive(args) : undefined);\n  };\n}",
  location: "/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js",
  sourceMap: "{\"version\":3,\"names\":[\"runOnJS\",\"fun\",\"makeShareableCloneOnUIRecursive\",\"_closure\",\"__remoteFunction\",\"_WORKLET\",\"_len3\",\"arguments\",\"length\",\"args\",\"Array\",\"_key3\",\"_scheduleOnJS\",\"undefined\"],\"sources\":[\"/Users/bjaztin/Desktop/taskManagerApp/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\"],\"mappings\":\"AA0IO,SAAAA,OAASA,CAAQC,GAAA,EAAG;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGzB,IAAIF,GAAG,CAACG,gBAAgB,EAAE;IAKxBH,GAAG,GAAGA,GAAG,CAACG,gBAAgB;EAC5B;EACA,IAAI,CAACC,QAAQ,EAAE;IACb,OAAOJ,GAAG;EACZ;EACA,OAAO,YAAY;IACjB,KAAK,IAAIK,KAAK,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,KAAK,CAAC,EAAEK,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGL,KAAK,EAAEK,KAAK,EAAE,EAAE;MAC7FF,IAAI,CAACE,KAAK,CAAC,GAAGJ,SAAS,CAACI,KAAK,CAAC;IAChC;IACAC,aAAa,CAACX,GAAG,EAAEQ,IAAI,CAACD,MAAM,GAAG,CAAC,GAAGN,+BAA+B,CAACO,IAAI,CAAC,GAAGI,SAAS,CAAC;EACzF,CAAC;AACH\"}"
};
var runOnJS = function () {
  var _e = [new global.Error(), -2, -27];
  var _f = function _f(fun) {
    if (fun.__remoteFunction) {
      fun = fun.__remoteFunction;
    }
    if (!_WORKLET) {
      return fun;
    }
    return function () {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }
      _scheduleOnJS(fun, args.length > 0 ? (0, _shareables.makeShareableCloneOnUIRecursive)(args) : undefined);
    };
  };
  _f._closure = {
    makeShareableCloneOnUIRecursive: _shareables.makeShareableCloneOnUIRecursive
  };
  _f.__initData = _worklet_7336242302191_init_data;
  _f.__workletHash = 7336242302191;
  _f.__stackDetails = _e;
  _f.__version = "3.3.0";
  return _f;
}();
exports.runOnJS = runOnJS;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,