5b3248bc5abe0bb9b1e45ede721b1685
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _reactNative = require("react-native");
var _react = _interopRequireWildcard(require("react"));
var _firebase = require("../../firebase");
var _firestore = require("firebase/firestore");
var _auth = require("firebase/auth");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function cov_1xswt0bdrk() {
  var path = "/Users/bjaztin/Desktop/taskManagerApp/src/screens/Register.js";
  var hash = "ca50765a0aaa85ffead1114d04660ba534eabdf3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/bjaztin/Desktop/taskManagerApp/src/screens/Register.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 95,
          column: 1
        }
      },
      "1": {
        start: {
          line: 15,
          column: 26
        },
        end: {
          line: 15,
          column: 38
        }
      },
      "2": {
        start: {
          line: 16,
          column: 28
        },
        end: {
          line: 16,
          column: 40
        }
      },
      "3": {
        start: {
          line: 17,
          column: 34
        },
        end: {
          line: 17,
          column: 46
        }
      },
      "4": {
        start: {
          line: 18,
          column: 42
        },
        end: {
          line: 18,
          column: 54
        }
      },
      "5": {
        start: {
          line: 20,
          column: 23
        },
        end: {
          line: 39,
          column: 3
        }
      },
      "6": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 55
        }
      },
      "8": {
        start: {
          line: 24,
          column: 21
        },
        end: {
          line: 24,
          column: 56
        }
      },
      "9": {
        start: {
          line: 25,
          column: 26
        },
        end: {
          line: 25,
          column: 46
        }
      },
      "10": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 33,
          column: 11
        }
      },
      "11": {
        start: {
          line: 31,
          column: 10
        },
        end: {
          line: 31,
          column: 51
        }
      },
      "12": {
        start: {
          line: 32,
          column: 10
        },
        end: {
          line: 32,
          column: 38
        }
      },
      "13": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 47
        }
      },
      "14": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 52
        }
      },
      "15": {
        start: {
          line: 41,
          column: 2
        },
        end: {
          line: 94,
          column: 4
        }
      },
      "16": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 26
        }
      },
      "17": {
        start: {
          line: 63,
          column: 34
        },
        end: {
          line: 63,
          column: 48
        }
      },
      "18": {
        start: {
          line: 71,
          column: 34
        },
        end: {
          line: 71,
          column: 51
        }
      },
      "19": {
        start: {
          line: 89,
          column: 41
        },
        end: {
          line: 89,
          column: 69
        }
      },
      "20": {
        start: {
          line: 99,
          column: 15
        },
        end: {
          line: 160,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 17
          },
          end: {
            line: 14,
            column: 18
          }
        },
        loc: {
          start: {
            line: 14,
            column: 37
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 23
          },
          end: {
            line: 20,
            column: 24
          }
        },
        loc: {
          start: {
            line: 20,
            column: 29
          },
          end: {
            line: 39,
            column: 3
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 13
          }
        },
        loc: {
          start: {
            line: 22,
            column: 32
          },
          end: {
            line: 34,
            column: 7
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 30,
            column: 17
          }
        },
        loc: {
          start: {
            line: 30,
            column: 22
          },
          end: {
            line: 33,
            column: 9
          }
        },
        line: 30
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 35,
            column: 13
          },
          end: {
            line: 35,
            column: 14
          }
        },
        loc: {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 38,
            column: 7
          }
        },
        line: 35
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 53,
            column: 24
          },
          end: {
            line: 53,
            column: 25
          }
        },
        loc: {
          start: {
            line: 53,
            column: 34
          },
          end: {
            line: 55,
            column: 11
          }
        },
        line: 53
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 63,
            column: 24
          },
          end: {
            line: 63,
            column: 25
          }
        },
        loc: {
          start: {
            line: 63,
            column: 34
          },
          end: {
            line: 63,
            column: 48
          }
        },
        line: 63
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 71,
            column: 24
          },
          end: {
            line: 71,
            column: 25
          }
        },
        loc: {
          start: {
            line: 71,
            column: 34
          },
          end: {
            line: 71,
            column: 51
          }
        },
        line: 71
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 89,
            column: 35
          },
          end: {
            line: 89,
            column: 36
          }
        },
        loc: {
          start: {
            line: 89,
            column: 41
          },
          end: {
            line: 89,
            column: 69
          }
        },
        line: 89
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ca50765a0aaa85ffead1114d04660ba534eabdf3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1xswt0bdrk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1xswt0bdrk();
cov_1xswt0bdrk().s[0]++;
var Register = function Register(_ref) {
  var navigation = _ref.navigation;
  cov_1xswt0bdrk().f[0]++;
  var _ref2 = (cov_1xswt0bdrk().s[1]++, (0, _react.useState)("")),
    _ref3 = (0, _slicedToArray2.default)(_ref2, 2),
    name = _ref3[0],
    setName = _ref3[1];
  var _ref4 = (cov_1xswt0bdrk().s[2]++, (0, _react.useState)("")),
    _ref5 = (0, _slicedToArray2.default)(_ref4, 2),
    email = _ref5[0],
    setEmail = _ref5[1];
  var _ref6 = (cov_1xswt0bdrk().s[3]++, (0, _react.useState)("")),
    _ref7 = (0, _slicedToArray2.default)(_ref6, 2),
    password = _ref7[0],
    setPassword = _ref7[1];
  var _ref8 = (cov_1xswt0bdrk().s[4]++, (0, _react.useState)("")),
    _ref9 = (0, _slicedToArray2.default)(_ref8, 2),
    errorMessage = _ref9[0],
    setErrorMessage = _ref9[1];
  cov_1xswt0bdrk().s[5]++;
  var handleSignUp = function handleSignUp() {
    cov_1xswt0bdrk().f[1]++;
    cov_1xswt0bdrk().s[6]++;
    (0, _auth.createUserWithEmailAndPassword)(_firebase.auth, email, password).then(function (userCredential) {
      cov_1xswt0bdrk().f[2]++;
      cov_1xswt0bdrk().s[7]++;
      console.log("user credential", userCredential);
      var user = (cov_1xswt0bdrk().s[8]++, userCredential._tokenResponse.email);
      var myUserUid = (cov_1xswt0bdrk().s[9]++, _firebase.auth.currentUser.uid);
      cov_1xswt0bdrk().s[10]++;
      (0, _firestore.setDoc)((0, _firestore.doc)(_firebase.db, "users", `${myUserUid}`), {
        email: user,
        name: name
      }).then(function () {
        cov_1xswt0bdrk().f[3]++;
        cov_1xswt0bdrk().s[11]++;
        console.log("user successfully created");
        cov_1xswt0bdrk().s[12]++;
        navigation.replace("LogIn");
      });
    }).catch(function (error) {
      cov_1xswt0bdrk().f[4]++;
      cov_1xswt0bdrk().s[13]++;
      console.log("Sign up failed: ", error);
      cov_1xswt0bdrk().s[14]++;
      setErrorMessage("Invalid user credentials");
    });
  };
  cov_1xswt0bdrk().s[15]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.KeyboardAvoidingView, {
    style: styles.container,
    behavior: "padding",
    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.sectionTitle,
      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.sectionText,
        children: "Create Account"
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.errorText,
        children: errorMessage
      })]
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.inputContainer,
      children: [(0, _jsxRuntime.jsx)(_reactNative.TextInput, {
        testID: "name",
        placeholder: "Name",
        value: name,
        onChangeText: function onChangeText(text) {
          cov_1xswt0bdrk().f[5]++;
          cov_1xswt0bdrk().s[16]++;
          setName(text);
        },
        style: styles.input
      }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {
        testID: "email",
        placeholder: "Email",
        value: email,
        onChangeText: function onChangeText(text) {
          cov_1xswt0bdrk().f[6]++;
          cov_1xswt0bdrk().s[17]++;
          return setEmail(text);
        },
        style: styles.input
      }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {
        testID: "password",
        placeholder: "Password",
        value: password,
        onChangeText: function onChangeText(text) {
          cov_1xswt0bdrk().f[7]++;
          cov_1xswt0bdrk().s[18]++;
          return setPassword(text);
        },
        style: styles.input,
        secureTextEntry: true
      })]
    }), (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.buttonContainer,
      children: (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        style: styles.button,
        onPress: handleSignUp,
        testID: "signup",
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.buttonText,
          children: "Sign Up"
        })
      })
    }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {
      style: styles.subText,
      children: ["Already with Taskly?", " ", (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        onPress: function onPress() {
          cov_1xswt0bdrk().f[8]++;
          cov_1xswt0bdrk().s[19]++;
          return navigation.navigate("LogIn");
        },
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.signUpText,
          children: "Sign In"
        })
      })]
    })]
  });
};
var _default = Register;
exports.default = _default;
var styles = (cov_1xswt0bdrk().s[20]++, _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    flexDirection: "column",
    alignItems: "center",
    justifyContent: "center",
    backgroundColor: "#F2F0E7"
  },
  inputContainer: {
    width: "70%",
    padding: 10
  },
  input: {
    padding: 10,
    marginBottom: 28,
    borderRadius: 10,
    backgroundColor: "lightgray"
  },
  buttonContainer: {
    width: "40%",
    padding: 10,
    alignItems: "center",
    justifyContent: "center",
    backgroundColor: "#D58258",
    borderRadius: 50
  },
  button: {
    width: "100%",
    alignItems: "center"
  },
  buttonText: {
    color: "white",
    fontSize: 16
  },
  sectionTitle: {
    bottom: 10,
    alignItems: "center"
  },
  sectionText: {
    fontSize: 28,
    fontWeight: "bold"
  },
  subText: {
    top: 22,
    textAlign: "center"
  },
  signUpText: {
    top: 2,
    fontWeight: "bold"
  },
  successText: {
    color: "green",
    alignItems: "center",
    justifyContent: "center",
    fontWeight: "bold",
    bottom: 60
  },
  errorText: {
    color: "red",
    marginTop: 10
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,