7c3279e834a070dc4fbd62471dfe5d34
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _TaskCompleteButton = _interopRequireDefault(require("../../../src/components/TaskDetail/TaskCompleteButton"));
var _jsxRuntime = require("react/jsx-runtime");
describe("TaskCompleteButton component", function () {
  test("Renders TaskCompleteButton function when isComplete is false", function () {
    var onPress = jest.fn();
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_TaskCompleteButton.default, {
        isComplete: false,
        onPress: onPress
      })),
      getByTestId = _render.getByTestId;
    var button = getByTestId("completeButton");
    expect(button).toBeTruthy();
  });
  test("When the checked button is pressed, call the onPress function", function () {
    var onPress = jest.fn();
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_TaskCompleteButton.default, {
        isComplete: false,
        onPress: onPress
      })),
      getByTestId = _render2.getByTestId;
    var button = getByTestId("completeButton");
    _reactNative.fireEvent.press(button);
    expect(onPress).toHaveBeenCalledTimes(1);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9UYXNrQ29tcGxldGVCdXR0b24iLCJfanN4UnVudGltZSIsImRlc2NyaWJlIiwidGVzdCIsIm9uUHJlc3MiLCJqZXN0IiwiZm4iLCJfcmVuZGVyIiwicmVuZGVyIiwianN4IiwiZGVmYXVsdCIsImlzQ29tcGxldGUiLCJnZXRCeVRlc3RJZCIsImJ1dHRvbiIsImV4cGVjdCIsInRvQmVUcnV0aHkiLCJfcmVuZGVyMiIsImZpcmVFdmVudCIsInByZXNzIiwidG9IYXZlQmVlbkNhbGxlZFRpbWVzIl0sInNvdXJjZXMiOlsiVGFza0NvbXBsZXRlQnV0dG9uLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgcmVuZGVyLCBmaXJlRXZlbnQgfSBmcm9tIFwiQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmVcIjtcbmltcG9ydCBUYXNrQ29tcGxldGVCdXR0b24gZnJvbSBcIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1Rhc2tEZXRhaWwvVGFza0NvbXBsZXRlQnV0dG9uXCI7XG5cbmRlc2NyaWJlKFwiVGFza0NvbXBsZXRlQnV0dG9uIGNvbXBvbmVudFwiLCAoKSA9PiB7XG4gIHRlc3QoXCJSZW5kZXJzIFRhc2tDb21wbGV0ZUJ1dHRvbiBmdW5jdGlvbiB3aGVuIGlzQ29tcGxldGUgaXMgZmFsc2VcIiwgKCkgPT4ge1xuICAgIGNvbnN0IG9uUHJlc3MgPSBqZXN0LmZuKCk7XG5cbiAgICBjb25zdCB7IGdldEJ5VGVzdElkIH0gPSByZW5kZXIoXG4gICAgICA8VGFza0NvbXBsZXRlQnV0dG9uIGlzQ29tcGxldGU9e2ZhbHNlfSBvblByZXNzPXtvblByZXNzfSAvPlxuICAgICk7XG5cbiAgICAvLyBGaW5kIHRoZSBidXR0b24gYnkgdGVzdCBJRFxuICAgIGNvbnN0IGJ1dHRvbiA9IGdldEJ5VGVzdElkKFwiY29tcGxldGVCdXR0b25cIik7XG5cbiAgICAvLyBFbnN1cmUgdGhhdCB0aGUgdW5jaGVja2VkIGJ1dHRvbiBpcyByZW5kZXJlZFxuICAgIGV4cGVjdChidXR0b24pLnRvQmVUcnV0aHkoKTtcbiAgfSk7XG5cbiAgdGVzdChcIldoZW4gdGhlIGNoZWNrZWQgYnV0dG9uIGlzIHByZXNzZWQsIGNhbGwgdGhlIG9uUHJlc3MgZnVuY3Rpb25cIiwgKCkgPT4ge1xuICAgIGNvbnN0IG9uUHJlc3MgPSBqZXN0LmZuKCk7XG5cbiAgICAvLyBSZW5kZXIgdGhlIGNvbXBvbmVudCB3aXRoIG9uUHJlc3MgZnVuY3Rpb25cbiAgICBjb25zdCB7IGdldEJ5VGVzdElkIH0gPSByZW5kZXIoXG4gICAgICA8VGFza0NvbXBsZXRlQnV0dG9uIGlzQ29tcGxldGU9e2ZhbHNlfSBvblByZXNzPXtvblByZXNzfSAvPlxuICAgICk7XG5cbiAgICAvLyBGaW5kIHRoZSBidXR0b24gYnkgdGVzdCBJRFxuICAgIGNvbnN0IGJ1dHRvbiA9IGdldEJ5VGVzdElkKFwiY29tcGxldGVCdXR0b25cIik7XG5cbiAgICBmaXJlRXZlbnQucHJlc3MoYnV0dG9uKTtcblxuICAgIGV4cGVjdChvblByZXNzKS50b0hhdmVCZWVuQ2FsbGVkVGltZXMoMSk7XG4gIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxZQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxtQkFBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQXVGLElBQUFHLFdBQUEsR0FBQUgsT0FBQTtBQUV2RkksUUFBUSxDQUFDLDhCQUE4QixFQUFFLFlBQU07RUFDN0NDLElBQUksQ0FBQyw4REFBOEQsRUFBRSxZQUFNO0lBQ3pFLElBQU1DLE9BQU8sR0FBR0MsSUFBSSxDQUFDQyxFQUFFLENBQUMsQ0FBQztJQUV6QixJQUFBQyxPQUFBLEdBQXdCLElBQUFDLG1CQUFNLEVBQzVCLElBQUFQLFdBQUEsQ0FBQVEsR0FBQSxFQUFDVCxtQkFBQSxDQUFBVSxPQUFrQjtRQUFDQyxVQUFVLEVBQUUsS0FBTTtRQUFDUCxPQUFPLEVBQUVBO01BQVEsQ0FBRSxDQUM1RCxDQUFDO01BRk9RLFdBQVcsR0FBQUwsT0FBQSxDQUFYSyxXQUFXO0lBS25CLElBQU1DLE1BQU0sR0FBR0QsV0FBVyxDQUFDLGdCQUFnQixDQUFDO0lBRzVDRSxNQUFNLENBQUNELE1BQU0sQ0FBQyxDQUFDRSxVQUFVLENBQUMsQ0FBQztFQUM3QixDQUFDLENBQUM7RUFFRlosSUFBSSxDQUFDLCtEQUErRCxFQUFFLFlBQU07SUFDMUUsSUFBTUMsT0FBTyxHQUFHQyxJQUFJLENBQUNDLEVBQUUsQ0FBQyxDQUFDO0lBR3pCLElBQUFVLFFBQUEsR0FBd0IsSUFBQVIsbUJBQU0sRUFDNUIsSUFBQVAsV0FBQSxDQUFBUSxHQUFBLEVBQUNULG1CQUFBLENBQUFVLE9BQWtCO1FBQUNDLFVBQVUsRUFBRSxLQUFNO1FBQUNQLE9BQU8sRUFBRUE7TUFBUSxDQUFFLENBQzVELENBQUM7TUFGT1EsV0FBVyxHQUFBSSxRQUFBLENBQVhKLFdBQVc7SUFLbkIsSUFBTUMsTUFBTSxHQUFHRCxXQUFXLENBQUMsZ0JBQWdCLENBQUM7SUFFNUNLLHNCQUFTLENBQUNDLEtBQUssQ0FBQ0wsTUFBTSxDQUFDO0lBRXZCQyxNQUFNLENBQUNWLE9BQU8sQ0FBQyxDQUFDZSxxQkFBcUIsQ0FBQyxDQUFDLENBQUM7RUFDMUMsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDIn0=