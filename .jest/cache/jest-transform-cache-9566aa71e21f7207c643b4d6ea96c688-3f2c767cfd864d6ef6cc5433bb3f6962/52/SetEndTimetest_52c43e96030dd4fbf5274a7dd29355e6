6594b2e4a3dcb06da6c455ce062266c9
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _SetEndTime = _interopRequireDefault(require("../../../src/components/TaskScreenFeatures/SetEndTime"));
var _jsxRuntime = require("react/jsx-runtime");
describe("SetEndTime component", function () {
  test("Render SetEndTime function correctly", (0, _asyncToGenerator2.default)(function* () {
    var selectedEndTime = new Date();
    var onSelectedEndTimeChangeMock = jest.fn();
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_SetEndTime.default, {
        selectedEndTime: selectedEndTime,
        onSelectedEndTimeChange: onSelectedEndTimeChangeMock
      })),
      getByText = _render.getByText,
      getByTestId = _render.getByTestId,
      queryByTestId = _render.queryByTestId;
    expect(getByText("End Time")).toBeDefined();
    expect(getByTestId("timeSwitch")).toBeDefined();
    expect(queryByTestId("timePicker")).toBeNull();
    var timeSwitch = getByTestId("timeSwitch");
    (0, _reactNative.act)(function () {
      _reactNative.fireEvent.press(timeSwitch);
    });
    yield (0, _reactNative.waitFor)(function () {
      expect(queryByTestId("timePicker")).toBeDefined();
    });
  }));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9TZXRFbmRUaW1lIiwiX2pzeFJ1bnRpbWUiLCJkZXNjcmliZSIsInRlc3QiLCJfYXN5bmNUb0dlbmVyYXRvcjIiLCJkZWZhdWx0Iiwic2VsZWN0ZWRFbmRUaW1lIiwiRGF0ZSIsIm9uU2VsZWN0ZWRFbmRUaW1lQ2hhbmdlTW9jayIsImplc3QiLCJmbiIsIl9yZW5kZXIiLCJyZW5kZXIiLCJqc3giLCJvblNlbGVjdGVkRW5kVGltZUNoYW5nZSIsImdldEJ5VGV4dCIsImdldEJ5VGVzdElkIiwicXVlcnlCeVRlc3RJZCIsImV4cGVjdCIsInRvQmVEZWZpbmVkIiwidG9CZU51bGwiLCJ0aW1lU3dpdGNoIiwiYWN0IiwiZmlyZUV2ZW50IiwicHJlc3MiLCJ3YWl0Rm9yIl0sInNvdXJjZXMiOlsiU2V0RW5kVGltZS50ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHJlbmRlciwgZmlyZUV2ZW50LCBhY3QsIHdhaXRGb3IgfSBmcm9tIFwiQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmVcIjtcbmltcG9ydCBTZXRFbmRUaW1lIGZyb20gXCIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9UYXNrU2NyZWVuRmVhdHVyZXMvU2V0RW5kVGltZVwiO1xuXG5kZXNjcmliZShcIlNldEVuZFRpbWUgY29tcG9uZW50XCIsICgpID0+IHtcbiAgdGVzdChcIlJlbmRlciBTZXRFbmRUaW1lIGZ1bmN0aW9uIGNvcnJlY3RseVwiLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3Qgc2VsZWN0ZWRFbmRUaW1lID0gbmV3IERhdGUoKTtcbiAgICBjb25zdCBvblNlbGVjdGVkRW5kVGltZUNoYW5nZU1vY2sgPSBqZXN0LmZuKCk7XG5cbiAgICBjb25zdCB7IGdldEJ5VGV4dCwgZ2V0QnlUZXN0SWQsIHF1ZXJ5QnlUZXN0SWQgfSA9IHJlbmRlcihcbiAgICAgIDxTZXRFbmRUaW1lXG4gICAgICAgIHNlbGVjdGVkRW5kVGltZT17c2VsZWN0ZWRFbmRUaW1lfVxuICAgICAgICBvblNlbGVjdGVkRW5kVGltZUNoYW5nZT17b25TZWxlY3RlZEVuZFRpbWVDaGFuZ2VNb2NrfVxuICAgICAgLz5cbiAgICApO1xuXG4gICAgZXhwZWN0KGdldEJ5VGV4dChcIkVuZCBUaW1lXCIpKS50b0JlRGVmaW5lZCgpO1xuICAgIGV4cGVjdChnZXRCeVRlc3RJZChcInRpbWVTd2l0Y2hcIikpLnRvQmVEZWZpbmVkKCk7XG5cbiAgICBleHBlY3QocXVlcnlCeVRlc3RJZChcInRpbWVQaWNrZXJcIikpLnRvQmVOdWxsKCk7XG5cbiAgICBjb25zdCB0aW1lU3dpdGNoID0gZ2V0QnlUZXN0SWQoXCJ0aW1lU3dpdGNoXCIpO1xuICAgIGFjdCgoKSA9PiB7XG4gICAgICBmaXJlRXZlbnQucHJlc3ModGltZVN3aXRjaCk7XG4gICAgfSk7XG5cbiAgICBhd2FpdCB3YWl0Rm9yKCgpID0+IHtcbiAgICAgIGV4cGVjdChxdWVyeUJ5VGVzdElkKFwidGltZVBpY2tlclwiKSkudG9CZURlZmluZWQoKTtcblxuICAgIH0pO1xuICB9KTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLFdBQUEsR0FBQUgsc0JBQUEsQ0FBQUMsT0FBQTtBQUErRSxJQUFBRyxXQUFBLEdBQUFILE9BQUE7QUFFL0VJLFFBQVEsQ0FBQyxzQkFBc0IsRUFBRSxZQUFNO0VBQ3JDQyxJQUFJLENBQUMsc0NBQXNDLE1BQUFDLGtCQUFBLENBQUFDLE9BQUEsRUFBRSxhQUFZO0lBQ3ZELElBQU1DLGVBQWUsR0FBRyxJQUFJQyxJQUFJLENBQUMsQ0FBQztJQUNsQyxJQUFNQywyQkFBMkIsR0FBR0MsSUFBSSxDQUFDQyxFQUFFLENBQUMsQ0FBQztJQUU3QyxJQUFBQyxPQUFBLEdBQWtELElBQUFDLG1CQUFNLEVBQ3RELElBQUFYLFdBQUEsQ0FBQVksR0FBQSxFQUFDYixXQUFBLENBQUFLLE9BQVU7UUFDVEMsZUFBZSxFQUFFQSxlQUFnQjtRQUNqQ1EsdUJBQXVCLEVBQUVOO01BQTRCLENBQ3RELENBQ0gsQ0FBQztNQUxPTyxTQUFTLEdBQUFKLE9BQUEsQ0FBVEksU0FBUztNQUFFQyxXQUFXLEdBQUFMLE9BQUEsQ0FBWEssV0FBVztNQUFFQyxhQUFhLEdBQUFOLE9BQUEsQ0FBYk0sYUFBYTtJQU83Q0MsTUFBTSxDQUFDSCxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQ0ksV0FBVyxDQUFDLENBQUM7SUFDM0NELE1BQU0sQ0FBQ0YsV0FBVyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUNHLFdBQVcsQ0FBQyxDQUFDO0lBRS9DRCxNQUFNLENBQUNELGFBQWEsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDRyxRQUFRLENBQUMsQ0FBQztJQUU5QyxJQUFNQyxVQUFVLEdBQUdMLFdBQVcsQ0FBQyxZQUFZLENBQUM7SUFDNUMsSUFBQU0sZ0JBQUcsRUFBQyxZQUFNO01BQ1JDLHNCQUFTLENBQUNDLEtBQUssQ0FBQ0gsVUFBVSxDQUFDO0lBQzdCLENBQUMsQ0FBQztJQUVGLE1BQU0sSUFBQUksb0JBQU8sRUFBQyxZQUFNO01BQ2xCUCxNQUFNLENBQUNELGFBQWEsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDRSxXQUFXLENBQUMsQ0FBQztJQUVuRCxDQUFDLENBQUM7RUFDSixDQUFDLEVBQUM7QUFDSixDQUFDLENBQUMifQ==