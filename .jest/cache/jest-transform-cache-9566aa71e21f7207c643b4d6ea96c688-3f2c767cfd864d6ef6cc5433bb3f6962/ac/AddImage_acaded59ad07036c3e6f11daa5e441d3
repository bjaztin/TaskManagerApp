30f11a6216c9e9b50f3f09602f2a6f18
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _reactNative = require("react-native");
var _react = _interopRequireWildcard(require("react"));
var ImagePicker = _interopRequireWildcard(require("expo-image-picker"));
var _vectorIcons = require("@expo/vector-icons");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function cov_2mjfgsqes2() {
  var path = "/Users/bjaztin/Desktop/taskManagerApp/src/components/TaskScreenFeatures/AddImage.js";
  var hash = "57de400f8239f263602c7426c173f62a03d1e785";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/bjaztin/Desktop/taskManagerApp/src/components/TaskScreenFeatures/AddImage.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 44,
          column: 1
        }
      },
      "1": {
        start: {
          line: 8,
          column: 28
        },
        end: {
          line: 8,
          column: 51
        }
      },
      "2": {
        start: {
          line: 10,
          column: 22
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "3": {
        start: {
          line: 11,
          column: 17
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "4": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 24
        }
      },
      "5": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 24,
          column: 5
        }
      },
      "6": {
        start: {
          line: 21,
          column: 28
        },
        end: {
          line: 21,
          column: 44
        }
      },
      "7": {
        start: {
          line: 22,
          column: 6
        },
        end: {
          line: 22,
          column: 34
        }
      },
      "8": {
        start: {
          line: 23,
          column: 6
        },
        end: {
          line: 23,
          column: 41
        }
      },
      "9": {
        start: {
          line: 27,
          column: 2
        },
        end: {
          line: 43,
          column: 4
        }
      },
      "10": {
        start: {
          line: 48,
          column: 15
        },
        end: {
          line: 61,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 18
          }
        },
        loc: {
          start: {
            line: 6,
            column: 57
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 22
          },
          end: {
            line: 10,
            column: 23
          }
        },
        loc: {
          start: {
            line: 10,
            column: 34
          },
          end: {
            line: 25,
            column: 3
          }
        },
        line: 10
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 9
          },
          end: {
            line: 40,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 9
          },
          end: {
            line: 34,
            column: 14
          }
        }, {
          start: {
            line: 35,
            column: 10
          },
          end: {
            line: 39,
            column: 12
          }
        }],
        line: 34
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "57de400f8239f263602c7426c173f62a03d1e785"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2mjfgsqes2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2mjfgsqes2();
cov_2mjfgsqes2().s[0]++;
var AddImage = function AddImage(_ref) {
  var selectedImage = _ref.selectedImage,
    onSelectedImage = _ref.onSelectedImage;
  cov_2mjfgsqes2().f[0]++;
  var _ref2 = (cov_2mjfgsqes2().s[1]++, (0, _react.useState)(selectedImage)),
    _ref3 = (0, _slicedToArray2.default)(_ref2, 2),
    image = _ref3[0],
    setImage = _ref3[1];
  cov_2mjfgsqes2().s[2]++;
  var thisIsImage = function () {
    var _ref4 = (0, _asyncToGenerator2.default)(function* () {
      cov_2mjfgsqes2().f[1]++;
      var result = (cov_2mjfgsqes2().s[3]++, yield ImagePicker.launchImageLibraryAsync({
        mediaTypes: ImagePicker.MediaTypeOptions.All,
        allowsEditing: true,
        aspect: [4, 3],
        quality: 1
      }));
      cov_2mjfgsqes2().s[4]++;
      console.log(result);
      cov_2mjfgsqes2().s[5]++;
      if (!result.canceled) {
        cov_2mjfgsqes2().b[0][0]++;
        var selectedAsset = (cov_2mjfgsqes2().s[6]++, result.assets[0]);
        cov_2mjfgsqes2().s[7]++;
        setImage(selectedAsset.uri);
        cov_2mjfgsqes2().s[8]++;
        onSelectedImage(selectedAsset.uri);
      } else {
        cov_2mjfgsqes2().b[0][1]++;
      }
    });
    return function thisIsImage() {
      return _ref4.apply(this, arguments);
    };
  }();
  cov_2mjfgsqes2().s[9]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    children: [(0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
      onPress: thisIsImage,
      style: styles.iconImage,
      children: (0, _jsxRuntime.jsx)(_vectorIcons.Ionicons, {
        name: "image",
        size: 24,
        color: "gray"
      })
    }), (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.imageContainer,
      children: (cov_2mjfgsqes2().b[1][0]++, image) && (cov_2mjfgsqes2().b[1][1]++, (0, _jsxRuntime.jsx)(_reactNative.Image, {
        source: {
          uri: image
        },
        style: styles.image,
        testID: "image"
      }))
    })]
  });
};
var _default = AddImage;
exports.default = _default;
var styles = (cov_2mjfgsqes2().s[10]++, _reactNative.StyleSheet.create({
  iconImage: {
    marginLeft: 8
  },
  imageContainer: {
    marginTop: 5,
    marginLeft: 8
  },
  image: {
    borderRadius: 10,
    width: 50,
    height: 50
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX3JlYWN0IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJJbWFnZVBpY2tlciIsIl92ZWN0b3JJY29ucyIsIl9qc3hSdW50aW1lIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsImNvdl8ybWpmZ3NxZXMyIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJ0eXBlIiwibG9jYXRpb25zIiwidW5kZWZpbmVkIiwicyIsImYiLCJiIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIkFkZEltYWdlIiwiX3JlZiIsInNlbGVjdGVkSW1hZ2UiLCJvblNlbGVjdGVkSW1hZ2UiLCJfcmVmMiIsInVzZVN0YXRlIiwiX3JlZjMiLCJfc2xpY2VkVG9BcnJheTIiLCJpbWFnZSIsInNldEltYWdlIiwidGhpc0lzSW1hZ2UiLCJfcmVmNCIsIl9hc3luY1RvR2VuZXJhdG9yMiIsInJlc3VsdCIsImxhdW5jaEltYWdlTGlicmFyeUFzeW5jIiwibWVkaWFUeXBlcyIsIk1lZGlhVHlwZU9wdGlvbnMiLCJBbGwiLCJhbGxvd3NFZGl0aW5nIiwiYXNwZWN0IiwicXVhbGl0eSIsImNvbnNvbGUiLCJsb2ciLCJjYW5jZWxlZCIsInNlbGVjdGVkQXNzZXQiLCJhc3NldHMiLCJ1cmkiLCJhcHBseSIsImFyZ3VtZW50cyIsImpzeHMiLCJWaWV3IiwiY2hpbGRyZW4iLCJqc3giLCJUb3VjaGFibGVPcGFjaXR5Iiwib25QcmVzcyIsInN0eWxlIiwic3R5bGVzIiwiaWNvbkltYWdlIiwiSW9uaWNvbnMiLCJzaXplIiwiY29sb3IiLCJpbWFnZUNvbnRhaW5lciIsIkltYWdlIiwic291cmNlIiwidGVzdElEIiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsIm1hcmdpbkxlZnQiLCJtYXJnaW5Ub3AiLCJib3JkZXJSYWRpdXMiLCJ3aWR0aCIsImhlaWdodCJdLCJzb3VyY2VzIjpbIkFkZEltYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0eWxlU2hlZXQsIFZpZXcsIFRvdWNoYWJsZU9wYWNpdHksIEltYWdlIH0gZnJvbSBcInJlYWN0LW5hdGl2ZVwiO1xuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgKiBhcyBJbWFnZVBpY2tlciBmcm9tIFwiZXhwby1pbWFnZS1waWNrZXJcIjtcbmltcG9ydCB7IElvbmljb25zIH0gZnJvbSBcIkBleHBvL3ZlY3Rvci1pY29uc1wiO1xuXG5jb25zdCBBZGRJbWFnZSA9ICh7IHNlbGVjdGVkSW1hZ2UsIG9uU2VsZWN0ZWRJbWFnZSB9KSA9PiB7XG5cbiAgY29uc3QgW2ltYWdlLCBzZXRJbWFnZV0gPSB1c2VTdGF0ZShzZWxlY3RlZEltYWdlKTtcblxuICBjb25zdCB0aGlzSXNJbWFnZSA9IGFzeW5jICgpID0+IHtcbiAgICBsZXQgcmVzdWx0ID0gYXdhaXQgSW1hZ2VQaWNrZXIubGF1bmNoSW1hZ2VMaWJyYXJ5QXN5bmMoe1xuICAgICAgbWVkaWFUeXBlczogSW1hZ2VQaWNrZXIuTWVkaWFUeXBlT3B0aW9ucy5BbGwsXG4gICAgICBhbGxvd3NFZGl0aW5nOiB0cnVlLFxuICAgICAgYXNwZWN0OiBbNCwgM10sXG4gICAgICBxdWFsaXR5OiAxLFxuICAgIH0pO1xuXG4gICAgY29uc29sZS5sb2cocmVzdWx0KTtcblxuICAgIGlmICghcmVzdWx0LmNhbmNlbGVkKSB7XG4gICAgICBjb25zdCBzZWxlY3RlZEFzc2V0ID0gcmVzdWx0LmFzc2V0c1swXTtcbiAgICAgIHNldEltYWdlKHNlbGVjdGVkQXNzZXQudXJpKTtcbiAgICAgIG9uU2VsZWN0ZWRJbWFnZShzZWxlY3RlZEFzc2V0LnVyaSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPFZpZXc+XG4gICAgICA8VG91Y2hhYmxlT3BhY2l0eSBvblByZXNzPXt0aGlzSXNJbWFnZX0gc3R5bGU9e3N0eWxlcy5pY29uSW1hZ2V9PlxuICAgICAgICA8SW9uaWNvbnMgbmFtZT1cImltYWdlXCIgc2l6ZT17MjR9IGNvbG9yPVwiZ3JheVwiIC8+XG4gICAgICA8L1RvdWNoYWJsZU9wYWNpdHk+XG5cbiAgICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMuaW1hZ2VDb250YWluZXJ9PlxuICAgICAgICB7aW1hZ2UgJiYgKFxuICAgICAgICAgIDxJbWFnZVxuICAgICAgICAgICAgc291cmNlPXt7IHVyaTogaW1hZ2UgfX1cbiAgICAgICAgICAgIHN0eWxlPXtzdHlsZXMuaW1hZ2V9XG4gICAgICAgICAgICB0ZXN0SUQ9XCJpbWFnZVwiXG4gICAgICAgICAgLz5cbiAgICAgICAgKX1cbiAgICAgIDwvVmlldz5cbiAgICA8L1ZpZXc+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBBZGRJbWFnZTtcblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICBpY29uSW1hZ2U6IHtcbiAgICBtYXJnaW5MZWZ0OiA4LFxuICB9LFxuICBpbWFnZUNvbnRhaW5lcjoge1xuICAgIG1hcmdpblRvcDogNSxcbiAgICBtYXJnaW5MZWZ0OiA4LFxuICB9LFxuICBpbWFnZToge1xuICAgIGJvcmRlclJhZGl1czogMTAsXG4gICAgd2lkdGg6IDUwLFxuICAgIGhlaWdodDogNTAsXG4gIH0sXG59KTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLElBQUFBLFlBQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLE1BQUEsR0FBQUMsdUJBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFHLFdBQUEsR0FBQUQsdUJBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFJLFlBQUEsR0FBQUosT0FBQTtBQUE4QyxJQUFBSyxXQUFBLEdBQUFMLE9BQUE7QUFBQSxTQUFBTSx5QkFBQUMsV0FBQSxlQUFBQyxPQUFBLGtDQUFBQyxpQkFBQSxPQUFBRCxPQUFBLFFBQUFFLGdCQUFBLE9BQUFGLE9BQUEsWUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLFdBQUEsV0FBQUEsV0FBQSxHQUFBRyxnQkFBQSxHQUFBRCxpQkFBQSxLQUFBRixXQUFBO0FBQUEsU0FBQUwsd0JBQUFTLEdBQUEsRUFBQUosV0FBQSxTQUFBQSxXQUFBLElBQUFJLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLFdBQUFELEdBQUEsUUFBQUEsR0FBQSxvQkFBQUEsR0FBQSx3QkFBQUEsR0FBQSw0QkFBQUUsT0FBQSxFQUFBRixHQUFBLFVBQUFHLEtBQUEsR0FBQVIsd0JBQUEsQ0FBQUMsV0FBQSxPQUFBTyxLQUFBLElBQUFBLEtBQUEsQ0FBQUMsR0FBQSxDQUFBSixHQUFBLFlBQUFHLEtBQUEsQ0FBQUUsR0FBQSxDQUFBTCxHQUFBLFNBQUFNLE1BQUEsV0FBQUMscUJBQUEsR0FBQUMsTUFBQSxDQUFBQyxjQUFBLElBQUFELE1BQUEsQ0FBQUUsd0JBQUEsV0FBQUMsR0FBQSxJQUFBWCxHQUFBLFFBQUFXLEdBQUEsa0JBQUFILE1BQUEsQ0FBQUksU0FBQSxDQUFBQyxjQUFBLENBQUFDLElBQUEsQ0FBQWQsR0FBQSxFQUFBVyxHQUFBLFNBQUFJLElBQUEsR0FBQVIscUJBQUEsR0FBQUMsTUFBQSxDQUFBRSx3QkFBQSxDQUFBVixHQUFBLEVBQUFXLEdBQUEsY0FBQUksSUFBQSxLQUFBQSxJQUFBLENBQUFWLEdBQUEsSUFBQVUsSUFBQSxDQUFBQyxHQUFBLEtBQUFSLE1BQUEsQ0FBQUMsY0FBQSxDQUFBSCxNQUFBLEVBQUFLLEdBQUEsRUFBQUksSUFBQSxZQUFBVCxNQUFBLENBQUFLLEdBQUEsSUFBQVgsR0FBQSxDQUFBVyxHQUFBLFNBQUFMLE1BQUEsQ0FBQUosT0FBQSxHQUFBRixHQUFBLE1BQUFHLEtBQUEsSUFBQUEsS0FBQSxDQUFBYSxHQUFBLENBQUFoQixHQUFBLEVBQUFNLE1BQUEsWUFBQUEsTUFBQTtBQUFBLFNBQUFXLGVBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtNQUFBO1FBQUFELEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBVyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxlQUFBO0lBQUFyQixJQUFBO0VBQUE7RUFBQSxJQUFBc0IsUUFBQSxHQUFBckIsTUFBQSxDQUFBRSxHQUFBLE1BQUFGLE1BQUEsQ0FBQUUsR0FBQTtFQUFBLEtBQUFtQixRQUFBLENBQUF2QixJQUFBLEtBQUF1QixRQUFBLENBQUF2QixJQUFBLEVBQUFDLElBQUEs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